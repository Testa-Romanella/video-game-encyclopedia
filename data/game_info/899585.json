{"id": 899585, "slug": "physics-engine-dillster", "name": "Physics Engine (Dillster)", "name_original": "Physics Engine (Dillster)", "description": "<p>Throughout my Game Physics course, I developed my own physics engine from scratch in C# using Unity.\u00a0 None of the built in Unity physics components are used.\u00a0 I developed my own version of a rigidbody that declares and\u00a0modifies acceleration and velocity.\u00a0 Different types of forces can be added and other features such as force generators that continuously apply forces to objects.\u00a0 I have implemented Oct-Tree spatial partitioning and, while I added a binary space partitioning solution, I only had time to implement it for spheres so it has been removed from the final project.\u00a0 I implemented spring components as well.\u00a0 My final project was implementing friction and resting contacts so objects lose momentum when colliding with surfaces that have a coefficient of friction\u00a0 lower than 1.</p>\n\n<p>There are several controls to the project to showcase the features.</p>\n<p>WASD - movement</p>\n<p>Space - pause physics objects</p>\n<p>T - switch collision methods (between naive collision and oct-tree spatial partitioning)</p>\n<p>Enter - Hold to increase power and release to fire a projectile</p>\n<p>F - switch projectile types, all but the standard cube and sphere disappear after a period of time</p>\n<p>Left and Right Arrows - Increase/Decrease gravity in x axis</p><p>Up and Down Arrows - Increase/Decrease gravity in y axis</p><p>Page Up and Page Down - Increase/Decrease gravity in z axis</p>\n<p>It is worth mentioning that the benefits of spatial partitioning are most obvious when there are a large amount of objects in the scene.\u00a0 The best way to do this is press Enter until the frame rate starts to drop, then press T to switch to Oct-Tree spatial partitioning to see the difference in performance.</p><p>As far as the UI goes, FPS is updated every half second, \"Type\" refers to the collision method being used, and \"Checks\" refers to the number of collision checks since the last time the collision method was changed, not the number of collision checks per second.</p>", "metacritic": null, "released": "2022-12-19", "tba": false, "updated": "2022-12-23T14:57:42", "background_image": "https://media.rawg.io/media/screenshots/1da/1daf6eb3e753b8a467cb77a6d4222177.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 12, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["Dillster"], "genres": [], "publishers": [], "esrb_rating": null}