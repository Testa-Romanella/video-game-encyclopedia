{"id": 861870, "slug": "apple-drop-atacomans", "name": "Apple Drop (ATACOMANS)", "name_original": "Apple Drop (ATACOMANS)", "description": "<p>The context behind this is I wanted to make a game in 100 lines of code or less in Pico-8. Was fun if a little tedious, mostly near the end of the project. Audio and sprites were allowed for my self-assigned rules, and direct downloads are at the bottom of the page under the sourcecode.\u00a0</p><p>This was originally somewhat related to the Pico-1k Challenge but I figured I didn't quite like it, hence went my own route and just did it in \"Under a hundred lines of code\" (The code overlaps on itself sometimes so I barely even qualify for that lol)</p><p>Yeah some bits of it got stacked (such as in the draw function) and I didn't want to stack them but I was pretty short on options. Either way, hope you enjoy!</p>\r\n\r\nSourcecode:\r\n--apple catch, by atacomans.\r\nfunction _init()\r\npt={px=60,py=104,ps=0,pw=8,ph=6,pl=3} --player table\r\nat={aptime=30} ht={hotime=60}\r\nend\r\nfunction appledrop() --this drops the apples\r\nadd(at,{x=rnd(120),y=8,s=1.5,w=6,h=6,xs,ys,xd,yd,life=120,\r\nad=function(self) spr(1,self.x,self.y) end,\r\nuad=function(self)\r\nself.y+=self.s --this is the colition code below. if the xd is lower than the xs (same with yd &amp; yx) then they are considered to be colliding\r\nself.xs=pt.pw*0.5+self.w*0.5\r\nself.ys=pt.ph*0.5+self.h*0.5\r\nself.xd=abs((pt.px+(pt.pw/2))-(self.x+(self.w/2)))\r\nself.yd=abs((pt.py+(pt.ph/2))-(self.y+(self.h/2)))\r\nif self.xd&lt;self.xs and self.yd&lt;self.xs and self.y&lt;100 then\r\npt.ps+=1\r\nsfx(0)\r\ndel(at,self)\r\nend\r\nself.life-=1\r\nif self.life&lt;0 then\r\ndel(at,self)\r\nend\r\nend})\r\nend\r\nfunction hostiledrop()\r\nadd(ht,{hx=rnd(120),hy=8,hs=2,hw=6,hh=6,hxs,hys,hxd,hyd,hlife=48,\r\nhd=function(self) spr(8,self.hx,self.hy) end,\r\nuhd=function(self)\r\nself.hy+=self.hs\r\n--this is the colition code. if the xd is lower than the xs (same with yd &amp; yx) then they are considered to be colliding\r\nself.hxs=pt.pw*0.5+self.hw*0.5\r\nself.hys=pt.ph*0.5+self.hh*0.5\r\nself.hxd=abs((pt.px+(pt.pw/2))-(self.hx+(self.hw/2)))\r\nself.hyd=abs((pt.py+(pt.ph/2))-(self.hy+(self.hh/2)))\r\nif self.hxd&lt;self.hxs and self.hyd&lt;self.hxs and self.hy&lt;100 then\r\npt.pl-=1\r\nsfx(1)\r\ndel(ht,self)\r\nend\r\nself.hlife-=1\r\nif self.hlife&lt;0 then\r\ndel(ht,self)\r\nend\r\nend})\r\nend\r\nfunction _update() --player movement\r\nif btn(0) then\r\npt.px-=2\r\nend\r\nif btn(1) then\r\npt.px+=2\r\nend\r\nif pt.px&gt;120 then\r\npt.px-=2\r\nend\r\nif pt.px&lt;0 then\r\npt.px+=2\r\nend\r\nat.aptime-=1 --this decreases until it hits zero, new apple spawned, timer reset\r\nif at.aptime&lt;1 then\r\nappledrop()\r\nat.aptime=60\r\nend\r\nfor a in all(at) do\r\na:uad()\r\nend\r\nht.hotime-=1 --this drops dangerous stuff on the player\r\nif ht.hotime&lt;1 then\r\nhostiledrop()\r\nht.hotime=60\r\nend\r\nfor h in all(ht) do\r\nh:uhd()\r\nend\r\nif pt.pl&lt;1 then\r\nprint(\"game over ;(\",40,60,8)\r\nstop()\r\nend\r\nend\r\nfunction _draw()\r\ncls() map() line(0,8,127,8,5)\r\nprint(\"playerscore:\",1,1,10) print(pt.ps,49,1,10) print(\"stick no\",60,1,8)\r\nspr(2,pt.px,pt.py) --player\r\nif pt.pl&gt;2 then\r\nspr(7,99,0)\r\nend\r\nif pt.pl&gt;1 then\r\nspr(7,108,0)\r\nend\r\nif pt.pl&gt;0 then\r\nspr(7,117,0)\r\nend\r\nfor a in all(at) do\r\na:ad()\r\nend\r\nfor h in all(ht) do\r\nh:hd()\r\nend\r\nend", "metacritic": null, "released": "2022-10-05", "tba": false, "updated": "2022-10-07T09:46:31", "background_image": "https://media.rawg.io/media/screenshots/e41/e4143c0cc027b77b9fb3ff317a479f5f.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 15, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web", "Linux", "macOS", "PC"], "developers": ["ATACOMANS"], "genres": [], "publishers": [], "esrb_rating": null}