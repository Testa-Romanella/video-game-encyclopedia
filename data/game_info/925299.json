{"id": 925299, "slug": "indy-tandy-trs-80-model-100-by-david-plass", "name": "Indy! (Tandy TRS-80 Model 100) by David Plass", "name_original": "Indy! (Tandy TRS-80 Model 100) by David Plass", "description": "<p>INDY!</p>\n<p>==========</p>\n<p>Written by David Plass for the BASIC 10-liner Contest 2023</p>\n<p>Language: TRS-80 Model 100 BASIC</p>\n<p>Category: PUR-80</p>\n<p>This and other games are available in my GitHub repo at https://github.com/dplassgit/games</p>\n<p>All code in that repo is released under the MIT License.</p>\n\n<p>THE GAME</p>\n<p>==========</p>\n<p>This is a fun and challenging driving simulation!</p>\n<p>Your goal: drive as fast as you can without crashing into the left or right walls of the racetrack!</p>\n<p>Control your racecar using the \"a\" key to move left and the \"d\" key to move right.</p>\n<p>If you can make it through all 10 checkpoints, you win!</p>\n<p>But, if you crash, you lose! Restart using \"RUN\" again.</p>\n\n<p>PROGRAM DESCRIPTION:</p>\n<p>==========</p>\n<p>Source code is in INDY.DO. It will only run on a Tandy 100 or Tandy 102 laptop or emulator.</p>\n<p>0cls:definta-z:s=15:w=11:?\"INDY!\":?:?\"Make it past all 10 checkpoints to win!</p>\n<p>Clear screen &amp; print an introduction.</p>\n<p>Initialize variables:</p>\n<p>\u00a0 Define variables as integer</p>\n<p>\u00a0 s=left side of the race track</p>\n<p>\u00a0 w=width of the track</p>\n<p>1p=c:?:?\"Use 'a' to steer left, 'd' for right.\":?:?\"Hit any key to start...</p>\n<p>Simple instructions. Note, Tandy BASIC lets you omit the trailing closing quote of strings.</p>\n<p>2c=20:p=c:h=w/2:s$=\" \":x$=chr$(132):b$=chr$(255):r!=rnd(peek(63795)):call4811</p>\n<p>More variables:</p>\n<p>\u00a0 c=start column of the car</p>\n<p>\u00a0 p=previous column of the car</p>\n<p>\u00a0 h=half the width</p>\n<p>\u00a0 s$=just a space</p>\n<p>\u00a0 x$=the car character</p>\n<p>\u00a0 b$=the \"wall\" character</p>\n<p>\u00a0 r!=random number seed, via the \"seconds\" variable</p>\n<p>Call 4811 is a ROM routine that waits for the user to hit a key.</p>\n<p>3fori=0to110:ifi&lt;10then?tab(s)b$space$(h-2)10-ispace$(h-(i&gt;0)-1)b$:c=s+h:next</p>\n<p>The main loop: i=counter for the length of the race</p>\n<p>if i&lt;10 then print a \"countdown\" (10-i)</p>\n<p>c=s+h sets the location of the car to the middle of the track.</p>\n<p>Note in TRS-80 BASIC you don't even need semicolons between variables\u00a0</p>\n<p>in a print statement!</p>\n<p>4?@p+240,s$;:?@s+280,b$space$(w)b$;:?@c+280,x$;:ifc&lt;=sorc&gt;s+wthen9</p>\n<p>If it got here it means we're printing the car too.</p>\n<p>Clear the previous (p) location of the car</p>\n<p>Draw the left wall at column 's', then 'w' spaces, then the right wall of the track.</p>\n<p>Draw the car at its location (c).</p>\n<p>If the car hit a wall, it's a crash and you lose, go to line 9.</p>\n<p>5ifi&gt;19andimod10=0thenw=w+(i&lt;80):?@285+s+w,\"Ck\"(i-10)\\10:else?</p>\n<p>If we're at a checkpoint, decrease the width (w) of the racetrack, unless we're past point 80 (so it doesn't get too small.)</p>\n<p>Print the checkpoint number (Ck ##) just past the right side of the track.</p>\n<p>6r!=rnd(1):s=s+(r!&lt;.3)-(r!&gt;.7):s=s-(s&lt;0):ifs&gt;=(35-w)thens=35-w</p>\n<p>Adjust the left side of the racetrack (s) using a random number (r).</p>\n<p>If the random number is less than 0.3, move it left; if it's more than 0.7, move right.</p>\n<p>Prevent the start column (s) from being negative and not too close to the right-hand side.</p>\n<p>7p=c:d$=inkey$:c=c+(d$=\"h\"ord$=\"a\")-(d$=\"l\"ord$=\"d\")</p>\n<p>Save the location of the car, c in p.</p>\n<p>Get a key: if the key is h or a, move left. If it's l or d, move right.</p>\n<p>(h and l are undocumented keys; they correspond to \"move left\" and \"move right\" in vim.)</p>\n<p>8next:?@p+240,s$;:?@s+280,b$string$(w,b$)b$;:?@c+280,x$:?\"You win!\":end</p>\n<p>Go to the next counter.\u00a0</p>\n<p>When the for/next loop is done, it means you haven't crashed, so show a special\u00a0</p>\n<p>line with the racecar in the middle, and the \"You win\" message. End the program.</p>\n<p>9?:?\"CRASH! Final score is:\"i-10</p>\n<p>If we got here (from line 4) we've crashed. The score is i-10 because the first 10\u00a0</p>\n<p>steps are just printing the track.</p>", "metacritic": null, "released": "2023-02-12", "tba": false, "updated": "2023-02-13T05:39:52", "background_image": "https://media.rawg.io/media/screenshots/208/2084befb491bce0d55bdc4880e6d30ae.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 44, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Racing"], "publishers": [], "esrb_rating": null}