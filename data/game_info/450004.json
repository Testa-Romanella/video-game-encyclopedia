{"id": 450004, "slug": "crt-snake", "name": "CRT Snake", "name_original": "CRT Snake", "description": "<p>Or play\u00a0Here.</p>\n<p>A snake game using a CRT filter I made using raw JavaScript. It was fun to make and took me maybe a day. I hope you enjoy and can be inspired!\u00a0</p>\n<p>The CRT itself simply is called from a function that takes pixel width, height, spacing x, spacing y, and default light values in that order. The system runs through each pixel on the screen and sets the alpha to 0 to make everything fully transparent.\u00a0</p>\n<p>Next the System runs through each pixel that is spacing y, and spacing x apart and adds it to an important pixel array. This array is used in the next function, which cycles through row and column of pixels and formats the important pixel data in the CRT pixel structure. This means each important pixel's red, green and blue values are taken out and spread across the width, height and location specified by where the important pixel is located. Note that this step also changes each edited pixel's alpha to 255.</p>\n<p>Then, the CRT runs through each pixel with an alpha value of 0 (The pixels that were not edited) and sets the colour values for red, green, and blue to 0 - making the non-important pixels black.</p>\n<p>This whole function can be called whenever - even multiple times per frame and with different settings (Cool effects). This makes it very diverse.\u00a0<br/></p>", "metacritic": null, "released": "2020-05-29", "tba": false, "updated": "2020-06-01T05:15:34", "background_image": "https://media.rawg.io/media/screenshots/ada/adaf1e62c41e9f218b8b4a58b9a888ba.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 23, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["daniel-morgan"], "genres": ["Puzzle"], "publishers": [], "esrb_rating": null}