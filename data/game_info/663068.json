{"id": 663068, "slug": "playing-with-unity-physics-rube-goldberg-machine", "name": "Playing with Unity Physics: Rube Goldberg Machine", "name_original": "Playing with Unity Physics: Rube Goldberg Machine", "description": "<p>With a sudden earth quake, trees fall and rocks roll. A sports car rushes from the sky, adding a few variables to an ordinary town\u2026\r\n </p>\n<p>\n</p>\n<p>It\u2019s my first time actually using Unity and build an executable<strong> \u201c</strong>game\u201d. I play with the built-in physics engine and explore different components and parameters like rigid body, colliders, constant force, mass, constrains, physics materials, hinges, etc. It works well for most of the time, but could also be very tricky for some \"just right\" accurate collisions. This project is not perfect, for the hanging lamp is designed to roll down the ledger and push down the ball on the roof. For some reason, the lamp behave differently every time it runs by the physics engine. Therefore, the ball is driven by the falling ledger at last. Anyway, I figure out that the Unity physics engine is not as precise as a simulation though, it provides lots of potential for a game design.\u00a0\r\n</p>", "metacritic": null, "released": "2021-09-08", "tba": false, "updated": "2021-09-10T06:15:48", "background_image": "https://media.rawg.io/media/screenshots/52f/52f87bbd9f8db2dcb7395c4accf0c38a.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 22, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["royyang"], "genres": [], "publishers": [], "esrb_rating": null}