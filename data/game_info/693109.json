{"id": 693109, "slug": "prototype-ui-system", "name": "Prototype - UI System", "name_original": "Prototype - UI System", "description": "<p><strong>Intro</strong></p>\n<p>This UI System\u00a0was made as a small project as part of the \"Programming Systems and Architecture\" mission on\u00a0Unity Learn. I'm publishing this to show my approach, thought processes, and decision making during development. I try to keep these short and concise, if you have any further questions or feedback, I'd love to hear from you! Reach me on Twitter at\u00a0@PhilipDrobar.</p>\n<p><strong>Requirements for this:</strong></p>\n<ul><li>Start Menu (this may load into an empty scene!)\r\n</li>\n<li>Options Menu\r\n</li>\n<li>Adjustable Font size/color</li>\n<li>Audio volume (you may have background music, or this can be tied to the volume of audio clips attached to UI components such as buttons)\r\n</li>\n<li>Light mode/dark mode (Changes the color of the UI)\r\n</li>\n<li>Exit application button (note that this won't work on the Webplayer)</li></ul>\n<p><strong>My own goals:</strong></p>\n<ul><li>Make it responsive</li><li>Controllable with keyboard/controller.</li><li>Make elements include/excludable from DarkMode/Theme switching.</li><li>Flexible and scalable, as in easy to add buttons, menus, and submenus.</li></ul>\n<p><strong>Total time:\u00a0about 6 hours from scratch.</strong></p>\n<p><strong>My approach on...</strong></p>\n<p><strong>Dark\u00a0Mode / Theme switching</strong>: This was a bit tricky, as I've never done a theme-able UI before. I\u00a0knew I\u00a0wanted to be able to exclude elements from theme-ing, so I\u00a0needed to be able to grab the different UI elements dynamically, while also not having to manage a lot of references.</p>\n<p>In the end, I created a small \"WindowThemer\" script, which attached to CanvasGroups. All child objects within it that are tagged \"Themed\" will get influenced by the theme setting. The change itself is controlled by an event.</p>\n<p>This way, the UI elements are all cached in Lists separated by Menus, meaning the theme switching shouldn't be to resource costly. This also allows me to make sure different UI components are treated differently in the script.</p>\n<p><strong>Navigation:\u00a0\u00a0</strong>I made sure that the menus and submenus can be navigated with the keyboard/controller by setting all button navigation explicitly. I also created a small NavigationButton script that makes sure the right button is selected when menus open and close.</p>\n<p><strong>What I would do next to improve this prototype:</strong></p>\n<ul><li>Separate MainMenu functionality and UI Managing into two separate scripts, in the interest of speed I kept them in one.</li><li>Create a proper GameManager to do a proper transition to the Play scene and Instantiate/Destroy the MainMenu.</li></ul>", "metacritic": null, "released": "2021-11-11", "tba": false, "updated": "2021-11-12T06:45:17", "background_image": "https://media.rawg.io/media/screenshots/502/50224dda2d47a5e1b8d1414eac69530f.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 9, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["Philip Drobar"], "genres": [], "publishers": [], "esrb_rating": null}