{"id": 556889, "slug": "escape-by-nick-shcherbyna", "name": "Escape by Nick Shcherbyna", "name_original": "Escape by Nick Shcherbyna", "description": "+----------------- PUR-80 BASIC GAME for Mattel Aquarius -----------\r\n| (c) 2021 Nick Shcherbyna (Lviv, UA)     computer.history.lviv@gmail.com |\r\n+-------------------------------------------------------------------\r\n| Instructions /                                                                                                                     |\r\n| You are an alien imprisoned in the underground concentration camp known \r\n| as HANGAR-18.  There are five levels with six floors each, patrolled by \r\n| bots.  You have to avoid sentinels, otherwise mission will restart from \r\n| scratch.  Fortunately bots are a bit dumb.  Run as fast as possible and \r\n| climb up on the ladders using [O]-left, [P]-right, [A]-up and [Z]-down. \r\n|                                                                         \r\n| Use real hardware or VirtualAquarius emulator:                          \r\n|                              https://www.zophar.net/download_file/32834 \r\n|                                                                         \r\n| Use either Util-&gt;Paste to copy the BASIC source from file, or CLOAD the \r\n| tape image using File-&gt;Play Cassette File... Then RUN the game program. \r\n|                                                                         \r\n+----------------------------------------------------------------\r\n| Source Code Explained /                                                 \r\n|-----------------------                                                  \r\n|                                                                         \r\n| Variables:                                                              \r\n| (X, Y) - Alien coordinates                                              \r\n| Z      - Alien address in VRAM                                          \r\n| B      - Saved character in place of alien                              \r\n| C      - Character below of alien                                       \r\n| (U, V) - Sentinel coordinates                                           \r\n| W      - Sentinel address in VRAM                                       \r\n| D      - Saved character in place of sentinel                           \r\n| E      - Character below of sentinel                                    \r\n| H      - Ladder character code                                          \r\n| M      - Floor character code                                           \r\n| S      - Current level minus 1                                          \r\n| K      - Shifted keycode                                                \r\n| R      - Random value                                                   \r\n| A$     - Beep character                                                 \r\n|                                                                         \r\n| Lines:                                                                  \r\n| 0 Init VRAM address (bottom right), randomize if (re)start, iterate all \r\n|   screen characters.                                                    \r\n| 1 Init variables for procedural generation: L for ladder, F for floor.  \r\n| 2 Calculate character and display it. Init alien and bot coordinates.   \r\n| 3 Calculate bot VRAM addr. Check for game over condition and restart.   \r\n| 4 Calculate alien VRAM addr. Put alien sprite, poll keyboard.           \r\n| 5 Determine new alien position. Check whether level is completed.       \r\n| 6 finalize new alien position. Start dealing with sentinel.             \r\n| 7 Put sentinel sprite, determine new vertical position.                 \r\n| 8 Determine new horizontal position. Delay, restore characters in place \r\n|   of sprites.                                                           \r\n| 9 Display message, end game if all levels completed.                    \r\n|                                                                         \r\n+-----------------------------------------------------------------\r\n| Source Code Listing /                                                   \r\n|---------------------                                                    \r\n| Note: Microsoft BASIC in Mattel Aquarius limits line of code to just 72 \r\n|       characters, so the program below is effectively PUR-72 ;-)        \r\n|         111111111122222222223333333333444444444455555555556666666666777 \r\n|123456789012345678901234567890123456789012345678901234567890123456789012 \r\n|         |         |         |         |         |         |         |   \r\n|0A=13248:FORY=0TO24:FORX=1TO38:Z=YAND3:R=RND(2*(S=0)+X+Y):L=PEEK(A+X+40) \r\n|1H=172:M=134:L=Z=1ANDL=MANDC&lt;&gt;HANDR&lt;.2ORZ&lt;&gt;1ANDL=H:F=Z=LAND(C=32ORR&lt;.98) \r\n|2C=32-102*(Y=0ORF)-140*L:POKEA+X,C:NEXTX:A=A-40:NEXTY:U=38:V=4:X=1:Y=6*V \r\n|3W=A+40*V+U:A$=CHR$(7):IFX=UANDY=VTHENPOKEW,209:?A$;A$;A$;CHR$(11);:RUN! \r\n|4Z=A+40*Y+X:B=PEEK(Z):C=PEEK(Z+40):POKEZ,146+(X+YAND1):K=PEEK(14346)-111 \r\n|5X=X+(X&gt;1ANDK=0ANDC&gt;32)-(X&lt;38ANDK=1ANDC&gt;32):Y=Y+(B=HANDK=-14):IFY=0THEN9 \r\n|6Y=Y-(C=32ORC=HANDK=11)::D=PEEK(W)::E=PEEK(W+40)::F=14+5*(U+VAND-(E&gt;32)) \r\n|7POKEW,F-11*(E=32):L=(V&lt;YANDE&lt;&gt;MORE=32)-(V&gt;YANDD=H):REM(c)NickShcherbyna \r\n|8U=U+(L=0)*SGN(U-X):V=V-L:FORI=5*STO50:NEXT:POKEZ,B:POKEW,D:GOTO3ESCAPE! \r\n|9S=S+1:?CHR$(11);\"CONGRATS! Level\";S;\"/5 completed!\";A$;A$;A$:IFS&lt;5THEN0 \r\n|                                                                         \r\n+----------------------------------------------------------------", "metacritic": null, "released": "2021-02-09", "tba": false, "updated": "2021-02-12T07:31:48", "background_image": "https://media.rawg.io/media/screenshots/265/2655fc5b9ae58b46dc6a6fbc0be60ba7.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 18, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Platformer"], "publishers": [], "esrb_rating": null}