{"id": 877147, "slug": "vertiscroll-platformer", "name": "Vertiscroll Platformer", "name_original": "Vertiscroll Platformer", "description": "<p>Game for Trijam #193</p>\r\nControls:\r\n<p>WASD or Arrow Keys = Movement<br/>Space or Z = Jump<br/>Shift or X = Dash (can be used midair)</p>\r\nHow to play:\r\n<p>Red Light!<br/>When the background is red, don't move.<br/>Green Light!<br/>When the background is green, move!</p>\n<p>Use your dash and jump to climb as high as you can when the light is green.<br/>Falling off the bottom is a Game Over!</p>\r\nTip: If the light switches to red while you're mid-jump, you can move freely until you land\r\nDev Notes\r\n<p>This is where I'm just gonna talk about the game and process and whatever. Feel free to read, or don't it's not important to the game.<br/>The theme of the jam was \"Patience\" so my initial idea was a clicker game or something involving the players patience, or the patience of an npc.</p>\n<p>One \"thought trail\" led to another, and I ended up realizing that many childhood games are games of patience! (RLGL and Hide &amp; Seek were the main ones i thought of)<br/>With those games as a \"base\" of sorts, I started thinking from there.<br/>My first idea in this vein was a horror game where you needed to hide in cupboards during red light, and run to the next one during green light.<br/>Thankfully, I realized this was a little (a lot) ambitious for 3 hours...</p>\n<p>So, I thought about what else I could do and eventually landed on doing a 2D Platformer.<br/>I've been wanting to make what I would consider a \"Slick feeling jumping fella\", and I feel like I did a pretty good job of that. Let me know in the comments if it feels good to control. :)</p>\n<p>The hardest part of development was creating content.<br/>I've learned from past jams that using 'Arcade-Like' gameloops and procedural generation help with that.<br/>So I decided on a vertical autoscrolling platformer with random generation- which, is kinda funny because autoscrollers also fit into the theme of \"patience\" in that they're notorious for testing the patience of players.</p>\n<p>But, that's a little off track. Developing the autogeneration was by far the most difficult part of development.<br/>Getting some platforms to show up, that's pretty easy.<br/>Having each of said platforms (reasonably easily) accessible is a completely different matter.<br/>I started out trying to do some really big algorithm that was like 20 lines of code, each line getting and returning multiple variables and generating random number upon random number<br/>BUT... it was horribly optimized.<br/>\r\nMost of the times it called \"make platform\", frametimes would spike and the game would stutter- which is unacceptable.</p>\n<p>Eventually, I added screen-wrapping (the ability to go off the left side of the screen and come back on the right) and ended up with the generator used in the release of the game.</p>\n<p>I wanted to do all the programming first because my skill in programming far outweighs my skills in art, music and sound combined.<br/>Unfortunately, the programming took all 3 hours... whoops.</p>", "metacritic": null, "released": "2022-11-06", "tba": false, "updated": "2022-11-07T12:28:12", "background_image": "https://media.rawg.io/media/screenshots/855/85508db06f8f1cd8682260b9c1b304f4.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 1, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["Aniraster"], "genres": ["Platformer"], "publishers": [], "esrb_rating": null}