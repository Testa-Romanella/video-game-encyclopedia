{"id": 573765, "slug": "ducky-egg-by-psychotimmy", "name": "Ducky Egg by psychotimmy", "name_original": "Ducky Egg by psychotimmy", "description": "<p><strong>Ducky Egg</strong>\n</p>\n<p>A PUR-80 10 line BASIC game for the Sharp MZ-80K. Written by Tim Holyoake, @psychotimmy (twitter)\r\n  </p>\n<p><strong>Game Description:</strong>\n</p>\n<p>Catch the eggs that the flying ducks lay in a blanket.\r\n  </p>\n<p>Control keys:\u00a0\u00a0\u00a0\u00a0 4 \u2013 Move person to the left. (If person is in column 1, then they reappear in column 40) \r\n  </p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6 \u2013 Move person to the right. (If person is in column 40, then they reappear in column 1) \r\n  </p>\n<p>5 \u2013 Deploy a piece of blanket to catch the falling eggs.\r\n  </p>\n<p>For every egg you catch, 5 points are scored. For every egg that hits the ground a point is lost. If an egg hits you, seven points are deducted from your score. If your score reaches -10 you lose. If you score 30 or more <strong>after</strong> the last egg has hit the ground then you win.\r\n  </p>\n<p>An egg hitting the blanket removes the piece of blanket hit and one next to it. (The world wraps around, so the piece of blanket next to the one in column 40 is the one in column one). \r\n  </p>\n<p>\u00a0 \u00a0</p>\n<p>\n</p>\n<p><strong>Line 1 \u2013 </strong>Sets all variables used to 0, with the exception of :\r\n  </p>\n<p>A = the bottom left screen memory location (minus 1),\r\n  </p>\n<p>D = the initial duck location on the screen (minus 1), \r\n  </p>\n<p>W = screen width\r\n  </p>\n<p>P = initial offset for the person \u2013 incremented / decremented as the person moves\r\n  </p>\n<p>X = initial offset for the duck \u2013 incremented (modulo 40) as the duck flies from left to right (and back round from the left again)\r\n  </p>\n<p>M = display code of the person character\r\n  </p>\n<p>G = display code of the ground\r\n  </p>\n<p>V = display code of the duck\r\n  </p>\n<p>E = display code of the egg\r\n  </p>\n<p>R = offset (10 lines) for where the blanket appears when deployed\r\n  </p>\n<p><strong>Line 2</strong> \u2013 clears the screen, sets the tempo for the music, pokes the ground into existence.\r\n  </p>\n<p><strong>Line 3</strong> \u2013 reads the keyboard. Sets H \u2013 the offset \u2013 for any movement. Decides if the duck is going to drop an egg. Sets F to be one more than the value of any numeric key pressed so that a computed goto can be used to either move the duck on one column (line 8), move the person left or right (line 9) or deploy a new piece of blanket (line 10).\r\n  </p>\n<p><strong>Line 4 </strong>\u2013 Can only be reached after line 8 is executed. B is set to the position of the duck minus a row of the display screen \u2013 but this only matters if C = 1. If C = 0 at the start of the execution, then C will be 1 when the second IF statement on the line is executed \u2013 and control returns back to line 3 for keyboard input.\r\n  </p>\n<p><strong>Line 5</strong> \u2013 An egg is being dropped if execution reaches this statement. If there\u2019s nothing below the egg, then it drops a further row (U=0) and execution returns to line 3. If something is there, execution passes to line 6.\r\n  </p>\n<p><strong>Line 6</strong> \u2013 We\u2019ve hit something. Remove the egg from the display and reset the \u2018egg in motion\u2019 variable (C) to zero. If we\u2019ve hit a piece of blanket, increase the score by 5, remove the blanket piece (plus the adjacent piece if it exists), play an \u201cA\u201d and display the updated score.\r\n  </p>\n<p><strong>Line 7</strong> \u2013 If it\u2019s not the blanket, then reduce the score by 1 if the egg hit the ground, or by 7 if the egg hit the person. Play an \u201cE\u201d and update the score. Check to see if we\u2019ve won or lost and stop the game if either condition is true. \r\n  </p>\n<p><strong>Line 8</strong> \u2013 Duck movement.\r\n  </p>\n<p><strong>Line 9</strong> \u2013 Person movement. A random piece of blanket may be removed whenever the person moves.\r\n  </p>\n<p><strong>Line 10</strong> \u2013 Deploy a new piece of blanket.\r\n  </p>\n<p><strong>Emulator:</strong>\n</p>\n<p>The one available from http://takeda-toshiya.my.coocan.jp/mz80k/index.html is recommended. Follow the link at the top of this page to the common source code project, download and extract the binary archive (for Windows XP/Vista/7/8/8.1/10).\r\n  </p>\n<p>In the emulator directory this process creates, you need to install the MZ-80K European fonts and monitor program. These can be downloaded from:\r\n  </p>\n<p>SP-1002 monitor ROM:\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 https://original.sharpmz.org/mz-80k/download/80kmoni.zip \r\n  </p>\n<p>MZ-80K fonts (EU):\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 https://original.sharpmz.org/mz-80k/download/80kcg.zip \r\n  </p>\n<p>Unzip, and rename the monitor ROM to ipl.rom and the font file to font.rom. Place them in the emulator directory (where the mz80k.exe file will be found)</p>\n<p>\n</p>\n<p>Next, load a copy of the Sharp SP-5025 BASIC interpreter. The MZ-80K was supplied with BASIC on tape, rather than pre-loaded in ROM.\r\n  </p>\n<p>A copy of the SP-5025 BASIC interpreter can be downloaded from here: https://original.sharpmz.org/download/sp-5025.zip \r\n  </p>\n<p>Unzip the file and load the resulting .mzf file into the emulator by:\r\n  </p>\n<ol> <li>Typing      LOAD &lt;return&gt; into the emulator window\r\n  </li><li>Selecting      CMT -&gt; Play from the emulator menu and selecting the BASIC SP-5025.mzf      you have just downloaded. \r\n </li></ol>\n<p>\u00a0\r\n  <br/> </p>\n<p>If all is well, the emulator window should now look like this:\r\n  </p>\n<p>\u00a0\r\n  </p>\n<ol> <li>Select      CMT-&gt;Eject to remove the BASIC tape from the emulated tape drive\r\n  </li><li>Type LOAD      &lt;return&gt; into the emulator window\r\n  </li><li>Select      CMT-&gt;Play from the emulator menu and select the DUCKY EGG.wav file      provided for the contest.\r\n </li></ol>\n<p>If all is well, typing LIST <return> into the emulator after the program has loaded should result in the program being displayed. (Note \u2013 if the program fails to load, try rewinding the tape in the CMT menu and then using the play button it provides. The tape controls are idiosyncratic, to say the least).\r\n  </return></p>\n<p>\n</p>\n<p>You\u2019re now ready to RUN! Enjoy!\r\n</p>", "metacritic": null, "released": "2021-03-17", "tba": false, "updated": "2021-03-19T06:30:45", "background_image": "https://media.rawg.io/media/screenshots/1bc/1bc7bdd6c58cbec80f1e5d2a3bf0a358.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 2, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Action"], "publishers": [], "esrb_rating": null}