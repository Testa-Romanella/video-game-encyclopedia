{"id": 584062, "slug": "freefall-by-msx-murcia", "name": "Freefall by MSX Murcia", "name_original": "Freefall by MSX Murcia", "description": "<p># Freefall</p>\n<p>By MSX Murcia \"[MSX.tipolisto.es](http://msx.tipolisto.es/)\"</p>\n<p>Official Web: https://github.com/kikemadrigal/freefall</p>\n\n\n\n<p>## English</p>\n<p>### Introduction</p>\n<p>Game born from the tests of the MSX Murcia programmers for the \"[basic10 liner contest](https://gkanold.wixsite.com/homeputerium)\".</p>\n<p>Gaming platform: MSX1</p>\n<p>The objective of the game is to reach the maximum level and catch as many smiley faces</p>\n<p>Cursors to move the player and space key to jump</p>\n\n<p>### Code</p>\n<p>Initialization</p>\n<p>We define the video mode 256x192 pixels, 8x8 sprites and we remove the sound from the keys</p>\n<p>We dump the sprites in VRAM, routine 110: player from 0 to 3 (plane 0) and 4 the flowerpot (plane 1), the enemy is plane 2</p>\n<p>We paint the stage</p>\n<p>We paint in the upper left part the current level</p>\n<p>Game variables:</p>\n<p>X e Y=player coordinates</p>\n<p>Q1 to Q4 and SR=sprites player</p>\n<p>NI=level</p>\n<p>CO=color of the stage tiles</p>\n<p>H, J=x and y coordinate flowerpot</p>\n<p>D=VRAM address where sprites are defined</p>\n<p>PU=score</p>\n<p>SA=active jump</p>\n<p>Y1=starting position axis y player</p>\n<p>V=jump speed</p>\n<p>* 10 SCREEN1,0,0:RESTORE:GOSUB110:FORR=5TO20:LOCATE,R:PRINT\"b\":LOCATE22,R:PRINT\"b\":NEXT:FORR=1TO21:LOCATER,19:PRINT\"b\":LOCATER,20:PRINT\"b\":LOCATER,18:PRINT\"a\":LOCATER,7:PRINT\"a\":NEXT:X=30:Y=136:Q1=1:Q2=3:Q3=0:Q4=2:J=60:N=2:SR=Q1:CO=0:LOCATE,3:PRINT\"LV\u00a0 1\"</p>\n\n<p>Main loop</p>\n<p>M=key pressed</p>\n<p>If a cursor key is pressed we move the player according to the pressed key</p>\n<p>If player is jumping we update it with routine 105</p>\n<p>We paint the player</p>\n<p>for the animation we will exchange the sprites with swap Q1 to Q4 variables</p>\n<p>* 15 M=STICK(0):ONSAGOSUB105:PUTSPRITE0,(X,Y),15,SR:IFM=3THENSR=Q1:X=X+3:ONSAGOTO20:SWAPQ1,Q2:GOTO20:ELSEIFM=7THENSR=Q3:X=X-3:ONSAGOTO20:SWAPQ3,Q4</p>\n\n<p>We check if there is a collision with the smiley faces, which is tile 98\u00a0</p>\n<p>We update the flowerpot to down</p>\n<p>* 20 D=BASE(5)+((Y/8)+1)*32+(X/8):IFM=3ANDVPEEK(D)=98THENX=X-3:GOTO21:ELSEIFM=7ANDVPEEK(D)=98THENX=X+3:GOTO21</p>\n\n<p>We paint the smiley faces erasing the previous position and generating a new random one on the x axis</p>\n<p>* 21 IFSA=1THENIFVPEEK(D)=1THENSOUND1,0:SOUND7,56:SOUND12,50:SOUND13,0:LOCATEF,9:PRINT\"\u00a0 \":PU=PU+10:LOCATE5,0:PRINT PU:F=RND(1)*18+3:LOCATEF,9:PRINT\"AA\"</p>\n\n<p>We paint and update the flowerpot</p>\n<p>We paint and update the enemy</p>\n<p>* 50 PUTSPRITE1,(H,J),4,4:J=J+N:IFJ&gt;136THENSOUND8,16:SOUND7,55:SOUND12,15:SOUND13,0:FORR=1TO2:PUTSPRITER,(1,209):NEXT:J=60:H=RND(1)*160+20:PUTSPRITE2,(H,47),10,0:CO=CO+1:IFCO&gt;4THENN=N+1:LOCATE3,3:PRINTN-1:CO=0:COLOR=(5,3,RND(1)*7,5):GOTO15ELSEGOTO15ELSE15</p>\n\n<p>End of main loop\u00a0</p>\n<p>Flowerpot collision routine:</p>\n<p>Death sound effect\u00a0</p>\n<p>We paint with a nice game over effect</p>\n<p>We start again</p>\n<p>* 80 SPRITEOFF:FORR=15TO0STEP-2:SOUND8,R:FORT=0TO200STEP5:SOUND0,T:SOUND6,1:SOUND7,50:SOUND13,0:NEXT:NEXT:DEFUSR=&amp;H90:SN=USR(0):FORR=0TO4:PUTSPRITER,(1,209):NEXT:SCREEN1:LOCATE10,10:PRINT\"GAME OVER\":FORR=0TO500:COLORRND(1)*15,1,1:NEXT:GOTO10</p>\n\n<p>Jump update</p>\n<p>* 90 SA=1:Y1=Y:V=8:STRIG(0)OFF:SOUND8,16:SOUND1,1:SOUND7,56:SOUND12,10:SOUND13,0:RETURN</p>\n<p>\u00a0\u00a0</p>\n<p>Jump routine</p>\n<p>* 105 Y=Y-V:IFY<y1-70thenv=-v:returnelseify>Y1THENY=136:SA=0:STRIG(0)ON:V=-V:RETURNELSERETURN</y1-70thenv=-v:returnelseify></p>\n\n<p>Sprite loading routine in VRAM</p>\n<p>* 110 COLOR15,1,1:DEFINTA-Z:H=RND(1)*160+20:FORI=0TO39:READS:VPOKE&amp;H3800+I,S:NEXT:GOSUB130:F=10:LOCATEF,9:PRINT\"AA\":RETURN:DATA24,44,157,73,62,28,103,193,24,52,185,146,124,56,230,131,24,44,157,73,62,12,12,24,24,52,185,146,124,48,48,24,,,34,99,36,24,60,24</p>\n\n<p>When space is pressed we will go to the jump routine of line 90</p>\n<p>* 130 ONSTRIGGOSUB90:STRIG(0)ON:ONSPRITEGOSUB80:SPRITEON:SA=0:KEYOFF:HC=0:PU=0:LOCATE0,0:PRINT\"SCORE\";PU:PUTSPRITE2,(H,47),10,1:FORC=97TO98:FORI=0TO7:READA:VPOKEC*8+I,A:NEXT:NEXT:VPOKE8204,1*16+5:RETURN:DATA,126,255,255,255,255,126,,4,4,4,255,32,32,32,255</p>\n\n<p>## Spanish</p>\n<p>### Introducci\u00f3n</p>\n<p>Juego nacido de las pruebas de los programadores de MSX Murcia para el conscurso basic10 liner: https://gkanold.wixsite.com/homeputerium</p>\n<p>Web oficial: https://github.com/kikemadrigal/freefall</p>\n<p>Plataforma para jugar: MSX1</p>\n<p>El objetivo del juego es llegar al m\u00e1ximo nivel y coger la mayor candtidad de caritas sonrientes</p>\n<p>Cursores para mover al jugador y tecla espacio para saltar</p>\n\n<p>### c\u00f3digo</p>\n<p>Inicializacion</p>\n<p>Definimos el modo de video 256x192 pixeles, sprites de 8x8 y le quitamos el sonido a las teclas</p>\n<p>Volcamos los sprites en VRAM, rutina 110:personaje del 0 al 3 (plano 0) y el 4 la maceta(plano 1), el enemigo es el plano 2</p>\n<p>Pintamos el escenario'</p>\n<p>Pintamos en la parte de arriba izquierda el nivel actual'</p>\n<p>Variables del juego\u00a0</p>\n<p>X e Y=coordenadas del player</p>\n<p>del q1 al q4 y sr=sprite player</p>\n<p>NI=nivel</p>\n<p>CO=color de los tiles del escenario</p>\n<p>H, J=coordenada x e y maceta</p>\n<p>D=direcci\u00f3n VRAM donde est\u00e1n definidos los sprites</p>\n<p>PU=puntuaci\u00f3n</p>\n<p>SA=salto activo</p>\n<p>Y1=posicion inicial eje y salto player</p>\n<p>V=velocidad salto</p>\n<p>* 10 SCREEN1,0,0:RESTORE:GOSUB110:FORR=5TO20:LOCATE,R:PRINT\"b\":LOCATE22,R:PRINT\"b\":NEXT:FORR=1TO21:LOCATER,19:PRINT\"b\":LOCATER,20:PRINT\"b\":LOCATER,18:PRINT\"a\":LOCATER,7:PRINT\"a\":NEXT:X=30:Y=136:Q1=1:Q2=3:Q3=0:Q4=2:J=60:N=2:SR=Q1:CO=0:LOCATE,3:PRINT\"LV\u00a0 1\"\u00a0</p>\n<p>Blucle principal</p>\n<p>M=tecla pulsada</p>\n<p>Si se pulsa una tecla del cursor movemos al personaje seg\u00fan la tecla pulsada</p>\n<p>Si se est\u00e1 saltando lo actualizamos con la rutina 105</p>\n<p>Pintamos al personaje</p>\n<p>para la animaci\u00f3n intercambiaremos los sprites con swap Q1 al Q4</p>\n<p>* 15 M=STICK(0):ONSAGOSUB105:PUTSPRITE0,(X,Y),15,SR:IFM=3THENSR=Q1:X=X+3:ONSAGOTO20:SWAPQ1,Q2:GOTO20:ELSEIFM=7THENSR=Q3:X=X-3:ONSAGOTO20:SWAPQ3,Q4</p>\n<p>Comprobamos si hay una colisi\u00f3n con las caritas sonrientes que es el tile 98\u00a0</p>\n<p>Actualizamos la maceta para que baje</p>\n<p>* 20 D=BASE(5)+((Y/8)+1)*32+(X/8):IFM=3ANDVPEEK(D)=98THENX=X-3:GOTO21:ELSEIFM=7ANDVPEEK(D)=98THENX=X+3:GOTO21</p>\n<p>Pintamos las caritas sonrientes borrando la posici\u00f3n anterior y generando una nueva aletarioa en el eje x</p>\n<p>* 21 IFSA=1THENIFVPEEK(D)=1THENSOUND1,0:SOUND7,56:SOUND12,50:SOUND13,0:LOCATEF,9:PRINT\"\u00a0 \":PU=PU+10:LOCATE5,0:PRINT PU:F=RND(1)*18+3:LOCATEF,9:PRINT\"AA\"</p>\n<p>Pintamos y actualizamos la maceta</p>\n<p>Pintamos y actualizamos el enemigo de arriba</p>\n<p>* 50 PUTSPRITE1,(H,J),4,4:J=J+N:IFJ&gt;136THENSOUND8,16:SOUND7,55:SOUND12,15:SOUND13,0:FORR=1TO2:PUTSPRITER,(1,209):NEXT:J=60:H=RND(1)*160+20:PUTSPRITE2,(H,47),10,0:CO=CO+1:IFCO&gt;4THENN=N+1:LOCATE3,3:PRINTN-1:CO=0:COLOR=(5,3,RND(1)*7,5):GOTO15ELSEGOTO15ELSE15</p>\n<p>Fin del blucle principal</p>\n<p>Rutina colisi\u00f3n con maceta</p>\n<p>Efecto de sonido de muerte</p>\n<p>Pintamos con un efecto bonito game over</p>\n<p>Volvemos a empezar</p>\n<p>* 80 SPRITEOFF:FORR=15TO0STEP-2:SOUND8,R:FORT=0TO200STEP5:SOUND0,T:SOUND6,1:SOUND7,50:SOUND13,0:NEXT:NEXT:DEFUSR=&amp;H90:SN=USR(0):FORR=0TO4:PUTSPRITER,(1,209):NEXT:SCREEN1:LOCATE10,10:PRINT\"GAME OVER\":FORR=0TO500:COLORRND(1)*15,1,1:NEXT:GOTO10</p>\n<p>Actualizaci\u00f3n de salto</p>\n<p>* 90 SA=1:Y1=Y:V=8:STRIG(0)OFF:SOUND8,16:SOUND1,1:SOUND7,56:SOUND12,10:SOUND13,0:RETURN</p>\n<p>Rutina de salto</p>\n<p>* 105 Y=Y-V:IFY<y1-70thenv=-v:returnelseify>Y1THENY=136:SA=0:STRIG(0)ON:V=-V:RETURNELSERETURN</y1-70thenv=-v:returnelseify></p>\n<p>Rutina de carga de sprites en VRAM</p>\n<p>* 110 COLOR15,1,1:DEFINTA-Z:H=RND(1)*160+20:FORI=0TO39:READS:VPOKE&amp;H3800+I,S:NEXT:GOSUB130:F=10:LOCATEF,9:PRINT\"AA\":RETURN:DATA24,44,157,73,62,28,103,193,24,52,185,146,124,56,230,131,24,44,157,73,62,12,12,24,24,52,185,146,124,48,48,24,,,34,99,36,24,60,24</p>\n<p>Cuando se pulse el espacio iremos a la rutina de salto de la l\u00ednea 90</p>\n<p>* 130 ONSTRIGGOSUB90:STRIG(0)ON:ONSPRITEGOSUB80:SPRITEON:SA=0:KEYOFF:HC=0:PU=0:LOCATE0,0:PRINT\"SCORE\";PU:PUTSPRITE2,(H,47),10,1:FORC=97TO98:FORI=0TO7:READA:VPOKEC*8+I,A:NEXT:NEXT:VPOKE8204,1*16+5:RETURN:DATA,126,255,255,255,255,126,,4,4,4,255,32,32,32,255</p>", "metacritic": null, "released": "2021-04-06", "tba": false, "updated": "2021-04-13T02:14:43", "background_image": "https://media.rawg.io/media/screenshots/df5/df5ab257008aa9147d1d9833820ea39a.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 7, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Action"], "publishers": [], "esrb_rating": null}