{"id": 583240, "slug": "rom-run-for-oktogonia-by-victor", "name": "ROM-Run for Oktogonia by victor", "name_original": "ROM-Run for Oktogonia by victor", "description": "<p>\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501</p>\n<p> \u00a0 \u00a0 \u00a0\"ROM-RUN FOR OKTOGONIA\" FOR ZX SPECTRUM 16/48K</p>\n<p>\u00a0 \u00a0</p>\n<p> \u00a0 \u00a0 \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501</p>\n<p> <http: oktogonia.com=\"\"></http:></p>\n<p>Table of Contents</p>\n<p>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</p>\n<p>1. Load instructions</p>\n<p>.. 1. DISCLAIMER</p>\n<p>.. 2. Loading for ZX Spectrum 16k</p>\n<p>.. 3. Loading for ZX Spectrum 48k</p>\n<p>.. 4. Controls</p>\n<p>2. Code and code explanation</p>\n<p>3. License</p>\n<p>You can find the fully game manual on the attached PDF document.</p>\n<p>Also online at\u00a0https://www.oktogonia.com/en/-/rrfo<https: -=\"\" en=\"\" rrfo=\"\" www.oktogonia.com=\"\"></https:></p>\n\n<p>2 Code and code explanation</p>\n<p>\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550</p>\r\n\r\n  \u250c\u2500\u2500\u2500\u2500\r\n  \u2502 0        1         2         3         4         5         6         7         8\r\n  \u2502 12345678901234567890123456789012345678901234567890123456789012345678901234567890\r\n  \u2502 --------------------------------------------------------------------------------\r\n  \u2502 1 DATA 1,-21,18,16,\"!\",2,0.01,\"\u2191\",4: LET L=1: LET W=224: DIM H(21): POKE 23562,0\r\n  \u2502 2 RESTORE : READ I,A,C,P,M$,E,T: PAPER 0: INK L: BORDER 0: CLS : POKE 23692,0\r\n  \u2502 3 LET C=ABS (C+SGN (PEEK (L*985+A)-92)): LET H(I)=C+3: LET I=1+(I AND I&lt;21)\r\n  \u2502 4 LET K=ABS (CODE INKEY$-98): IF K&lt;3 THEN LET P=P+K*2-3: POKE 23692,0: OUT 254,0\r\n  \u2502 5 PRINT AT 21,0;\"oOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoO\",AT 20,C;\"Oo   \": OUT 254,16\r\n  \u2502 6 PRINT INK 7;AT 0,P;\"V\": REM \u00a9 victor@oktogonia.com (https://www.oktogonia.com)\r\n  \u2502 7 LET A=A+1: IF A=W THEN LET L=L+1: LET W=128+L*96: READ M$,E: GO TO 9\r\n  \u2502 8 IF A&lt;0 OR ABS (P-H(I))&lt;=1 THEN GO TO 3: DATA 99,1,\" \u259e\u259e SAVED OKTOGONIA \u259e\u259e\"\r\n  \u2502 9 PRINT #1;AT 0,13-L/9;M$;\" (\";A;\")\": BORDER E: IF L=5 THEN READ L,T,M$: GO TO 9\r\n  \u2502 10 FOR N=0 TO (E-3)*E*4 STEP E-3: BEEP T,24+N: BEEP T,30+N: NEXT N: GO TO 2+T*9\r\n  \u2514\u2500\u2500\u2500\u2500\r\n<p>\u00a0 1. Game Initialization</p>\n<p>\u00a0 \u00a0 \u00a0\u2043 Variables:</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u2022 L: Current Level</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u2022 W: Level depth (total rows)</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u2022 H: Circular queue to hold hole position for each row</p>\n<p>\u00a0 \u00a0 \u00a0POKE 23561,0: Makes the keyboard more responsive.</p>\n<p>\u00a0 \u00a0 \u00a0\u250c\u2500\u2500\u2500\u2500</p>\n<p>\u00a0 \u00a0 \u00a0\u2502 23561: \"REPDEL\" System Variable: \"Time (in 50ths of a second in</p>\n<p>\u00a0 \u00a0 \u00a0\u2502 60ths of a second in N. America) that a key must be held down</p>\n<p>\u00a0 \u00a0 \u00a0\u2502 before it repeats. This starts off at 35, but you can POKE in</p>\n<p>\u00a0 \u00a0 \u00a0\u2502 other values\"</p>\n<p>\u00a0 \u00a0 \u00a0\u2514\u2500\u2500\u2500\u2500</p>\n<p>\u00a0 2. Level Initialization</p>\n<p>\u00a0 \u00a0 \u00a0\u2043 Variables:</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u2022 I: Circular Queue Index</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u2022 A: Current Depth</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u2022 C: Current row hole column</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u2022 P: Player column</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u2022 M$: Current Message</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u2022 E: Current status (2: Fail, 4: Success)</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u2022 T: Time a note must beep</p>\n<p>\u00a0 \u00a0 \u00a0We set INK to the current level (blue, red, magenta, green)</p>\n<p>\u00a0 \u00a0 \u00a0POKE 23692,0: Make the scroll non-stop.</p>\n<p>\u00a0 \u00a0 \u00a0\u250c\u2500\u2500\u2500\u2500</p>\n<p>\u00a0 \u00a0 \u00a0\u2502 23692: \"SCR CT\" Counts scrolls System Variable: \"it is always 1</p>\n<p>\u00a0 \u00a0 \u00a0\u2502 more than the number of scrolls that will be done before</p>\n<p>\u00a0 \u00a0 \u00a0\u2502 stopping with scroll? If you keep poking this with a number</p>\n<p>\u00a0 \u00a0 \u00a0\u2502 bigger than 1 (say 255), the screen will scroll on and on</p>\n<p>\u00a0 \u00a0 \u00a0\u2502 without asking you\"</p>\n<p>\u00a0 \u00a0 \u00a0\u2514\u2500\u2500\u2500\u2500</p>\n<p>\u00a0 3. Level row generation and storing</p>\n<p>\u00a0 \u00a0 \u00a0We calculate the random hole column using the ROM as a</p>\n<p>\u00a0 \u00a0 \u00a0pseudo-random source and avoid slower math functions to keep</p>\n<p>\u00a0 \u00a0 \u00a0the mainloop (lines 3-8) running fast.</p>\n<p>\u00a0 \u00a0 \u00a0We save hole column in our circular queue and advance the</p>\n<p>\u00a0 \u00a0 \u00a0index.</p>\n<p>\u00a0 4. Keyboard reading, player move + Sound FX</p>\n<p>\u00a0 \u00a0 \u00a0We read the keyboard and move the player column if 'A' or 'D'</p>\n<p>\u00a0 \u00a0 \u00a0pressed.</p>\n<p>\u00a0 \u00a0 \u00a0We keep resetting the scroll count to avoid the scroll to</p>\n<p>\u00a0 \u00a0 \u00a0stop. We also pull the speaker to make a sound fx while moving.</p>\n<p>\u00a0 5. Level row display + Sound FX</p>\n<p>\u00a0 \u00a0 \u00a0We print a full ground at last line which makes the full screen</p>\n<p>\u00a0 \u00a0 \u00a0to scroll up, then print the hole. We also keep the speaker</p>\n<p>\u00a0 \u00a0 \u00a0pushed here so the pull when moving makes the sound fx.</p>\n<p>\u00a0 6. Player display</p>\n<p>\u00a0 \u00a0 \u00a0Just prints the player at current position</p>\n<p>\u00a0 7. Row advance and end level check</p>\n<p>\u00a0 \u00a0 \u00a0We increment current depth (A) then check if we achieved level</p>\n<p>\u00a0 \u00a0 \u00a0total depth (W) and increase level an recalculate level depth</p>\n<p>\u00a0 \u00a0 \u00a0if achieved, then set success message and status and go to show</p>\n<p>\u00a0 \u00a0 \u00a0indicators (line 9).</p>\n<p>\u00a0 8. Collision detection</p>\n<p>\u00a0 \u00a0 \u00a0We check collision by looking at first row hole position from</p>\n<p>\u00a0 \u00a0 \u00a0the circular queue. If there is no collision, loop over to</p>\n<p>\u00a0 \u00a0 \u00a0line 3.</p>\n<p>\u00a0 9. Indicators display + End game check</p>\n<p>\u00a0 \u00a0 \u00a0Indicators are set to fail on level setup (line 2) so if we</p>\n<p>\u00a0 \u00a0 \u00a0fall here from previous line because a collision was detected,</p>\n<p>\u00a0 \u00a0 \u00a0fail message and indicators are displayed.</p>\n<p>\u00a0 \u00a0 \u00a0If we jumped here from level success (line 7) success message</p>\n<p>\u00a0 \u00a0 \u00a0and indicators were set so displayed here.</p>\n<p>\u00a0 \u00a0 \u00a0If we have jumped to level 5 we have succeded level 4 and won</p>\n<p>\u00a0 \u00a0 \u00a0the game so we setup game end message and \"music\" (setting beep</p>\n<p>\u00a0 \u00a0 \u00a0note time larger) and we jump recursive to same line to show</p>\n<p>\u00a0 \u00a0 \u00a0end game message and indicators. NOTE: we also changed level to</p>\n<p>\u00a0 \u00a0 \u00a0avoid infinite loop on end game check.</p>\n<p>\u00a0 10. Arpeggio/Music</p>\n<p>\u00a0 \u00a0 \u00a0 \u2043 Does 3 musics:</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u2022 Short down pitch arpeggio to indicate fail</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u2022 Longer up pitch arpeggio to indicate success</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u2022 Melody to indicate end game</p>\n<p>\u00a0 \u00a0 \u00a0 Tricky GO TO: While playing T is 0.01 so the GO TO line evals</p>\n<p>\u00a0 \u00a0 \u00a0 to 2 which starts current level. On end game it evals to 11 so</p>\n<p>\u00a0 \u00a0 \u00a0 the game exits (last line is 10). We can restart the game</p>\n<p>\u00a0 \u00a0 \u00a0 instead of exit if we change the 9 for a -1.</p>\n<p>3 License</p>\n<p>\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550</p>\n<p>\u00a0 \"ROM-Run for OKTOGONIA\" game code \u00a9 victor@oktogonia.com. Released</p>\n<p>\u00a0 under CC BY-NC-ND 4.0.</p>\n<p>\u00a0 ([Creative Commons \u2014 Attribution-NonCommercial-NoDerivatives 4.0</p>\n<p>\u00a0 International \u2014 CC BY-NC-ND 4.0])</p>\n<p>\u00a0 oktogonia.com web and OKTOGONIA games assets are \u00a9</p>\n<p>\u00a0 victor@oktogonia.com. All rights reserved.</p>\n<p>[Creative Commons \u2014 Attribution-NonCommercial-NoDerivatives 4.0</p>\n<p>International \u2014 CC BY-NC-ND 4.0]</p>\n<p><https: 4.0=\"\" by-nc-nd=\"\" creativecommons.org=\"\" legalcode=\"\" licenses=\"\"></https:></p>", "metacritic": null, "released": "2021-04-08", "tba": false, "updated": "2021-04-12T22:10:15", "background_image": "https://media.rawg.io/media/screenshots/2ba/2ba8ace6eab4fed33517e7da7fcd3153.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 31, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Action"], "publishers": [], "esrb_rating": null}