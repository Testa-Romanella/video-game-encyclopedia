{"id": 687468, "slug": "chess-itch-furl", "name": "Chess (itch) (Furl)", "name_original": "Chess (itch) (Furl)", "description": "Chess\r\n<p>An exercise in the MVC programming pattern.</p>\r\nControls\r\nSpaceRestartLeft ArrowUndo1-6Tests\r\n\r\nInfo\r\n<p>As an exercise in separating data, visuals and input, I wrote Chess in Unity using the MVC pattern.</p>\n<ul>\n<li>\r\nLoads an initial board state, then adds each move to an action stack that can be undone using the Left Arrow button.</li>\n<li>\r\nImplements and visualizes valid moves, check, and check mate.</li>\n<li>Prevents players from placing their own king in check.</li>\n<li>Forces players into dealing with check if possible.</li>\n<li>Does not implement castling, en passant, or stalemate.\r\n</li></ul>\r\nThanks\r\n<p>\r\nThanks to @rhys-vdw for being a tremendous help in figuring out how this stuff works.\r\n<br/>\r\nChess font: Cases.</p>", "metacritic": null, "released": "2021-10-31", "tba": false, "updated": "2021-11-01T05:15:21", "background_image": "https://media.rawg.io/media/screenshots/5b2/5b20d6605dbc3491c44a83889135809f.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 14, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["Furl"], "genres": ["Strategy"], "publishers": [], "esrb_rating": null}