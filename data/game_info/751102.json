{"id": 751102, "slug": "fill-the-box-by-rax", "name": "Fill the Box by RAX", "name_original": "Fill the Box by RAX", "description": "<p>10 Line BASIC\u00a0</p>\n<p>=============</p>\n<p>Category : PUR-80\u00a0</p>\n<p>TITLE\u00a0 \u00a0 : Fill The Box</p>\n<p>PLATFORM : Oric Atmos</p>\n<p>LANGUAGE : BASIC 1.1b</p>\n<p>AUTHOR\u00a0 \u00a0: RAX</p>\n\n\n<p>CODE:</p>\n\r\n\r\n---------1---------2---------3---------4---------5---------6---------7--------\r\n0E$=\"####6I######'+'#'+#+'+'+##3%##+'S*####))_2_2))####);S&amp;S&amp;);####A)AA/A/)##\"\r\n1F$=\"#$1@##Z^S#)#&amp;#V+#++,#+###'%$=2%4/4####31&lt;13131####)#3\\3#_B####+'Q@%3U3##\"\r\n2PING:LORES0:INK6:Q=14:W=6:D$=E$+F$:?@16,W+7;\"Level:\"L+1:PLOT15,4,\"FillTheBox\"\r\n3POKE#26A,2:DEFFNC(X)=(DANDX)/X:GOSUB8:X=0:Y=5:P=23:REPEAT:PLOT14,W-2,P-16''''\r\n4K$=KEY$:E=X:R=Y:IFK$&gt;\"\"THENK=ASC(K$):X=X-(K=9)+(K=8):Y=Y-(K=10)+(K=11)'''''''\r\n5Z=SCRN(Q+X,W+Y):IFZ&lt;&gt;20THENX=E:Y=RELSEN=N-1:P=P+1:IFP&gt;19THENP=18:M=N=0ORK=82\r\n6PLOTQ+X,W+Y,P:WAIT9:PLOTQ+X,W+Y,17:UNTILM:IFK&lt;&gt;82THENL=L+1'''''''''''''''''''\r\n7IFL&lt;12THEN2ELSE:PLOT8,5,\"Congratulation! You win!\":END'''''''''''''''''''''''\r\n8I=L*12+1:N=72:FORY=0TO5:FORX=0TO1:D=ASC(MID$(D$,I,1))-35:FORK=0TO5:C=FNC(2^K)\r\n9IFCTHENC=23:N=N-1ELSEC=20:PLOTQ+X*6+K,Y+W,C:NEXT:I=I+1:NEXTX,Y:A$=KEY$:RETURN\r\n<p>RUN</p>\n\n<p>STORY:</p>\n<p>This is a small logic game. The goal is to fill in all the blanks (blue),</p>\n<p>and you can't step on already filled spaces (red). The \"R\" key will restart the level.\u00a0</p>\n<p>The game has 12 levels.</p>\n\n<p>CODE EXPLANATION:</p>\n<p>----------------------------------------</p>\n<p>0E$=\"####6I######'+'#'+#+'+'+##3%##+'S*####))_2_2))####);S&amp;S&amp;);####A)AA/A/)##\"</p>\n<p>\u00a0 \u00a0 E$=\"####6I######'+'#'+#+'+'+##3%##+'S*####))_2_2))####);S&amp;S&amp;);####A)AA/A/)##\" - levels data</p>\n<p>----------------------------------------</p>\n<p>1F$=\"#$1@##Z^S#)#&amp;#V+#++,#+###'%$=2%4/4####31&lt;13131####)#3\\3#_B####+'Q@%3U3##\"</p>\n<p>\u00a0 \u00a0 F$=\"#$1@##Z^S#)#&amp;#V+#++,#+###'%$=2%4/4####31&lt;13131####)#3\\3#_B####+'Q@%3U3##\" - levels data</p>\n<p>----------------------------------------</p>\n<p>2PING:LORES0:INK6:Q=14:W=6:D$=E$+F$:?@16,W+7;\"Level:\"L+1:PLOT15,4,\"FillTheBox\"</p>\n<p>\u00a0 \u00a0 PING\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - little sound efect of bell</p>\n<p>\u00a0 \u00a0 LORES0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - set alternative text mode 0\u00a0</p>\n<p>\u00a0 \u00a0 INK6\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - set cyan ink</p>\n<p>\u00a0 \u00a0 Q=14\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - playground - x start position</p>\n<p>\u00a0 \u00a0 W=6\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- playground - y start position</p>\n<p>\u00a0 \u00a0 D$=E$+F$\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - combines level data into one variable D$</p>\n<p>\u00a0 \u00a0 ?@16,W+7;\"Level:\"L+1\u00a0 \u00a0 - print current level</p>\n<p>\u00a0 \u00a0 PLOT15,4,\"FillTheBox\"\u00a0 \u00a0- print game title</p>\n<p>----------------------------------------</p>\n<p>3POKE#26A,2:DEFFNC(X)=(DANDX)/X:GOSUB8:X=0:Y=5:P=23:REPEAT:PLOT14,W-2,P-16</p>\n<p>\u00a0 \u00a0 POKE#26A,2\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - stop system blinking cursor</p>\n<p>\u00a0 \u00a0 DEFFNC(X)=(DANDX)/X\u00a0 \u00a0 \u00a0- custom function C(X). return one bit from byte (X = bit number)</p>\n<p>\u00a0 \u00a0 GOSUB8\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - print level subroutine</p>\n<p>\u00a0 \u00a0 X=0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- start x position</p>\n<p>\u00a0 \u00a0 Y=5\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- start y position</p>\n<p>\u00a0 \u00a0 P=23\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - currnet cursor color</p>\n<p>\u00a0 \u00a0 REPEAT\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - game loop</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 PLOT14,W-2,P-16\u00a0 \u00a0 \u00a0- print cursor</p>\n<p>----------------------------------------\u00a0 \u00a0 \u00a0 \u00a0</p>\n<p>4K$=KEY$:E=X:R=Y:IFK$&gt;\"\"THENK=ASC(K$):X=X-(K=9)+(K=8):Y=Y-(K=10)+(K=11)</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 K$=KEY$\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- get key into K$</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 E=X\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- set old X pos into E</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 R=Y\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- set old Y pos into E</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 IF K$ &gt; \"\" THEN\u00a0 \u00a0 \u00a0 \u00a0 \u00a0- if key pressed</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 K=ASC(K$)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- get ascii number</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 X=X-(K=9)+(K=8)\u00a0 \u00a0 \u00a0- calc now x pos (if pressed left or rifgt arrow key)</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Y=Y-(K=10)+(K=11)\u00a0 \u00a0- calc now y pos (if pressed up or down arrow key)</p>\n<p>----------------------------------------</p>\n<p>5Z=SCRN(Q+X,W+Y):IFZ&lt;&gt;20THENX=E:Y=RELSEN=N-1:P=P+1:IFP&gt;19THENP=18:M=N=0ORK=82</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 Z=SCRN(Q+X,W+Y)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0- get char into new player position (playground + player)</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 IF Z &lt;&gt; 20 THEN\u00a0 \u00a0 \u00a0 \u00a0 \u00a0- if screen char is not 20 (blue color)</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 X=E\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- x = old x position\u00a0</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Y=R\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- x = old x position\u00a0</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 ELSE</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 N=N-1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- reduce the free positions of the playground counter by 1\u00a0</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 P=P+1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- increase player cursor color</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 IF P &gt; 19 THEN\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - if player cursor color is greater then 19 (20 is blue color like playground color)</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 P=18\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - set player cursoer color on 18 (18 - green color)</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 M = N=0 OR K=82\u00a0 \u00a0 \u00a0- set M (loop wariable) N == 0 (no more free playground positions), or K == 82 (pressed key 'R')</p>\n<p>----------------------------------------</p>\n<p>6PLOTQ+X,W+Y,P:WAIT9:PLOTQ+X,W+Y,17:UNTILM:IFK&lt;&gt;82THENL=L+1</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 PLOTQ+X,W+Y,P\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- print player color cursor</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 WAIT9\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- wait 90 ms</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 PLOTQ+X,W+Y,17\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - print red color cursor</p>\n<p>\u00a0 \u00a0 UNTIL M\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- game loop</p>\n<p>\u00a0 \u00a0 IF K&lt;&gt;82 THEN\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- if not pressed 'R' key</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 L=L+1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- incrase level</p>\n<p>----------------------------------------</p>\n<p>7IFL&lt;12THEN2ELSE:PLOT8,5,\"Congratulation! You win!\":END</p>\n<p>\u00a0 \u00a0 IF L &lt; 12 THEN\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - if not complete all level</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 GOTO 2\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - goto line 2</p>\n<p>\u00a0 \u00a0 ELSE</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 PLOT8,5,\"Congratulation! You win!\" - print congratulation message</p>\n<p>\u00a0 \u00a0 END\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- end</p>\n<p>----------------------------------------</p>\n<p>8I=L*12+1:N=72:FORY=0TO5:FORX=0TO1:D=ASC(MID$(D$,I,1))-35:FORK=0TO5:C=FNC(2^K)</p>\n<p>\u00a0 \u00a0 I=L*12+1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - set index\u00a0</p>\n<p>\u00a0 \u00a0 N=72\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - all free positions in playground</p>\n<p>\u00a0 \u00a0 FORY=0TO5\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- Y loop</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 FORX=0TO1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- X bytes loop (the playground data is contained in 2 bytes for line )</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 D=ASC(MID$(D$,I,1))-35 - get one byte from string data</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 FORK=0TO5\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- loop 6 bits</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 C=FNC(2^K)\u00a0 \u00a0 \u00a0 - get currnet bit</p>\n<p>----------------------------------------</p>\n<p>9IFCTHENC=23:N=N-1ELSEC=20:PLOTQ+X*6+K,Y+W,C:NEXT:I=I+1:NEXTX,Y:A$=KEY$:RETURN</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 IF C THEN\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- if bit set</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 C=23\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - c = 23 (white color)</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 N=N-1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- reduce by one playground free positions counter</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ELSE</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 C=20\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - set 20 (blue color)</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 PLOTQ+X*6+K,Y+W,C\u00a0 \u00a0- print current playground position</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 NEXT</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 I=I+1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- increase string data level index\u00a0\u00a0</p>\n<p>\u00a0 \u00a0 NEXTX,Y</p>\n<p>\u00a0 \u00a0 A$=KEY$\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0- takes a parasitic key if pressed while drawing a level\u00a0</p>\n<p>\u00a0 \u00a0 RETURN\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - return</p>", "metacritic": null, "released": "2022-03-05", "tba": false, "updated": "2022-03-07T06:36:57", "background_image": "https://media.rawg.io/media/screenshots/a72/a72dde68aea71faa0f8bb3678cdbd323.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 10, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Action"], "publishers": [], "esrb_rating": null}