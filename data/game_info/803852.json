{"id": 803852, "slug": "input-juju", "name": "Input (Juju)", "name_original": "Input (Juju)", "description": "<p>\ud83d\udcbd\u00a0GitHub Repo<br/>\r\n\ud83d\udca1\u00a0Quick Start Guide<br/>\r\n\ud83d\udcd6\u00a0Documentation<br/>\n</p>\n<p><strong>Input</strong> is a GameMaker Studio 2 input manager that unifies the native, piecemeal keyboard, mouse, and gamepad support to create an easy and robust mega-library.<br/></p>\n<p>Input is built for GMS2022 and later, uses strictly native GML code,  and is supported on every export platform that GameMaker itself  supports. <strong>Input is free and open source forever, including for commercial use.</strong>\n</p>\r\n\r\nFeatures\r\n<ul><li>Deep cross-platform compatibility</li><li>Full rebinding support, including thumbsticks and export/import</li><li>Native support for hotswapping, multidevice, and multiplayer</li><li>New checkers, including long, double, rapidfire, chords, and combos\r\n</li><li>Accessibility features including toggles and input cooldown\r\n</li><li>Deadzone customization including minimum and maximum thresholds</li><li>Device-agnostic cursor built in\r\n</li><li>Mouse capture functionality\r\n</li><li>Profiles and groups to organize controls\r\n</li><li>Extensive gamepad support via SDL2 community database</li></ul>\r\n\r\nWhy Input?\r\n<p><strong>Getting multiple input types working in GameMaker is fiddly.</strong> Supporting multiple kinds of input requires duplicate code for each type of device. Gamepads often require painful workarounds, even for common hardware. Solving these bugs is often impossible without physically holding the gamepad in your hands.</p>\n<p><strong>Input fixes GameMaker's bugs.</strong> In addition to keyboard and mouse fixes, Input uses the engine-agnostic SDL2 remapping system for gamepads. Because SDL2 integrates community contributions made over many years, it\u2019s rare to find a device that Input doesn\u2019t cover.</p>\n<p><strong>GameMaker's native checker functions are limited.</strong> You can only scan for press, hold, and release. Games require so much more. Allowing the player to quickly scroll through a menu, detecting long holds for charging up attacks, and detecting button combos for special moves all require tedious bespoke code.<br/></p>\n<p><strong>Input adds new ways of checking inputs. </strong>Not only does Input allow you to detect double taps, long holds, rapidfire, combos, and chords, but it also introduces easy-to-implement accessibility features. There is a native cursor built right into the library which can be adapted for use with any device. The library also includes native 2D checkers to make smooth movement simple.</p>\n<p><strong>Input is a commercial-grade library </strong>and is being used in Shovel Knight: Pocket Dungeon and Samurai Gunn 2 and many other titles. It has extensive documentation to help you get started. Inputs strips away the boring repetitive task of getting controls set up perfectly and accelerates the development of your game.</p>\r\n\r\nQ &amp; A\r\nWhat platforms does Input support?\r\n<p>Everything! You might run into edge cases on platforms that we don\u2019t regularly test; please\u00a0report any bugs\u00a0if and when you find them.</p>\n\r\nHow is Input licensed? Can I use it for commercial projects?\r\n\r\n<p>Input is released under the MIT license. This means you can use it for whatever purpose you want, including commercial projects. It\u2019d mean a lot to me if you\u2019d drop our names in your credits (Juju Adams and Alynne Keith) and/or say thanks, but you\u2019re under no obligation to do so.</p>\n\r\nI think you\u2019re missing a useful feature and I\u2019d like you to implement it!\r\n\r\n<p>Great! Please make a\u00a0feature request. Feature requests make Input a more fun tool to use and gives me something to think about when I\u2019m bored on public transport.</p>\n\r\nI found a bug, and it both scares and mildly annoys me. What is the best way to get the problem solved?\r\n\r\n<p>Please make a\u00a0bug report. We check GitHub every day and bug fixes usually go out a couple days after that.<br/></p>\n\r\nWho made Input?\r\n\r\n<p>Input is built and maintained by\u00a0@jujuadams\u00a0and\u00a0@offalynne\u00a0who have been writing and rewriting input systems for a long time. Juju\u2019s worked on a lot of\u00a0commercial GameMaker games\u00a0and Alynne has been\u00a0active in indie dev\u00a0for years. Input is the product of our combined practical experience working as consultants and dealing with console ports.\r\n<br/></p>\n<p>Many, many other people have contributed to GameMaker\u2019s open source community via bug reports and feature requests. Input wouldn\u2019t exist without them and we\u2019re eternally grateful for their creativity and patience. You can read Input\u2019s credits here.</p>", "metacritic": null, "released": "2022-06-13", "tba": false, "updated": "2022-06-17T18:46:48", "background_image": "https://media.rawg.io/media/screenshots/dff/dff509df87d65910cba152121dd89522.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 67, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["Juju"], "genres": [], "publishers": [], "esrb_rating": null}