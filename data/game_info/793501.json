{"id": 793501, "slug": "slot-machine-demo-made-with-cocos-creator", "name": "Slot Machine Demo (Made with Cocos Creator)", "name_original": "Slot Machine Demo (Made with Cocos Creator)", "description": "<p>Using Cocos Creator to make a simple slot machine demo for job interview purpose.</p>\n\n\r\nGenerate reels and symbols\u00a0\r\n<p>There are 5 reels. For each reel, there are 32 stops.\u00a0\r\n</p>\n<p>Initially, generate 32 stops\u00a0growing upwards.\r\n</p>\n\n<p>\n</p>\n<p>Use the mask component on the board node to create a rectangular rendered mask to hide the stops outside the board.\u00a0</p>\n<p>Note that all child nodes will only appear inside the mask's boundary.\r\n</p>\r\nMove symbols in cycle\r\n<p>For every stop, move downwards every frame,\u00a0\r\n</p>\n<p>Once it moves below the bottom border of the board, rest its position to the tail of the 32 stops,\u00a0</p><p>which is the current tail stop\u2019s position plus (padding + stopHeight), then set this stop as the new tail stop.\r\n</p>\n<p>This way, the 32 stops on each reel will spin in cycle.\r\n</p>\r\nStop spinning at the winning symbol\r\n<p>This is a slot machine demo with a single pay line placed at the center of the reel's container.\r\n</p>\n<p>When the reel is rolling its last round, when the winning symbol position just passed the pay line, the spinning will be stopped.\r\n</p>\n<p>In order to place the center of the winning symbol exactly on the winning line, each stop\u2019s Y position will be readjusted by subtracting an amount equal to:\r\n</p>\n<p>deltaY=winningSymbol.y-payLineY\r\n</p>\n\n\n<p>Each reel\u2019s winning symbol\u2019s index from 0 to 31 will be generated by Random Number Generator (RNG)\u00a0 \u00a0 \u00a0</p>\r\nListening for all reels finishing spinning\r\n<p>in game.js, set up listeners for \u201cspin-completed\u201d events dispatched from each reel.\r\n</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.node.on(spin-completed', function (event) {\r\n</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// counts all the reels that completed the spin\r\n</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0that.spinCompletedCount++;\r\n</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\r\n</p>\n<p>This is something like the Observer pattern where we set up event registers on game object nodes.\r\n</p>\n<p>The benefit of this design pattern is that the class who dispatched the event doesn\u2019t need to manage which classes need to do certain reactions to this event,\r\n</p>\n<p>and these classes who registered listener to this event will manage their own triggering logic.\r\n</p>", "metacritic": null, "released": null, "tba": false, "updated": "2022-05-27T20:40:15", "background_image": "https://media.rawg.io/media/screenshots/b1e/b1e9b93cd4d7469d64ae4d7b578c0508.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 21, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["Max"], "genres": [], "publishers": [], "esrb_rating": null}