{"id": 516849, "slug": "the-pico-mermaid", "name": "The Pico Mermaid", "name_original": "The Pico Mermaid", "description": "The Pico Mermaid\r\n<p>Use (X) to control the Pico Mermaid as she fetches pearls from the bottom of the dea back to the surface. Avoid the piranhas that will swim faster and faster as the mermaid retrieves more pearls.</p>\n<p>This is my entry into Tweet Tweet Jam 5 and so the code fits into 560 characters (two tweets).</p>\n<p>Features:</p>\n<ul><li>Single-button controls (X)</li><li>Animated and multi-colour pixel art sprites*</li><li>air and water\u00a0physics*</li><li>Two particle systems*</li><li>Difficulty ramp*</li><li>Score effect*</li><li>Death effect*</li><li>start animation*</li><li>current score and high score display*</li><li>\u00a0in-game instructions*</li></ul>\n<p>(* kinda)</p>\n<p>Here's the code:</p>\r\n\r\nP=pset::A::x=64y=0v=-9t=0w=127e=0d=.6s=0for z=0,29do\r\npoke(z\\6*x+z%6+1,'0x'..sub('e0e800800880ce0800444404e008002444043b0000444480b000004088',1+z*2,2+z*2))end::B::P(69,e&lt;1and w or y,7)H=max(s,H)e=y&gt;119and 1or e\r\n?'tAP\u274e gET\u25cf:'..s..' hI:'..H\r\nv+=.5C=cls\r\nif(y&gt;8)v-=max(btnp(\u274e)and 2or.4,v-.6)\r\nflip()C(1)rectfill(0,0,w,9,12)t=(t+d)%w\r\ny=min(120,y+v)spr(0,x,y,1,1,t&amp;8&lt;1,e&lt;1)for i=3,14do\r\nd=-d\r\nt=-t\r\nh=40*i-t-4&amp;w\r\npal(4,i)k=i*8k+=7*sin(h/w)if((h+4)\\8==8and 4&gt;abs(k-y-2))C(8)goto A\r\nspr(1,h,k,1,1,d&lt;0)P(rnd(8)+x,h*d%y+3)P(k*d/.7,h\\d)end\r\nif(y&lt;9and e&gt;0)e=0s+=1d*=-1.2C(7)\r\ngoto B\r\n\r\n<p>I've been working on sprite compression routines for PICO-8 to use in another, rather more involved project (so far I have\u00a0multiple sprite sheets with four\u00a064x64 sprites each,\u00a0 packed into the extended character set with run length encoding- I'm crazy, ok?) .<br/></p>\n<p>When I saw the rules for this jam concerning the character limit and the restrictions regarding resources (none allowed),\u00a0 a stubborn bit of me wanted to see if I could make a small enough game with sprites anyway. That big hex string in the code is the sprite data. It's not compressed as such since the decompression code would take too many characters compared to the amount saved, but the sprites are still there and the game works (as far as I can tell). I hope it provides a bit of fun too.</p>\n<p>Tweak the value of d in the first line to make the fish start swimming faster or slower if it's too hard or too easy. Tweak the 1.2 in the second last line if it's getting harder too fast or too slow for you. Tweak at your own risk - it 's v fragile and prob will\u00a0break entirely.</p>", "metacritic": null, "released": "2020-11-07", "tba": false, "updated": "2020-11-09T04:28:33", "background_image": "https://media.rawg.io/media/screenshots/dc2/dc2da5cfd123c093dd20488b3903a38b.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 5, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["drake_blue"], "genres": ["Action"], "publishers": [], "esrb_rating": null}