{"id": 178765, "slug": "chickens-revenge", "name": "Chicken's Revenge", "name_original": "Chicken's Revenge", "description": "Chicken's Revenge<br/><p>Chicken's Revenge est un jeu de r\u00e9flexion (Puzzle game) o\u00f9 vous (la poule) devrez enfermer le(s) renard(s) en poussant les caisses.</p>Objectifs / Comment jouer<br/>\n<p>Si le renard arrive jusqu'\u00e0 vous, il vous mange, vous perdez.<br/>Si vous arriver \u00e0 enfermer le renard, vous gagner.<br/>Utilisez les touches de clavier (fleches) pour diriger la poule</p>D\u00e9veloppement<br/>\n<p>Le jeu est d\u00e9velopp\u00e9 pour la <strong>Gamecodeur Gamejam #7 </strong>en <strong>C# / Monogame</strong> (pour coller aux formations propos\u00e9es sur GameCodeur).</p>\n<p><em>Il est actuellement en d\u00e9veloppement n'ayant pas eu le temps de le finir pour la GameJam. Beaucoup de changements sont donc \u00e0 pr\u00e9voir.<br/></em></p>GameCodeur<br/><ul><li>\u00a0<strong>El\u00e8ve Premium de Gamecodeur</strong><ul><li>Non</li></ul></li><li><strong>Langage et Framework utilis\u00e9s</strong><ul><li>C# / Monogame</li></ul></li><li><strong>Code / Graphismes par<br/></strong><ul><li>Moi-m\u00eame avec Gimp et Inkscape.</li><li>Graphismes temporaires t\u00e9l\u00e9charg\u00e9s sur opengameart.org</li></ul></li><li><strong>Utilisation de librairies et codes externes :</strong><ul><li>Rien \u00e0 part Monogame.</li></ul></li><li><strong>Temps pass\u00e9</strong><ul><li>Recherche, conception, design (non utilis\u00e9s finalement) : environ 10 heures</li><li>Apprentissage C#, apprentissage Monogame, D\u00e9veloppement : environ 4 heure</li><li>(Je pensais pouvoir y consacrer beaucoup plus de temps et ai perdu trop de temps en design pour rien :'( )</li></ul></li><li><strong>Comment as-tu (ou pas) abord\u00e9 la contrainte du th\u00e8me</strong><ul><li>J'ai commencer par chercher \"Qu'est-ce qu'un Puzzle Game\".</li><li>Ayant compris qu'il s'agissait d'un jeu de r\u00e9flexion avec une grille, j'ai chercher les jeux populaires de ce type et en suis arriver aux idd\u00e9es/possibilit\u00e9s suivantes :<ul><li>Un 2048 : Je l'ai d\u00e9j\u00e0 fait, mais en Java/LibGDX : Ca ne cole pas aux formations Gamecodeur et n'aurais pas d'int\u00e9r\u00eat \u00e0 \u00eatre re-d\u00e9velopper en C#</li><li>Un D\u00e9mineur : idem</li><li>Un Tetris : Atelier Gamecodeur, j'avais commencer avant la Jam, mais je me suis dit (par erreur) qu'\u00e9tant un atelier fait, tout le monde aller en faire un et \u00e7a ne serais pas original</li><li>Un remake de Rodent's Revenge, un petit jeu de\u00a01991 que j'adorais sous Windows 3.1 =&gt; <strong>Bingo</strong></li></ul></li></ul></li><li><strong>Petit postmortem (avis sur le langage/framework utilis\u00e9s, difficult\u00e9s, succ\u00e8s, choix, bilan personnel rapide, etc...)</strong><ul><li>D\u00e9veloppeur Web (PHP/JAVA) professionnel depuis 12 ans et d\u00e9veloppeur de jeux amateur et autodidacte (JAVA/LibGDX) depuis 1 ans, j'ai d\u00e9cid\u00e9, suite aux conseils de David de se diversifier, de me (re)mettre au C# (que j'avais \u00e0 peine aborder il y a 13 ans) avec Monogame pour cette JAM.</li><li>IDE =&gt; Retour \u00e0 Visual Studio : Tr\u00e8s d\u00e9\u00e7u. J'avais le souvenir d'un \u00e9diteur complet et moderne (il y a 13 ans), Visual Studio 2017 (et pire encore MonoDevelop) me semble aujourd'hui tr\u00e8s lourd, lent et tr\u00e8s en retard, notament par rapport aux IDE de JetBrain que j'utilise tous les jours pour PHP et JAVA</li><li>Langage =&gt; C# : Similaire dans la syntaxe \u00e0 PHP et JAVA, je n'ai eu aucun soucis \u00e0 me mettre \u00e0 ce langage (je n'ai d'ailleurs suivit aucun tuto ou cours, juste des docs sur des points pr\u00e9cis) tellement les langages sont similaires (C/C++/C#/PHP/JAVA, etc.). Quelques sp\u00e9cificit\u00e9 de C# me laisse tr\u00e8s dubitatif et le d\u00e9ploiement m'a laisser sur le carreau : Je n'ai pas r\u00e9ussi \u00e0 faire un d\u00e9ploiement digne de ce nom avec le peut de temps que j'ai eu.</li><li>Framework =&gt; Monogame : Tr\u00e8s d\u00e9\u00e7u. Tr\u00e8s bas niveau par rapport \u00e0 LibGDX que j'ai l'habitude d'utiliser. Si certaine fonctionnalit\u00e9 (gestion des assets) sont tr\u00e8s pratiques, beaucoup, beaucoup d'autre sont juste compl\u00e8tement absente (ou je ne les ai pas trouver) et il faut donc les re-coder enti\u00e8rement : Gestion d'UI (Boutons, blocs de textes, mise en page, tableaux, etc.), gestion d'algorithme d'IA (Pathfinding, etc.), gestion des animations (WTF, il n'y \u00e0 rien pour g\u00e9rer les animations de sprites et autres fondus ? Obliger de les coder \u00e0 la mains ?), gestion des \u00e9crans tactiles, des pr\u00e9f\u00e9rences de fen\u00eatres, etc.<br/>Aucune doc officielle, beaucoup de docs brouillons et souvent non-fonctionnel (surtout sur XNA dont Monogame est issue).<br/>Bref... Un framework beaucoup trop bas niveau. \u00e0 mon sens pas utilisable pour de r\u00e9el projets (sauf \u00e0 vouloir tout re-coder \u00e0 la mains).<br/>Il reste cependant sans doute une bonne transition entre un langage type Lua et un \u00e9diteur type Unity3D pour comprendre les m\u00e9canisme de base (cycle de jeux).</li><li>D\u00e9veloppant sous Linux et \u00e0 destination multi-plateforme (Windows, Android, Linux), je ne pense r\u00e9ellement pas faire d'autres jeux avec Monogame.</li><li>Cette exp\u00e9rience m'a apporter toutefois plusieurs r\u00e9ponses :<ul><li>Le 1er choix \u00e9tait sans doute le bon (pour moi et mes besoins/envis) : JAVA/LibGDX</li><li>David \u00e0 raison sur ce fait : Si tu as les base d'un langage, passer \u00e0 un autre langage du m\u00eame type est totalement trivial.</li><li>De m\u00eame pour les framework de jeux\u00a0 : Le fonctionnement et les m\u00e9caniques de jeu restent globalement les m\u00eames</li><li>C#/Monogame est-il un bon choix aujourd'hui ? Pas pour moi.</li><li>Peut-on passer facilement d'un langage/framework \u00e0 un autre ? Oui ! 4 heure pour faire un jeu avec un langage et un framework que je connaissait pas... Passage de Java/LibGDX \u00e0 C#/Monogame sans aucun soucis ni interrogation (si se n'ai \"quelle est la syntaxe pour faire \u00e7a ?\")</li></ul></li><li>Pour le prochain jeux, je testerais HaxeFlixel. J'ai d\u00e9velopp\u00e9 dans le passer en AS3 dont je garde des bon souvenirs et le framework \u00e0 l'air de proposer un \"VRAI\" multi-plateforme et des outils sympas (algo, UI, effets, etc.). Seul b\u00e9mol, \u00e0 voir, l'IDE.</li></ul></li></ul>", "metacritic": null, "released": "2017-06-15", "tba": false, "updated": "2019-01-09T12:41:06", "background_image": "https://media.rawg.io/media/screenshots/283/2830336198c064c8d4197fba7d838ed5.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 23, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["Neeftarah"], "genres": ["Puzzle"], "publishers": [], "esrb_rating": null}