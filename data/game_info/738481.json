{"id": 738481, "slug": "checker10l-by-roberto-capuano", "name": "Checker10L by Roberto Capuano", "name_original": "Checker10L by Roberto Capuano", "description": "<p># Checker10L</p>\n<p>Checker10L is an implementation in MSX2 BASIC of classic checker game: italian dama.</p>\n<p>All classic rules are implemented: move, capture and promotion to king.</p>\n<p>The game was inspired by [1K ZX Chess](https://en.wikipedia.org/wiki/1K_ZX_Chess) and would like to be a small tribute.</p>\n\n<p># Controls</p>\n<p>- Cursor keys to move the cursor</p>\n<p>- Space to select a piece</p>\n<p>- Space to move the selected piece.</p>\n<p>When a piece reaches the furthest row it becomes a king.</p>\n<p>Symbols:</p>\n<p>- `.` empty cell</p>\n<p>- `o` user piece</p>\n<p>- `q` user king</p>\n<p>- `O` opponent piece</p>\n<p>- `Q` opponent king</p>\n<p>Sources are stored at: https://github.com/robertocapuano/Checker10L</p>\n\n<p># Source</p>\r\n\r\n1 screen1,0,0:COLOR1,14,14:KEYOFF::DEFINTA-Z:B=6348:R=RND(-TIME):P(0)=46:P(1)=111:P(2)=79:P(5)=113:P(6)=81:B2=B+32*9:CLS:P1=0:P2=0:forJ=0to7:vpokeB-2+J*32,56-J:vpokeB2+J,97+J:forI=0to7:CK(I,J)=(1-(I+J)mod2)*(-1*(I&lt;3)-2*(I&gt;4)):nextI,J:\r\n10 forJ=0to7:forI=0to7:vpoke B+32*(J)+I,P(CK(7-J,I)):nextI,J:gosub150:Q=(CK(R,C)and4):if (CK(R,C)and1)=0 then 10:else R0=R:C0=C:GOSUB150:if(R=R0+1or(Q=4 and R=R0-1))and abs(C0-C)=1 and CK(R,C)=0 then CK(R,C)=(CK(R0,C0)or(4*(-1*(R=7)))):CK(R0,C0)=0:goto60\r\n20 CE=CK((R+R0)/2,(C+C0)/2):if(Q=0andR&lt;&gt;R0+2)orabs(R-R0)&lt;&gt;2orabs(C0-C)&lt;&gt;2orCK(R,C)&lt;&gt;0or(CE and2)&lt;&gt;2orQ&lt;(CEand4)thenC=C0:R=R0:goto10:else:CK((R+R0)/2,(C+C0)/2)=0:CK(R,C)=(CK(R0,C0)or(4*(-1*(R=7)))):CK(R0,C0)=0:P1=P1+1:vpokeB2+95+P1,p(CE):beep:ifP1=12then1\r\n60 AX=0:AI=0:DU=RND(1)*7:DV=RND(1)*7:forJ=0to7:forI=0to7:vpoke B+32*(J)+I,P(CK(7-J,I)):nextI,J: forJ=0to7:U=(J+DU)mod8:forI=0to7:V=(I+DV)mod8:Q=CK(U,V)and4:forK=-1to1 step 2:forL=-1to(-(Q=4))step2:if(L=-1 and U&lt;2)or(L=1andU&gt;5)or(CK(U,V)and2)&lt;&gt;2 then70\r\n65 D=-(V&lt;2)++(V&gt;5)+(V&gt;1)*(V&lt;6)*K:T=-(U&lt;2)++(U&gt;5)+(U&gt;1)*(U&lt;6)*L:CE=CK(U+T,V+D):if(CEand1)=1and Q&gt;=(CEand4) and CK(U+2*T,V+2*D)=0 then CK(U+2*T,V+2*D)=(CK(U,V)or(4*(-1*((U+2*T)=0)))):CK(U,V)=0:CK(U+T,V+D)=0:I=7:J=7:K=1:AI=1:vpokeB-96+P2,p(1):P2=P2+1:beep\r\n70 nextL,K,I,J:if P2=12 then 1 else if AI=1 then 10\r\n71 S=SGN(RND(1)-.5):forJ=0to7:U=(J+DU)mod8:forI=0to7:V=(I+DV)mod8:Q=(CK(U,V)and4):forK=-StoS step S*2:forL=-StoSstep2*S: if (Q=0 and L=1) or (L=-1 and U=0) or (L=1 and U=7) or (CK(U,V)and2)&lt;&gt;2 then75:else D= -(V&lt;1) + +(V&gt;6) + (V&gt;0) * (V&lt;7)*K: T= L:\r\n73 NU=U+2*T:NV=V+2*D:BC=(NU&gt;=0andNU&lt;8)and(NV&gt;=0andNV&lt;8)and(AX=0):if CK(U+T,V+D)=0 and ((CK( U+2*T* -BC, V+2*D* -BC)and 1) =0) then CK(U+T,V+D)=(CK(U,V)or(4*(-1*((U+T)=0)))):CK(U,V)=0:K=11: AI = 1: J=7:I=7:K=1:L=1\r\n75 next L,K,I,J:if AI=1 then 10:else if AX=0 then AX=1: goto71: else1\r\n150 LOCATE10+C,13-R:k$=INPUT$(1):K=ASC(K$):if K=32then return: else if K=30andr&lt;7thenR=R+1:goto150:elseifK=31andR&gt;0thenR=R-1:goto150:elseifK=28andC&lt;7thenC=C+1:goto150;elseifK=29andC&gt;0thenC=C-1:GOTO150:ELSE150\r\n\n\n<p># Source Description</p>\r\n\r\n```\r\n1 screen1,0,0:COLOR1,14,14:KEYOFF::DEFINTA-Z:B=6348:R=RND(-TIME):P(0)=46:P(1)=111:P(2)=79:P(5)=113:P(6)=81:B2=B+32*9:CLS:P1=0:P2=0:forJ=0to7:vpokeB-2+J*32,56-J:vpokeB2+J,97+J:forI=0to7:CK(I,J)=(1-(I+J)mod2)*(-1*(I&lt;3)-2*(I&gt;4)):nextI,J:\r\n```\r\n- screen1,0,0: Set text mode 32x24\r\n- COLOR1,14,14: black on grey\r\n- KEYOFF: hide function keys\r\n- CLS: clear screen\r\n- DEFINTA-Z: use integer variables\r\n- B=6347: base of framebuffer\r\n- R=RND(-TIME): init random number generator\r\n- P(0)=46:P(1)=111:P(2)=79:P(5)=113:P(6)=81 pieces ASCII codes\r\n- B2=B+32*9 bottom of the board\r\n- P1=0:P2=0: players points\r\n- :forJ=0to7:vpokeB-2+J*32,56-J:vpokeB2+J,97+J:forI=0to7:CK(I,J)=(1-(I+J)mod2)*(-1*(I&lt;3)-2*(I&gt;4)):nextI,J: draw checkboard\r\n```\r\n10 forJ=0to7:forI=0to7:vpoke B+32*(J)+I,P(CK(7-J,I)):nextI,J:gosub150:Q=(CK(R,C)and4):if (CK(R,C)and1)=0 then 10:else R0=R:C0=C:GOSUB150:if(R=R0+1or(Q=4 and R=R0-1))and abs(C0-C)=1 and CK(R,C)=0 then CK(R,C)=(CK(R0,C0)or(4*(-1*(R=7)))):CK(R0,C0)=0:goto60\r\n```\r\n- forJ=0to7:forI=0to7:vpoke B+32*(J)+I,P(CK(7-J,I)):nextI,J draw pieces\r\n- gosub150 read user input\r\n- Q=(CK(R,C)and4): move user cursor\r\n- if (CK(R,C)and1)=0 then 10: check if the cell contains an user piece\r\n- R0=R:C0=C:GOSUB150: store starting position and read destination position of the piece\r\n- if(R=R0+1or(Q=4 and R=R0-1))and abs(C0-C)=1 and CK(R,C)=0 check if is it a valid move\r\n- CK(R,C)=(CK(R0,C0)or(4*(-1*(R=7)))):CK(R0,C0)=0:goto60 move the user piece\r\n```\r\n20 CE=CK((R+R0)/2,(C+C0)/2):if(Q=0andR&lt;&gt;R0+2)orabs(R-R0)&lt;&gt;2orabs(C0-C)&lt;&gt;2orCK(R,C)&lt;&gt;0or(CE and2)&lt;&gt;2orQ&lt;(CEand4)thenC=C0:R=R0:goto10:else:CK((R+R0)/2,(C+C0)/2)=0:CK(R,C)=(CK(R0,C0)or(4*(-1*(R=7)))):CK(R0,C0)=0:P1=P1+1:vpokeB2+95+P1,p(CE):beep:ifP1=12then1\r\n```\r\n- CE=CK((R+R0)/2,(C+C0)/2): get cell at middle of the user move\r\n- (Q=0andR&lt;&gt;R0+2) check if the user has made a simple move (1 cell)\r\n- abs(R-R0)&lt;&gt;2 or abs(C0-C)&lt;&gt;2 or CK(R,C)&lt;&gt;0 or(CE and2)&lt;&gt;2 or Q&lt;(CEand4) check if the user capture the opponent piece\r\n- C=C0:R=R0:goto10 in case the move is illegal restart user selection\r\n- CK((R+R0)/2,(C+C0)/2)=0: a valid capture is made\r\n- CK(R,C)=(CK(R0,C0)or(4*(-1*(R=7)))):CK(R0,C0)=0: piece is moved\r\n- P1=P1+1:vpokeB2+95+P1,p(CE):beep: user points are increased\r\n- ifP1=12then1 if user captured all 12 pieces the game restarts\r\n```\r\n60 AX=0:AI=0:DU=RND(1)*7:DV=RND(1)*7:forJ=0to7:forI=0to7:vpoke B+32*(J)+I,P(CK(7-J,I)):nextI,J: forJ=0to7:U=(J+DU)mod8:forI=0to7:V=(I+DV)mod8:Q=CK(U,V)and4:forK=-1to1 step 2:forL=-1to(-(Q=4))step2:if(L=-1 and U&lt;2)or(L=1andU&gt;5)or(CK(U,V)and2)&lt;&gt;2 then70\r\n```\r\n- AX=0: flag to force any move\r\n- AI=0: Opponent logic starts here, as first case we try to capture\r\n- DU=RND(1)*7:DV=RND(1)*7: choose a random initial direction\r\n- forJ=0to7:forI=0to7:vpoke B+32*(J)+I,P(CK(7-J,I)):nextI,J: refresh chessboard\r\n- forJ=0to7:U=(J+DU)mod8:forI=0to7: start chessboard scan\r\n- V=(I+DV)mod8:Q=CK(U,V)and4: get next cell\r\n- forK=-1to1 step 2: check left/right direction\r\n- forL=-1to(-(Q=4))step2: check forward/backward direction (only if piece is a king)\r\n- if(L=-1 and U&lt;2) or (L=1andU&gt;5) or (CK(U,V)and2)&lt;&gt;2 then70 Check if piece can move\r\n```\r\n65 D=-(V&lt;2)++(V&gt;5)+(V&gt;1)*(V&lt;6)*K:T=-(U&lt;2)++(U&gt;5)+(U&gt;1)*(U&lt;6)*L:CE=CK(U+T,V+D):if(CEand1)=1and Q&gt;=(CEand4) and CK(U+2*T,V+2*D)=0 then CK(U+2*T,V+2*D)=(CK(U,V)or(4*(-1*((U+2*T)=0)))):CK(U,V)=0:CK(U+T,V+D)=0:I=7:J=7:K=1:AI=1:vpokeB-96+P2,p(1):P2=P2+1:beep\r\n```\r\n- D=-(V&lt;2)++(V&gt;5)+(V&gt;1)*(V&lt;6)*K: row dispacement\r\n- T=-(U&lt;2)++(U&gt;5)+(U&gt;1)*(U&lt;6)*L: column dispacement\r\n- CE=CK(U+T,V+D): cell content\r\n- if(CEand1)=1and Q&gt;=(CEand4) and CK(U+2*T,V+2*D)=0 check if piace can move\r\n- CK(U+2*T,V+2*D)=(CK(U,V)or(4*(-1*((U+2*T)=0)))) move piece\r\n- CK(U,V)=0:CK(U+T,V+D)=0: clear previous cell\r\n- I=7:J=7:K=1:AI=1:vpokeB-96+P2,p(1):P2=P2+1:beep an user piece was captured\r\n```\r\n70 nextL,K,I,J:if P2=12 then 1 else if AI=1 then 10\r\n```\r\n- nextL,K,I,J: close loop\r\n- if P2=12 ... if opponent captured all pieces the game restarts\r\n```\r\n71 S=SGN(RND(1)-.5):forJ=0to7:U=(J+DU)mod8:forI=0to7:V=(I+DV)mod8:Q=(CK(U,V)and4):forK=-StoS step S*2:forL=-StoSstep2*S: if (Q=0 and L=1) or (L=-1 and U=0) or (L=1 and U=7) or (CK(U,V)and2)&lt;&gt;2 then75:else D= -(V&lt;1) + +(V&gt;6) + (V&gt;0) * (V&lt;7)*K: T= L:\r\n```\r\n- S=SGN(RND(1)-.5): no capture, the AI try to move in a random dir.\r\n- forJ=0to7:U=(J+DU)mod8:forI=0to7:V=(I+DV)mod8: scan all cells\r\n- Q=(CK(U,V)and4): cell content\r\n- forK=-StoS step S*2:forL=-StoSstep2*S: adjacent row/col\r\n- if (Q=0 and L=1) if cell empty or on edge\r\n- (L=-1 and U=0)  near chessboard border\r\n- (L=1 and U=7) near chessboard border\r\n- (CK(U,V)and2)&lt;&gt;2: cell content\r\n- D= -(V&lt;1) + +(V&gt;6) + (V&gt;0) * (V&lt;7)*K: T= L: select next cell\r\n```\r\n73 NU=U+2*T:NV=V+2*D:BC=(NU&gt;=0andNU&lt;8)and(NV&gt;=0andNV&lt;8)and(AX=0):if CK(U+T,V+D)=0 and ((CK( U+2*T* -BC, V+2*D* -BC)and 1) =0) then CK(U+T,V+D)=(CK(U,V)or(4*(-1*((U+T)=0)))):CK(U,V)=0:K=11: AI = 1: J=7:I=7:K=1:L=1\r\n```\r\n- NU=U+2*T:NV=V+2*D:BC=(NU&gt;=0andNU&lt;8)and(NV&gt;=0andNV&lt;8)and(AX=0) check if at next position the piece can be captured\r\n- if CK(U+T,V+D)=0 if next cell is free make to move\r\n- CK(U+T,V+D)=(CK(U,V)or(4*(-1*((U+T)=0)))):CK(U,V)=0: move the piece\r\n- K=11: AI = 1: J=7:I=7:K=1:L=1: end loop\r\n```\r\n75 next L,K,I,J:if AI=1 then 10:else if AX=0 then AX=1: goto71: else1\r\n```\r\n- tie-break: in case AI cannot do a valid move\r\n```\r\n150 LOCATE10+C,13-R:k$=INPUT$(1):K=ASC(K$):if K=32then return: else if K=30andr&lt;7thenR=R+1:goto150:elseifK=31andR&gt;0thenR=R-1:goto150:elseifK=28andC&lt;7thenC=C+1:goto150;elseifK=29andC&gt;0thenC=C-1:GOTO150:ELSE150\r\n```\r\n- read user input", "metacritic": null, "released": "2022-02-13", "tba": false, "updated": "2022-02-14T05:10:53", "background_image": "https://media.rawg.io/media/screenshots/8d3/8d39a2bbb646e4700737a9ee80300180.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 9, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Strategy"], "publishers": [], "esrb_rating": null}