{"id": 700579, "slug": "infinite-monkeys-2", "name": "I\u0336n\u0336finite Monkeys", "name_original": "I\u0336n\u0336finite Monkeys", "description": "How To Play\r\n<p>The goal of the game is to write the entire first act of Shakespeare's <em>King Lear</em>, one random letter at a time. Monkeys will type letters at random until one hits the correct one, and each completed letter gets you $1. Use the buttons on the top floor to hire more monkeys and motivate the existing ones to work faster by buying posters and banana trees. Toggle the music and sound effects by clicking on the radio.<br/></p>\n<p>I highly recommend giving the write-up below a read while you wait for your monkeys to progress.<br/><br/></p>\r\nInfinite Monkeys on Infinite Typewriters\r\n<p>This game is based on the Infinite Monkey Theorem, which posits that a monkey on a typewriter, if given infinite time, would be able to write any complex piece of literature, such as Shakespeare's <em>King Lear</em>. In I\u0336n\u0336<em>finite Monkeys</em>, your monkeys will have to type the entire first scene of <em>King Lear</em> - the length of the text is part of the absurd premise; I don't actually expect you to complete it all. <br/></p>\n<p>Though I do some really basic statistics below, I avoided all the very technical stuff like the formal proof of the theorem. Because if you've been on pop-science YouTube, you'll know that even though it's <em>better for proofs</em> to treat the monkeys in this theorem like uniformly random string generators,  it's much more <em>fun </em>to just calculate big numbers and talk about monkeys. <br/></p>\n\n<em>Finite</em> Monkeys?\r\n<p>While planning this game, I wanted to make the description and premise somewhat dorky. The initial concept was to simulate a \"true\" version of the monkeys-on-typewriters experiment, with multiple rounds of guessing, and I wrote some test code for doing so (knowing that it wouldn't end well). A monkey would guess random words of length N until it got the right one, then a round would start for N+1. So on round 1, if the word was \"A\", it guesses \"K\"... \"B\"... \"G\"... \"G\"... \"A\"... okay! Now guess \"UE\", then \"JHW\" and so on.\u00a0</p>\n<p>The problem? Runtime. When you get to N=5 and above, the simulation becomes very slow. If we equate what the monkey in this example is doing to something more realistic, like password-guessing, it becomes clear why.\u00a0If\u00a0a\u00a0human\u00a0were\u00a0guessing\u00a0a\u00a05-character\u00a0password, they'd be foolish to guess the word \"BEANS\" once, only to guess it again a little while later. They already know the password isn't \"BEANS\"!</p>\n<p>Monkeys aren't so smart, because the idea behind the experiment is that their actions are (in an abstract sense) random, or rather, any previous action has no bearing on the next in any meaningful way. This means that the \"monkey approach\" to password cracking is much worse on average than a brute-force attempt. <br/></p>\n<p>So even for tiny guesses of five characters, the program would sometimes run for much longer than it should have, because every attempt is a purely random guess. I knew the complexity would blow up very quickly, but the degree to which it exploded was a surprise - primarily because of the random element. Similarly, in I\u0336n\u0336<em>finite Monkeys</em>, you may notice that there are occasionally long stretches of time where no correct letter is hit, even with fast typing speeds. Fully random guesses are, generally, <em>bad guesses</em>.</p>\n\n<p>King Lear, Act I, Scene I<br/></p>\n<p>Now let's use <em>King Lear</em> as a more specific example, because the numbers are big and that's just more fun. The first scene in the manuscript of <em>King Lear</em> used in this game is\u00a014326 characters long (the entire play is 150746). All sections of whitespace are replaced with only a single basic space character, and all letters are treated as uppercase. The punctuation symbols {. , ' : ; ? -} are also included.\u00a0</p>\n<p>So, suppose we had a single monkey which would generate purely random strings of length 14326 over some period of time, at which point we'd compare it to <em>King Lear</em> and give the monkey a thumbs up or (much more likely) a big ol' thumbs down. <br/></p>\n<p>Given the previous discussion, you may guess that it would take a <em>few</em> attempts. This is the reason why the thought experiment proposes \"infinite\" of a few resources. It varies, but this usually includes infinite time, monkeys, typewriters, and presumably zookeepers (so the monkeys stay in their seats).\u00a0<br/></p>\n<p>So, how many possible strings of length 14326 could any given monkey generate in one attempt? Well, if we confine the alphabet to what appears in the correct full text, each character in the random string can be one of 34 characters (26 letters, 1 space character, and  7 punctuation marks). Now, for each character in the string beyond the first, we multiply 34 by itself to get the total keyspace of the 14326 character string.</p>\n<p>The number of possible strings the monkey could generate is a <em>whopping</em> 34^(14326). That's is a decimal number that's 21940 decimal digits long . For more context, there are approximately 6 x 10^(79) atoms in the universe, which is still less than the number 34^(<em>53</em>). Now multiply that number by 34 again, then do that <em>another 14272 times</em>. <br/></p>\n<p>Out of all those possibilities, only a single one is the true first scene of <em>King Lear</em>. So it's probably fair to also assume that the monkey <em>must</em> be immortal for this whole operation to get off the ground; it's going to take them a while. <br/></p>\n\r\nA Practical Compromise\r\n<p>\r\nNow, back to the game, which is probably still running as we speak, because half of the joke is that it's annoyingly long. I think I've made a case for why it isn't just a single chimpanzee in an armchair yelling random letters until one is right... because you'd be here until the heat-death of the universe waiting for divinely-primate-generated Shakespeare, even just to get that first act.</p>\n<p>Instead, there's an obvious solution that makes things a bit more tolerable: make the monkeys less Darwinist and more collectivist, by which I mean they work together, and mistakes are ignored. I mean, we were already checking the output against a copy of <em>King Lear</em> in the last hypothetical for correctness anyways, so is writing it a letter at a time <em>really</em> cheating? <br/></p>\n<p>The answer is \"yes\", but again: waiting until the end of the universe certainly can't be any more appealing. It's much more interesting to watch monkeys hit things.</p>\n\n<p>PS: if you want to support my future projects, check out my current game in development: VSCS-II.<br/></p>", "metacritic": null, "released": "2021-11-22", "tba": false, "updated": "2021-11-26T10:50:09", "background_image": "https://media.rawg.io/media/screenshots/efd/efd9199537453f23076bb7a7183df2a9.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 56, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["Oliver Morrish"], "genres": ["Simulation", "Educational"], "publishers": [], "esrb_rating": null}