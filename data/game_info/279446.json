{"id": 279446, "slug": "diet-beat", "name": "Diet Beat", "name_original": "Diet Beat", "description": "<p>Summary</p>\n<p>Our game was designed from scratch for Sugar Game Jam.\u00a0</p>\n<p>It is called Diet Beat and each player must fight against other players (or an AI) in a joust of robots made out of several sweet components. </p>\n<p>Each sweet is represented in a Card (Resource) and a robot is composed of 4 diff parts: Body, Head, Legs and Arms. Each card has several properties depending on the robot part it must be placed on. The properties are Armor, Shield, Fire Rate, Damage, Move Speed, and Projectile. Those properties influence the outcome of each battle. </p>\n<p>These cards are procedurally generated resulting in a wide variety of different cards. As such, the value of each one is associated with its properties. A player can manage their card library by discarding them or send them to other player. However, they cannot send them to all players in the game. They can only send them to members of their clan (Group) or members of allied clans (Alliances). </p>\n<p>In the start of the game, each player can choose a clan that will be the same for the remainder of the game. There are 4 clans: Donut, Cake, Macaron, Popsicle. Each clan has a leader (calculated from Leaderboards) that can select an Ally. Both parties of the Alliance can transfer cards between them.</p>\n<p>Alongside the cards, there are two other resources. The Sweets (Resource) are the ingame currency. They can be earned at the end of a match and are associated with users and clans. When the sweet amount for users reaches a threshold, the player receives a new card to redeem, defined in the CardsToRedeem(Resource). When the sweet amount for clans is reached (higher than the user\u2019s threshold) all the clan members receive a new card to redeem, defined in the CardsToRedeem(Resource).</p>\n<p>To start a joust (Match), a player can user our Quick Matchmaking to engage another user in a joust. If the waiting time exceeds 10 seconds, the player will face an AI. \u00a0A joust (Match) has 3 rounds. In each round, the two robots face each other. At the start of each round, the players build their robot with the cards they have available. Afterwards, the robots are fully autonomous and will face each other in a fight until one\u2019s death. The winner will be the one capable of destroying the enemy robot faster. The joust is a best of 3 match and who wins 2 rounds will be the overall winner. Based on the number of rounds won, each player receives a certain amount of sweets (Resource) that, ultimately, leads to the opportunity of redeeming new cards. Most of the skill associated with the joust concerns to the robot construction disregarding the actual players\u2019 mechanical skills. With this in mind, each round is pretty fast, making the whole joust a fast pace match.<br/></p>\n<p><strong>SUGAR functionalities</strong></p>\n<p><strong>User </strong>- </p>\n<p> - Used for authentication</p>\n<p><strong>Group:</strong></p>\n<p> - There are 4 clans in the game (Donut, Cake, Macaron, Popsicle)</p>\n<p><strong>Relationship </strong></p>\n<p>- Player belongs to a single clan and cannot change it</p>\n<p>- Player can be friend of other players friends</p>\n<p>- The leader of a clan can establish alliances with another clan</p>\n<p><strong>Leaderboard </strong></p>\n<p>- Leaderboard for the player with most wins</p>\n<p>- Leaderboard for a clan used to determine the clan leader</p>\n<p><strong>GameData</strong></p>\n<p>- Used to register games won, lost, round wons, games against AI won and lost, and games in Quick Match won and lost;</p>\n<p><strong>Resources </strong></p>\n<p>- Used to register the amount of sweets a player has (game currency)</p>\n<p>- Used to register the amount of cards a player can redeem</p>\n<p>- When the sweet level reaches a threshold a unit is added to the cards to redeem</p>\n<p>- Used to register the sweets for a clan</p>\n<p>- When the clan\u2019s sweet level reaches a threshold a unit is added to the cards to redeem of all clan members</p>\n<p>- When redeeming a card, a new procedurally generated card is created and encoded as a string into a new resource</p>\n<p>- A player can have multiple units of each card.</p>\n<p>- Those cards represent components with their own characteristics (rate of fire, damage, shield, etc..) that will be used \u00a0to build his robot at the beginning of a match</p>\n<p><strong>Matches </strong></p>\n<p>- Each match has 3 rounds</p>\n<p>- At the end of each round the players can change components of the robot</p>\n<p>- At the end of a match, data about its outcome is saved</p>", "metacritic": null, "released": "2018-12-23", "tba": false, "updated": "2019-01-09T12:41:06", "background_image": "https://media.rawg.io/media/screenshots/4d1/4d13eff94a26fdf3e350254b5f7b21a0.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 129, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["ratuspro"], "genres": ["Strategy"], "publishers": [], "esrb_rating": null}