{"id": 101994, "slug": "cafevania", "name": "Cafevania", "name_original": "Cafevania", "description": "<p>A Dinerdash-style game starring a gorgon. Avoid eye-contact with your customers, or you'll turn them into stone.</p><p><strong>Controls:</strong><br/></p><ul><li>Arrow keys: move around</li><li>ENTER: Interact with things</li><li>SHIFT: Close eyes</li></ul><p><strong>Gameplay loop:</strong><br/></p><p>Wait for a customer to appear, look up their order in the recipe book in the center of the kitchen. Punch in the correct combination to make the gems above the cook to light up. Close your eyes for about two seconds, and he'll prepare the meal. Pick it up and deliver it to the appropriate table. Make sure to not make any eye contact with the customers though!</p><p>If you have turned anyone into stone, you can reset the round by talking to the skull in the top right of the cafe. Three mistakes and it's game over.<br/></p><p><strong>Game Jam:</strong><br/>Made for the Game Maker's Toolkit GameJam. The subject was \"Dual Purpose Design\". Mechanics that fulfil different needs at the same time, and perhaps create a synergetic relationship between them.<br/></p>\n<p>I noticed that a lot of examples I thought of revolved around regaining resources, be it health, ammo or consumables of some sorts. I wanted to try and avoid that avenue, so ended up focussing on the idea of \"avoiding\". After an evening of prototyping, the idea of avoiding eye-contact ended up winning out. After setting up scenarios where it was impossible to navigate without meeting eyes, the feature of closing your eyes came to be. Jumping from there, explored some additional ideas where having your eyes closed could be avantageous. Inspired by the Super Mario Bros Boos' shyness, and the Weeping Angels from Dr. Who, I ended up with some systems where not being able to see progressed or aided the player in some ways, on top of the ability of navigating the map without making eye contact.</p>\n<p><strong>Build info:</strong><br/>The build I'm submitting is just a Windows one. I see there's the ability to make a Mac one too, but I'm not comfortable releasing it since I have no way of testing it or debugging it should things go awry.</p>\n<p><strong>Credits:</strong><br/>The engine is ASCII's RPG Maker MV, typically designed for making topdown 2D Japanese RPGs, but I like prototyping simple things in it. Used a public RPGMaker plugin to allow for low-resolution pixel-fonts, made by \"Victor Sant\".\u00a0<br/>2D Assets are made by myself using the NES colour palette. Music made with Beepbox.com. Sound Effects made using LabChirp. Goudy Text font found on Fontsgeek.com.</p>", "metacritic": null, "released": "2017-07-16", "tba": false, "updated": "2019-01-09T12:41:06", "background_image": "https://media.rawg.io/media/screenshots/1fe/1fe194654c1324fb43ee2fd935e4f8e9.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 14, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["earthpainting"], "genres": [], "publishers": [], "esrb_rating": null}