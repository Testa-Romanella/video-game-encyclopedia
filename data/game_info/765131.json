{"id": 765131, "slug": "jarotsim", "name": "jarotsim", "name_original": "jarotsim", "description": "<p><em>jarotsim</em> is a playground for the discovery, exploration and livecoding of turing machines.    </p>\n<p>its objective is to promote experimentation and visualization of  these foundational computational machines in a playful and joyful way. <br/></p>\n\n<p><em>jarotsim</em> is programmed using L\u00d6VE 11.4 and it is distributed as a .love file. </p>\n<p>you can play this file in your mobile or not-so-mobile device(s) by first downloading L\u00d6VE for linux, macOS, windows or android.</p>\r\nthe basics\r\n<p>the bird with a hat stands...   </p>\n<ul><li>over a long, possibly infinite, row of tiles,\r\n</li><li>in a pose, one out of four possible poses,\r\n</li><li>over one tile in the row, which has one out of four possible designs.\r\n</li></ul>\n\n<p>the bird with a hat has a table of rules that tells what to do next. <br/></p>\n<p>the table of rules is read as follows: given a specific pose of the  bird with a hat, and a specific tile design in the row where the bird is  standing:   </p>\n<ul><li>which new design should the used for the given tile?\r\n</li><li>which should be the new pose of the bird with a hat?\r\n</li><li>in which direction should the bird move, in order to stand in a different tile?\r\n</li></ul>\n\n<p>\u00a0</p>\n<p>the process is repeated over and over again. it might never end, unless the table of rules tells the bird with a hat to stop.   </p>\n<p>and yes, in case you didn't know yet, all of that is what a turing machine does! <br/></p>\r\nmodes\r\n<p><em>jarotsim</em> has two modes:   </p>\n<ul><li>edit mode: where you can set up and modify the aspects of the procedure to follow.\r\n</li><li>timeline mode: where you can see several iterations of the process.\r\n</li></ul>\r\nedit mode\r\n\r\ntop row: current state\r\n<p>the top section of this screen allows you to modify:   </p>\n<ul><li>the state of the row of tiles: click on a tile to rotate between the four possible designs\r\n</li><li>the current pose of the bird with a hat: click on the bird to rotate between the four possible poses\r\n</li><li>the position of the bird on the row of tiles: click on the arrows to shift the row right or left\r\n</li></ul>\n<p>you can clear the row of tiles by clicking on the bin icon at the top right corner.   </p>\r\ntable of rules\r\n<p>the rest of the screen allows you to modify the table of rules.   </p>\n<p>there is one rule for each combination of pose and tile; therefore there are sixteen rules.   </p>\n<p>depending on the size of the screen, you might be able to see them  all, or you might need to use the arrows to rotate between the pages of  the table. <br/></p>\n<p>a rule consists of the following elements:<br/></p>\n\n<ul><li>at the top, a combination of pose and tile design: these are fixed.\r\n</li><li>the tile design that will be used to replace the current tile: you can click on it to rotate between the four possible designs.\r\n</li><li>the pose of the bird in the next step: you can click on the bird to  rotate between the four possible poses, and a fifth one that indicates  that the bird will halt.\r\n</li><li>where in the row the bird should move, right or left of the current  tile. you can click on the empty space at the left or right of the tile  to have the bird move there.\r\n</li></ul>\n<p>the table of rules highlights the rule that would currently apply,  given the pose of the bird and the tile design where they are standing.   </p>\n<p>the halt pose will hide the new tile design, and additionally it will never be highlighted. <br/></p>\n<p> </p>\r\ntimeline mode\u00a0 \r\n<p>the timeline mode accumulates several past iterations of the process so that you can see its evolution.   </p>\n<p>when the screen has been filled, the timeline automatically scrolls so that the current state is at the bottom.   </p>\n<p>the previous states are always arranged relative to the bird with a hat in the current state.   </p>\n<p>it's very encouraged to use this mode as a source of visuals for algoraves.   </p>\r\ntoolbar\r\n<p>the toolbar at the bottom has the following buttons, from left to right:   </p>\n<ul><li>step: apply the current rule and get to the next step.\r\n</li><li>play/pause: have the bird with a hat move automatically according to the rules.\r\n</li><li>speed: rotate between three different speed levels for the automatic movement.\r\n</li><li>mode: toggle between edit and timeline mode.\r\n</li></ul>\n<p>the toolbar can be used regardless of the mode that <em>jarotsim</em> is on.    </p>\n<p>therefore you can e.g. see how the rules are applied live, and even modify them while the bird with a hat is moving.   </p>\n<p>note that the bird will pause when it arrives at a rule with a halt  pose. you won't be able to step or press play until you change the rule,  the current pose, and/or the current tile design. <br/></p>\r\nexplore\r\n<p> the initial state of jarotsim is based on a turing machine described by Wolfram in A New Kind of Science, page 80.</p>\n<p>it will generate an ever-growing and complex sequence starting from an empty row of tiles.   </p>\n<p>feel free to modify the rules to observe the changes in the behavior of the process.   </p>\n<p>additionally, we invite you to attempt the following:\u00a0</p>\n<p>have the bird with a hat...   </p>\n<ul><li>\"bouncing\" back and forth between two tiles.\r\n</li><li>repeatedly setting a pattern of tiles in the row.\r\n</li><li>setting a pattern of tiles in the row, and then stopping. what's the  longest pattern that you can set before stopping? (this is basically  the \"busy beaver game\")\r\n</li><li>processing an \"input\" given as the initial state of the row of  tiles. maybe the bird can duplicate it? count the amount of specific  tiles? perform arithmetic?\r\n</li><li>generating interesting visuals for your next algorave.\r\n</li><li>and whatever else you can think of!\r\n</li></ul>\n<p>setting up the sixteen possible rules in the table can be a little bit overwhelming, so remember that you can \"turn off\" a rule, a column and/or a row by using the halting pose.</p>\n<p>have fun! \r\n</p>\n<br/><br/>\r\nsupport\r\n<p>we will really appreciate it if you are able to pay for <em>jarotsim</em>,  because you will help supporting our projects of human-scale computing  and movement!    </p>\n<p>thank you! &lt;3 \r\n</p>", "metacritic": null, "released": "2022-04-08", "tba": false, "updated": "2022-04-08T06:55:11", "background_image": "https://media.rawg.io/media/screenshots/34f/34fc52b717d542c3d5e9710fcab04b4e.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 50, "game_series_count": 0, "reviews_count": 0, "platforms": ["Android", "Linux", "macOS", "PC"], "developers": ["compudanzas"], "genres": ["Simulation"], "publishers": [], "esrb_rating": null}