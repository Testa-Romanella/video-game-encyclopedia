{"id": 385900, "slug": "eae6320_assignment8_writeup", "name": "EAE6320_Assignment8_WriteUp", "name_original": "EAE6320_Assignment8_WriteUp", "description": "<p><strong>Details of the Assignment:</strong></p>\n<ul><li>The main purpose of the assignment was to convert the exported object lua file to binary file and then creating the object using that binary file\r\n  </li><li>The game has following controls:   <ul><li>\u201cW\u201d is used to move object forward(z+)\r\n  </li><li>\u201cS\u201d is used to move object backward(z-)\r\n  </li><li>\u201cA\u201d is used to move object left(x+)\r\n  </li><li>\u201cD\u201d is used to move object right(x-)\r\n  </li><li>\u201cE\u201d is used to move object up(y+)\r\n  </li><li>\u201cQ\u201d is used to move object down(y-)\r\n  </li><li>\u201cSPACE\u201d is used to change object geometry\r\n  </li><li>\u201cTAB\u201d is used to switch between objects\r\n  </li><li>\u201cUP\u201d is used to move camera forward(z+)\r\n  </li><li>\u201cDOWN\u201d is used to move camera backward(z-)\r\n  </li><li>\u201cLEFT\u201d is used to move camera left (x-)\r\n  </li><li>\u201cRIGHT\u201d is used to move camera right (x+)\r\n  </li><li>\u201cPAGE UP\u201d is used to move camera up (y+)\r\n  </li><li>\u201cPAGE DOWN\u201d is used to move camera down(y-)</li></ul></li></ul>\n<p><strong>Running Part of Game:</strong>\n</p>\n\n<p><em>Fig 1. Running Game</em>\n</p>\n<p>\u00a0\r\n  </p>\n<p><strong>How I reach till this point:</strong>\n</p>\n\n<ul><li>Before starting the assignment, I was already using maya to export game objects</li><li>We had our geometry lua file before starting the assignment, but reading lua file was inside game code</li><li>So, the first thing I did was to change where the lua files are read form game to asset loading, and change the data to binary code before copying the new binary file to output directory.</li><li>For changing the data to binary, I am using the following format: vertex count (uint32_t), index count (uint32_t), vertex data (3d object data), index data ((uint32_t), (uint16_t))<ul><li>The reason I am using this format is because this format is properly aligned format and we don\u2019t need to change the alignment</li><li>uint32_t is a 4 byte data, so both vertex count and index count would start at a multiple of 4 ,0 and 4 respectively, our 3D object has max data of size 4 bytes so vertex data must also start from multiple of 4 which it starts at 8 and will align all the data in multiple of 4, now index data can be either 2 byte or 4 byte, but our data is aligned to multiple of 4 bytes which is in turn multiple of both 2 and 4, thereby preventing the need to align data, which can be easily seen in the below figure.</li></ul></li></ul>\n\n<p><em>Fig 2. My Binary file for simple plane</em><br/></p>\n<ul><li>The red line data is my vertex count, blue line data is index count, yellow mark data is my vertex data and black line data is index data</li><li>There are multiple advantages in using binary file for reading data at run time:<ul><li>It reduces the size of the data that you are transferring with your game: one of my lua file is\u00a0<strong>42.9MB</strong>\u00a0whereas the same file in binary is\u00a0<strong>3.36 MB</strong></li><li>It reduces the time it takes to load the game: I have clocked the time it took to load my data at both asset build time and runtime\u00a0</li></ul></li></ul>\n\n<p>\u00a0\r\n      </p> <p>Lua   File\r\n      </p> <p>Binary   file\r\n     </p> <p>Time   to Build Asset\r\n      </p> <p>0.01184554   Seconds\r\n      </p> <p>1.21234   Seconds\r\n     </p> <p>Time   to Run the game\r\n      </p> <p>1.400670   Seconds\r\n      </p> <p>0.002215   Seconds\r\n     </p>\n<p>\u00a0\r\n  </p>\n<ul><li>The table shows how much time it took for same file to run and copy at both build time and run time   </li><li>Which makes the binary file a clear winner as we don\u2019t want users to wait for 1.4 seconds every time they start the game\r\n  </li><li>Still, we need the lua file as our main geometry data, because lua files are easily readable files and so they can be changed, but we want our game to start quickly with minimum wait so we convert the readable file to binary which reduces our wait time for loading the game.\r\n  </li><li>I have different binary files for each platform, because of the winding order, the whole purpose of doing binary file is to make reading data quick and so each platform have its own binary file which has data related to its winding order so that it can run directly.\r\n</li></ul>\n\n<p><em>Fig 3. Getting values from binary file</em></p>\n<p>\u00a0<br/> <br/>\u00a0<br/> <br/><strong>Optional Challenge:</strong><br/> </p>\n<ul><li>There were 4 optional challenge in this assignment: \r\n  <ul><li>adding our own extension to binary file\r\n  </li><li>aligning the binary data optimally\r\n  </li><li>supporting 32-bit indices\r\n  </li><li>adding recognizable object\r\n  </li></ul></li><li>For creating our own extension, I changed the assetsToBuildFunction.lua file to change my target extension to \u201c.binary\u201d\r\n  </li></ul>\n\n<p><em><em><em>Fig 4. All my binary files with \".binary\" extension</em></em></em><br/></p>\n<p><em><br/> </em></p><em>\n<ul><li>I explained the alignment part just above Fig 2\r\n  </li><li>\u00a0For supporting 32-bit indices, 1 first changed my index count from uint16_t to uint32_t and added a bool in my geometry which tell whether to use 16-bits or 32 bits for my index buffer\r\n  </li><li>Which I am checking if the data is above the limit of 16-bits than use 32-bits\r\n  </li><li>Lastly, I added a knife as a recognizable object\r\n  </li></ul>\n</em><p><em><em><br/> <br/><em>Fig 5. Recognizable object</em></em></em></p>", "metacritic": null, "released": "2019-10-24", "tba": false, "updated": "2019-10-25T05:47:49", "background_image": "https://media.rawg.io/media/screenshots/6ec/6ec35a9c9faf7f17b70220d714f207fd.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 3, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["M17D05"], "genres": [], "publishers": [], "esrb_rating": null}