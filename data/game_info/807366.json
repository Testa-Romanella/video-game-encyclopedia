{"id": 807366, "slug": "mindset-itch", "name": "MINDSET (itch)", "name_original": "MINDSET (itch)", "description": "<p>How strong is your mindset?\u00a0</p><p>Welcome to MINDSET where I developed this game in JavaScript. Mindset is a 2D, geometric, shooter-style game. My ability to create games from scratch is enhanced due to a lot of the fundamentals of game development.\u00a0</p><p>I started to develop a fundamental player class that will become the protagonist: Mindset. You'll start with a tiny white circle in the centre of the screen that represents Mindset. Here, I equipped our hero with a semi-automatic gun whenever I press the left-click button. To create this effect, I use some event listeners and basic mathematics. Unfortunately, there had to be some bad people that had to intervene Mindset. Circles of varying sizes will be Mindset's adversaries, and they will advance from the screen's boundaries into the centre of the screen in an effort to kill our hero and ruin the day of becoming angry and gloomy. Here, we need a way to properly defend our Mindset so I'll learn how to recognise when our adversaries and missiles collide. What happens if an opponent touches Mindset? it does indeed pass away. I needed to write code so Mindset can use projectiles to eliminate the circles as they are essentially useless and waste the positive MINDSET. Without colour, life would be dreary; thus, I added some. As our enemy particles move around Mindset, I discovered how to give them various hues. The circles can vanish in an instant, but it would be cooler if I could make them disappear entirely. For this effect, I used the well-known animation package GSAP. YES, an adversary should shrink when hit by a projectile, but they should also explode! When Mindset's projectile strikes a circle, I simulated a firework-like explosion using a few particle physics techniques. Without a score, a shooter game like this would be incomplete (it could be, but wow would it be boring). Here, I used HTML to generate a score label that changes as soon as Mindset takes out a circle. The splice method removes things. This will function when used in conjunction with setTimeout, but as Mindset becomes more complicated and demands more resources, problems may arise. I made a really clear interface that indicates when Mindset should start and when it should end using some simple HTML and CSS tricks. If we lose, we'd probably prefer to play again because that's the main goal of our Mindset, WE DON'T GIVE UP (as long as this game isn't terrible), thus I needed a mechanism to resume it, so I added a restart button. If I had a random player play Mindset as soon as it had finished loading, it might be startling.\u00a0</p><p>I've always believed in the fundamentals of helping as many people as possible because I think knowledge and personal development are some of the best ways to improve our world.\u00a0</p>", "metacritic": null, "released": "2022-06-23", "tba": false, "updated": "2022-06-24T09:45:21", "background_image": "https://media.rawg.io/media/screenshots/98d/98db39299074a861669d74d401cf1358.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 5, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["OnePersonStudio"], "genres": ["Shooter"], "publishers": [], "esrb_rating": null}