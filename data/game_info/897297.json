{"id": 897297, "slug": "attention-verglas", "name": "Attention ! Verglas", "name_original": "Attention ! Verglas", "description": "<p>An ice puzzle generator inspired by the Ice Path (and other similar locations) from the Pok\u00e9mon Gold and Silver games.</p>\n<p>The goal is to move the small slime from its starting point to the hole to fall down to the next level. However, once you start moving in a direction you cannot stop until hitting a wall or landing on a snow patch.</p>\r\nControls\r\n<p>Arrow keys, swiping a direction (on mobile) - move the slime around</p>\n<p>Clicking the snow patch button (on the left) - reset the level</p>\n<p>Clicking the hole button (on the right) - solves the level automatically<br/></p>\r\nLevel generation\r\n<p>Here is the procedure used to generate levels:</p>\n<ul><li>On an empty 12 by 12 grid, rocks are placed at random until at most 40% of all tiles are covered</li><li>A starting point is chosen at random</li><li>All tiles reachable from this starting point are listed, and the furthest one gets changed into a snow patch<ul><li>This step is repeated until the path to the furthest tile no longer increases in size</li></ul></li><li>The furthest tile from the starting point gets changed into a hole, to mark it as the goal of the level</li><li>The whole map is then scanned tile by tile 5 times, applying a cleanup and a clutter  procedure at each step<ul><li>The cleanup procedure changes a rock or a snow patch to an ice tile if doing so does not decrease the length of the shortest solution; useless tiles are left in with a 40% random chance for aesthetic purposes and to confuse the player</li><li>The clutter procedure changes a tile into a rock if doing so increases the length of the shortest solution</li></ul></li><li>If the shortest solution takes lower than 7 moves, the whole generation process is restarted from the first step up to 5 times, at which point the algorithm gives up</li></ul>\r\nNotes on the generation procedure\r\n<ul><li>Most if not all of the values mentioned in the generation procedure could be altered to try and influence the length of the solution</li><li>While the generation succeeds most of the time, it is not guaranteed to do so (and I did manage to make it fail at least one)</li><li>There is currently no safeguard against locking the player in an unwinnable state</li><li>Focusing on the longest path tends to produce levels \"on a railroad\", where the next step feels fairly obvious if not forced entirely.\u00a0<ul><li>Intentionally not targeting the \"longest-shortest solution\" as the level goal could help with mitigating this issue</li><li>Having multiple \"hidden goals\" as additional constraints during the generation might help to keep the level more \"explorable\"</li><li>Adding multiple starting and end points could be done to help integrate the generated level into a bigger cave or dungeon for a fully-featured game</li></ul></li></ul>", "metacritic": null, "released": "2022-12-17", "tba": false, "updated": "2022-12-19T10:20:51", "background_image": "https://media.rawg.io/media/screenshots/ecf/ecf1caec6a5cac8d5bd62aa01e35c65f.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 28, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["Delca"], "genres": ["Puzzle"], "publishers": [], "esrb_rating": null}