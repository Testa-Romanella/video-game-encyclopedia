{"id": 747611, "slug": "slicing-4d-raytracer", "name": "Slicing 4D Raytracer", "name_original": "Slicing 4D Raytracer", "description": "Slicing 4D raytracer\r\n<p>A small 4D raytracer of the slicing kind\u00a0\u2014\u00a0meaning that it shows you a small 3D slice of a 4D world.\u00a0The gimmick of this raytracer is that it's entirely in first person.\u00a0You can rotate on the WY plane\u00a0so that you can turn the camera to look towards the fourth dimension.\r\n</p>\n<p>Concerning what you can do in it,\u00a0you can sort of fly around and look at some hypercuboids and hyperspheres.\u00a0There's also a little fenced area and a little house to find.\u00a0The most interesting part is definitely rotating on the\u00a0WY plane,\u00a0so make sure to do that a lot.\r\n</p>\n<p>In technical terms,\u00a0rotating on the WY plane more or less replaces the world's Y axis with\u00a0the W axis in the visualization.\u00a0When the WY rotation is above 180\u00b0\u00a0the world is mirrored,\u00a0so generally the interesting range of WY rotation is below 180\u00b0. <strong><em>Downloads can be found near the bottom of the page.</em></strong></p>\n\r\nExplanation\r\n<p>To understand what's going on a bit better,\u00a0you should firstly understand that\u00a0trying to draw a 4D space on a 2D computer screen is as difficult\u00a0as turn a 3D room into a 1D drawing.\u00a0On a 1D drawing,\u00a0colors can only be different horizontally and not vertically\u00a0\u2014\u00a0or the other way around,\u00a0the important thing is that there is only one dimension.\u00a0This means that you can show that objects are to the left or\u00a0to the right of other objects,\u00a0but you can't show that objects are above or\u00a0below other objects,\u00a0which doesn't make it very easy to show the whole room in the\u00a0drawing.\u00a0If you were to make a 1D drawing of a room,\u00a0what you would probably end up\u00a0doing is essentially drawing a flat slice of the room.\u00a0This is essentially like taking a photograph of the room,\u00a0and then cutting away\u00a0almost the whole picture except a very thin horizontal sliver in the middle.\u00a0You would be left with an\u00a0(almost)\u00a01D slice of the photo.\r\n</p>\n<p>\n</p>\n<p><em>Here's an example of that, but I stretched the 1D image vertically so you can actually see it slightly.</em>\n</p>\n<p>Imagine if a computer drew a such a 1D slice for you,\u00a0fifty times a second,\u00a0and then you would have to navigate the room with those\u00a0computer drawings.\u00a0A 1D slice doesn't show that much of the room,\u00a0so this would certainly be very\u00a0difficult.\u00a0This raytracer is using a somewhat similar technique,\u00a0but instead of turning a 3D room\u00a0into a 1D drawing,\u00a0we're turning a 4D room into a 2D drawing.\u00a0Just like a 3D room is difficult to navigate with only 1D drawings,\u00a0a 4D room is difficult to navigate with only 2D drawings.\r\n</p>\n<p>It's important to understand that you're only ever seeing a very thin slice of\u00a0the 4D room.\u00a0This thin slice of the room that you're seeing is actually 3D\u00a0\u2014\u00a0your computer\u00a0screen is a 2D surface with width and height,\u00a0and the third dimension is depth,\u00a0which is implied in the 2D picture you're seeing\u00a0(humans are used to seeing\u00a02D pictures of 3D spaces because that's how our eyes work).\u00a0Because the program only shows you a 3D slice of the 4D world,\u00a0there's always a fourth dimension that you're not seeing.\u00a0Depending on your WY rotation,\u00a0this fourth dimension you're not seeing is either\u00a0W or Y.\r\n</p>\n<p>When you start the program,\u00a0it looks just like any normal 3D scene,\u00a0because\u00a0you're only seeing the X,\u00a0Y,\u00a0and Z dimensions\u00a0(for those less mathematical:\u00a0those are the normal three dimensions that you can always see),\u00a0and it's\u00a0only when you rotate on the WY plane that it starts to look slightly special.\u00a0It's mostly the way the world changes as you're rotating and moving on the 4th\u00a0axis that's very special.\r\n</p>\n<p>Because you're only seeing three out of four dimensions in this\u00a0raytracer at any given point,\u00a0it doesn't necessarily give you a very convenient overview of the 4D world.\u00a0The program contains a game\u00a0(not the best game,\u00a0but no less a game)\u00a0where you have to find a white hypersphere,\u00a0and if you try to find\u00a0it a few times you will definitely realize that it can be quite challenging.\u00a0In truth the hypersphere usually isn't really hidden.\u00a0After the second time you find it,\u00a0the hypersphere is always in mid-air\u00a0somewhere.\u00a0In a normal 3D scene you would see a white sphere immediately if it were\u00a0hovering around in mid-air,\u00a0but if you can only see a thin slice of the world at a time,\u00a0then even something in mid-air can be difficult to find.\u00a0A being with proper four-dimensional vision would be able to find the\u00a0hypersphere in an instant,\u00a0because he would be able to see the entirety of the\u00a0scene.\r\n</p>\n<p>If you rotate and move in the fourth dimension a lot,\u00a0it's possible to get a\u00a0bit of a feeling for it,\u00a0although it is definitely very difficult to understand.\u00a0However,\u00a0because of the technique this raytracer uses,\u00a0you never get a very good\u00a0overview of the 4D world no matter how much you get used to it.\r\n</p>\n<p>Why do the spheres grow and shrink?\u00a0That's because you're looking at thin slices of a hypersphere.\u00a0To explain further,\u00a0let's first note for a moment that a circle is a round 2D shape,\u00a0a sphere is a round 3D form and a hypersphere is a round 4D form.\u00a0Just like how a paperthin slice of a sphere\u00a0<em>(3D)</em>\u00a0is a circle\u00a0<em>(2D)</em>,\u00a0a thin slice of a hypersphere\u00a0<em>(4D)</em>\u00a0is a sphere\u00a0<em>(3D)</em>.\u00a0If you would take a thin slice out of a sphere,\u00a0the slice would be biggest if\u00a0you cut through the middle and smaller if you cut near the sides.\u00a0Similarly,\u00a0the\u00a0<em>(3D)</em>\u00a0slice of a\u00a0<em>(4D)</em>\u00a0hypersphere\u00a0is biggest when you cut through\u00a0the center,\u00a0and smaller when you cut near the sides.\u00a0That's why the spheres you're seeing grow and shrink\u00a0\u2014\u00a0you're seeing different\u00a0slices of a hypersphere.\r\n</p>\r\nWhat you can find\r\n<p>Here's a list of all the forms in the world:\r\n</p>\n<ul><li>Two hard-to-miss green hypercuboids that look a bit like a grass field.\r\n</li><li>A blue hypersphere.\r\n</li><li>A big red hypersphere.\r\n</li><li>A red hypercuboid with four square faces (two small squares and two big squares).\r\n</li><li>A small white hypercuboid and a small red hypercuboid that are touching each other.\r\n</li><li>Two white hypercuboids that are meant to look a little bit like clouds.\r\n</li><li>Four hyperspheres at the corners of the grass: Grey, blue, red, and green.\r\n</li><li>A small black hypersphere that turns white when you get close. I made the other forms intentionally easy to find, but this one has arbitrary coordinates so it's a bit more challenging.\r\n</li><li>A little fence area consisting of six red hypercuboids\r\n</li><li>Last but not least, a tiny little house\r\n</li></ul>\n<p>If you're a very goal-oriented person,\u00a0I also added a thing where you get points for touching a white hypersphere.\u00a0Try finding it a couple of times.\u00a0It becomes progressively more difficult.\r\n</p>\n<p>Lost?\u00a0Press F3 to show your coordinates and\u00a0remember that you're only seeing a small sliver of 4D space,\u00a0so you may need to move on the W or the Y axis to find things back.\u00a0The blue hypersphere can be seen when Y and W are 0,\u00a0so you can use that to\u00a0orient yourself.\u00a0Also helpful to know is that you start at the coordinate\u00a0(0,\u00a00,\u00a00,\u00a00).\r\n</p>\r\nLinux installation\r\n<p>I didn't include the shared library dependencies with the program on Linux\u00a0(I might do this some other time,\u00a0though).\u00a0Here's how to install the necessary packages\u00a0on Ubuntu or an Ubuntu-like distribution:\r\n</p>\r\n\r\nsudo apt install libsdl2-2.0.0 libsdl2-ttf-2.0.0\r\n# Explanation for beginner Linux users:\r\n# \"sudo\"\r\n#   DO something as Super User (super user is equivalent to admin on Windows)\r\n# \"apt install\"\r\n#   Run APT (the package manager for Debian and Ubuntu)\r\n#   and tell it to install something.\r\n# \"libsdl2-2.0.0 libsdl2-ttf-2.0.0\"\r\n#   The two packages we need for this program. Here we're installing SDL2,\r\n#   which is a code library which videogames often use for things like creating\r\n#   a window and checking which buttons were pressed. \r\n<p>For other distributions,\u00a0simply find and download the packages\u00a0for SDL2 and SDL2-TTF.\r\n</p>\r\nTechnical issues\r\n<p>At the start,\u00a0the program automatically adjusts its resolution to give you\u00a0a decent refresh rate.\u00a0If the viewport is too small,\u00a0you can press F3 and then repeatedly F4 to change\u00a0it.\r\n</p>\n<p>If you have any other technical issues,\u00a0please post a comment.\r\n</p>", "metacritic": null, "released": "2022-02-26", "tba": false, "updated": "2022-02-28T12:39:35", "background_image": "https://media.rawg.io/media/screenshots/803/803a334a91638dfbb7a26e110e49b919.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 10, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC", "Linux", "Web"], "developers": ["Zowie van Dillen"], "genres": ["Educational"], "publishers": [], "esrb_rating": null}