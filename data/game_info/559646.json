{"id": 559646, "slug": "tutorial-for-bit-masking-autotiling-on-browsers-20", "name": "Tutorial for Bit Masking & Autotiling on browsers - 2021", "name_original": "Tutorial for Bit Masking & Autotiling on browsers - 2021", "description": "<strong>ENGLISH\u00a0 VERSION</strong>\n\n<p><strong>THE GOAL OF THIS EDITOR</strong></p>\n<p>This JavaScript Canvas editor was developed to create the levels for the <strong>Triogical </strong>game.</p><p>We have to click to arrange the sprites and it generates the code to copy / paste in the mobile application for Android &amp; iOS.<br/></p>\n\n<p><strong>HOW DOES THE A.I. WORKS TO DRAW WELL-CONNECTED WALLS ?!</strong></p>\n<p>Tile Bit masking is a method for automatically selecting the appropriate sprite to intelligently paste it to its neighboring sprites.<br/></p>\n<p>Operation is simpler than it looks.<br/>Each tile looks at its neighboring tiles to determine which sprite to choose, in this case the diagonals are ignored.</p>\n<br/>\n<p>The sheet of 16 sprites above has all the combinations of the walls depending on the turns they take but also their interconnections.<br/></p>\n<p>The numbers on each tile represents the bitmasking value</p>\n\n<p><strong>NEIGHBOURS IS THE KEY!</strong></p>\nAfter placing tile 0, if we click to its right to draw the wall, BOTH tiles will change appearance to draw an interconnection.<br/><br/>Tile 0 will be replaced by tile 2.\r\nThe tile 8 just created is the complement pasted to the tile 2.\r\n\r\n<p>How it works?<br/></p>\nWe consider that tile 0 is represented by the red square. The \"?\" square clicked on its right has the value 2. The tile 0 will be replaced by the tile 2.<br/><br/>Then, we consider that the tile \"?\" is represented by the red square. A sprite is present to its left. The tile \"?\" will be replaced by the tile 8.\r\n<p>And so on, each sprite will look at its neighbors to determine its own value.<br/></p>\n<p>An example with a sprite surrounded by several sprites, we will calculate it:</p>\n<br/>\n<p>We will start with the tiles from the top left, going down to the bottom right.<br/></p>\n\nWe can calculate the value of each tile around the colored red.<br/>N<strong>orth</strong>: no tile.\u00a0 <strong>East\u00a0</strong>: 1 tile with value 2.<br/><strong>South</strong>: 1\u00a0tile with value 4.\u00a0 <strong>West</strong>: no tile.<br/>So:<br/>1x0 + 2x1 + 4x1 + 8x0\u00a0 \u00a0=\u00a0 <strong>\u00a06</strong><br/>\u00a0 <br/>Which corresponds well to get the\u00a0tile #6<br/>N<strong>orth</strong>: no tile.\u00a0\u00a0<strong>East\u00a0</strong>: no tile.<br/><strong>South</strong>: no tile.\u00a0\u00a0<strong>West</strong>: 1 tile with value 8<br/>So:\u00a0<br/>1x0 + 2x0 + 4x0 + 8x1\u00a0 \u00a0=\u00a0 <strong>\u00a08</strong><br/><br/>N<strong>orth</strong>: no tile.\u00a0\u00a0<strong>East\u00a0</strong>: 1 tile with value 2.\r\n<br/><strong>South</strong>: no tile.\u00a0\u00a0<strong>West</strong>: no tile.<br/>So:\u00a0<br/>1x0 + 2x1 + 4x0 + 8x0\u00a0 \u00a0=\u00a0 <strong>\u00a02</strong><br/><br/>N<strong>orth</strong>: 1 tile with value 1.\u00a0\u00a0<strong>East\u00a0</strong>: no tile.<br/><strong>South</strong>: no tile.\u00a0\u00a0<strong>West</strong>: 1 tile with value 8.<br/>So:\u00a0<br/>1x1+ 2x0 + 4x0 + 8x1\u00a0 \u00a0=\u00a0 <strong>\u00a09</strong><br/><br/>\n<p>So we can calculate all the possible combinations.<br/></p>\n<p><strong>BUT HOW SHOULD WE DEFINE OUR OWN TILE NUMBERING AND THEIR ORDER IN THE SPRITE SHEET?!?</strong><br/></p>\n\nIn order to define the number of each tile, we can think about it in the following way below:<br/>The tile with no link must be the 0 value tile.<br/><br/>The logic tile under another one must be the tile with value 1, because its drawing is finished to the left, right, and bottom, and the top side must be reattach to another sprite.<br/><br/>The logic tile on the right to\u00a0another one must be the tile with value 2, because its drawing is finished to the top, left, and bottom, and the right side\u00a0must be reattach to another sprite.<br/><br/><p>. . .</p>etc.This tile is a \"crossroads\" because it is central and connected to the other sprites in all directions.<br/>It corresponds to the sum 1 + 2 + 4 + 8 = 15<br/><br/>\n<strong>VERSION \u00a0FRAN\u00c7AISE</strong>\n\n<p><strong>LE BUT DE CET EDITEUR</strong></p>\n<p>Cet \u00e9diteur cr\u00e9\u00e9 \u00e0 partir de Canvas et Javascript a \u00e9t\u00e9 d\u00e9velopp\u00e9 afin de cr\u00e9er des niveaux pour le jeu\u00a0 <strong>Triogical</strong>.<br/>Nous devons cliquer pour\u00a0organiser les sprites et cela g\u00e9n\u00e8re le code \u00e0 copier / coller dans l'application mobile pour Android et iOS.</p>\n\n<p><strong>COMMENT FONCTIONNE L'INTELLIGENCE ARTIFICIELLE POUR DESSINER DES MURS BIEN CONNECTES ?!</strong></p>\n<p>Le bit masking est une m\u00e9thode permettant de s\u00e9lectionner automatiquement la tuile\u00a0appropri\u00e9e pour la\u00a0 coller intelligemment \u00e0 ses tuiles voisines.</p>\n<p>Le fonctionnement est plus simple qu'il n'y para\u00eet.<br/>Chaque tuile regarde ses tuiles voisines afin de d\u00e9terminer le sprite \u00e0 choisir, dans ce cas, les diagonales sont ignor\u00e9es.</p>\n<br/>\n<p>La feuille de 16 sprites ci-dessus comporte toutes les combinaisons des murs en fonction des\u00a0virages qu'ils prennent mais aussi de leur interconnexions.<br/>Les nombres sur chaque tuile repr\u00e9sentent la valeur de masquage de bits.</p>\n\n<p><strong>LES VOISINS SONT LA CLE !</strong></p>\nApr\u00e8s avoir pos\u00e9 la tuile 0, si on clique \u00e0 sa droite pour dessiner le mur, les DEUX tuiles vont changer d'aspect pour dessiner une interconnexion.<br/><br/>La tuile\u00a00 sera remplac\u00e9e par la tuile 2.<br/>La tuile\u00a08 venant d'\u00eatre cr\u00e9\u00e9e est compl\u00e9mentaire \u00e0 la tuile 2.\r\n\r\n<p>Comment \u00e7a marche?</p>\nOn consid\u00e8re que la tuile\u00a00 est repr\u00e9sent\u00e9e par la case rouge. La case \"?\" cliqu\u00e9e \u00e0 sa droite a pour valeur 2. La tuile 0 sera donc remplac\u00e9e par la tuile\u00a02.<br/><br/>Ensuite, on consid\u00e8re que la tuile\u00a0\"?\" est repr\u00e9sent\u00e9e par la case rouge. Une tuile\u00a0est pr\u00e9sente \u00e0 sa gauche.\u00a0\u00a0La tuile\u00a0\"?\" sera donc remplac\u00e9e par la tuile 8.\r\n<p>Et ainsi de suite, chaque tuile va regarder ses voisins pour d\u00e9terminer sa propre valeur.</p>\n<p>Un exemple avec une tuile entour\u00e9e de plusieurs tuiles, nous allons le calculer :</p>\n\n<p>On va commencer par les tuiles du haut \u00e0 gauche en descendant jusqu'en bas \u00e0 droite.</p>\n\nOn peut calculer la valeur de chaque tuile autour de la color\u00e9e en rouge.<br/>Au <strong>nord </strong>:\u00a0pas de tuile.\u00a0A <strong>l'est </strong>: 1 tuile de valeur 2.<br/>Au <strong>sud </strong>: 1\u00a0tuile de valeur 4.\u00a0\u00a0A\u00a0<strong>l'ouest </strong>: pas de tuile.<br/>Soit :\u00a0<br/>1x0 + 2x1 + 4x1 + 8x0\u00a0 \u00a0=\u00a0 <strong>\u00a06</strong><br/>\u00a0 <br/>Ce qui correspond bien \u00e0 chercher notre tuile n\u00b06<br/>Au <strong>nord </strong>:\u00a0pas de tuile.\u00a0A <strong>l'est </strong>: pas de tuile.<br/>Au <strong>sud </strong>: pas de tuile.\u00a0\u00a0A\u00a0<strong>l'ouest </strong>: 1 tuile de valeur 8.<br/>Soit :\u00a0<br/>1x0 + 2x0 + 4x0 + 8x1\u00a0 \u00a0=\u00a0 <strong>\u00a08</strong><br/><br/>Au <strong>nord </strong>:\u00a0pas de tuile.\u00a0A <strong>l'est </strong>: 1 tuile de valeur 2.<br/>Au <strong>sud </strong>: pas de tuile.\u00a0\u00a0A\u00a0<strong>l'ouest </strong>: pas de tuile.<br/>Soit :\u00a0<br/>1x0 + 2x1 + 4x0 + 8x0\u00a0 \u00a0=\u00a0 <strong>\u00a02</strong><br/><br/>Au <strong>nord </strong>: 1 tuile.\u00a0A <strong>l'est </strong>: pas de tuile.<br/>Au <strong>sud </strong>: pas de tuile.\u00a0\u00a0A\u00a0<strong>l'ouest </strong>: 1 tuile de valeur 8.<br/>Soit :\u00a0<br/>1x1+ 2x0 + 4x0 + 8x1\u00a0 \u00a0=\u00a0 <strong>\u00a09</strong><br/><br/>\n<p>Ainsi on peut calculer toutes les combinaisons possibles.</p>\n<p><strong>MAIS COMMENT ON DEFINI LES NUMEROS DES TUILES DANS LA FEUILLE DE SPRITES ?!?</strong><br/></p>\n\nAfin de d\u00e9finir le num\u00e9ro de chaque tuile, on peut y r\u00e9fl\u00e9chir de la mani\u00e8re suivante ci-dessous:<br/><br/>La tuile n'ayant aucune liaison doit \u00eatre la tuile de valeur 0.<br/><br/>Le dessin de tuile logique sous une autre tuile doit \u00eatre la tuile de valeur 1, car son dessin est termin\u00e9 \u00e0 gauche, droite et bas, et le haut doit se rattacher \u00e0 une autre tuile.<br/><br/>Le dessin de tuile logique \u00e0 droite d'une autre tuile doit \u00eatre la tuile de valeur 2, car son dessin est termin\u00e9 en haut, gauche et bas, et le c\u00f4t\u00e9 droit doit se rattacher \u00e0 une autre tuile.<br/><br/><p>. . .</p>etc.Cette tuile est un \"carrefour\" car elle est centrale et connect\u00e9e aux autres tuiles dans toutes les directions.<br/>Elle correspond \u00e0 la somme 1 + 2 + 4 + 8 = 15<br/><br/>\n\r\nTHE EDITOR IN ACTION!", "metacritic": null, "released": "2021-02-17", "tba": false, "updated": "2021-02-19T06:51:55", "background_image": "https://media.rawg.io/media/screenshots/6cf/6cf681eed1bb1685651803ff3f8d01ce.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 4, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["Geogalion"], "genres": ["Puzzle"], "publishers": [], "esrb_rating": null}