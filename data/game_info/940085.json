{"id": 940085, "slug": "space-invaders-amstrad-cpc-by-copper-france", "name": "Space Invaders (Amstrad CPC) by Copper France", "name_original": "Space Invaders (Amstrad CPC) by Copper France", "description": "<p>SPACE INVADERS</p>\n<p>This is Space Invaders for the Amstrad CPC!</p>\n<p>Keyboard left and right arrows are used to move the laser and SPACE to fire.</p>\n<p>The goal is to defeat wave after wave of descending aliens to earn as many points as possible.</p>\n\n<p>TECHNICAL PART</p>\n<p>The game works on all Amstrad CPC (using only BASIC 1.0)</p>\n<p>1) Control Characters</p>\n<p>The game use a lot of Control characters to replace MODE, PAPER, BORDER, INK, SYMBOL in only one PRINT in the first line :</p>\n<p>MODE is CHR$(4)+\"1\" FOR MODE 1</p>\n<p>PAPER is CHR$(14)+\"0\" FOR PAPER 0</p>\n<p>BORDER is CHR$(29)+CHR$(64+0)+CHR$(64+0) for BORDER 0,0</p>\n<p>INK is CHR$(18)+CHR$(64+v)+CHR$(64+v) for INK v,v</p>\n<p>SYMBOL is CHR$(25)+CHR$(i)+CHR$(a)+CHR$(b)+CHR$(c)+CHR$(d)+CHR$(e)+CHR$(f)+CHR$(g)+CHR$(h) for SYMBOL i,a,b,c,d,e,f,g,h</p>\n<p>CHR$(12) is also used to clear the screen</p>\n<p>CHR$(8),CHR$(9),CHR$(10),CHR$(11) are used to move cursor one character to the left, right, bottom and top for example to draw the green bunkers.</p>\n<p>2) POKE &amp;B28B,79</p>\n<p>This POKE is used to work around a PRINT bug on CPC 464 when using control characters in strings.</p>\n<p>Indeed, the size of text is not calculated correctly and the text is wrapped even if it fits in window.</p>\n<p>This POKE is used to simulate a 80 columns windows in MODE 1 to avoid this wrap.</p>\n<p>On other machine this POKE has no visible or harmful effects.</p>\n<p>3) PEEK from screen memory</p>\n<p>Instead of using COPYCHR$() which don't exists on CPC 464 I used PEEK from screen memory.</p>\n<p>The second line of the screen (&amp;C800-&amp;C7FF) was used because the 4 first pixels was different for all 3 aliens and shots so only one PEEK is needed to know what is hit.</p>\n<p>Values depend of PEN used :</p>\n<p>PEN 1</p>\n<p>48 is Alien 1</p>\n<p>32 is Alien 2</p>\n<p>112 is Alien 3</p>\n<p>16 is Player shot</p>\n<p>96 is Alien shot</p>\n<p>PEN 2</p>\n<p>15 is Bunker</p>\n<p>PEN 3</p>\n<p>17 is first part of Mystery alien</p>\n<p>255 is second part of Mystery alien</p>\n<p>4) Listing description</p>\n<p>Line 1: Graphics initialization in one PRINT / Variables initializations for graphics tiles / Go in line 10 to finish initializations</p>\n<p>Line 2: Work around POKE / Printing score, bunkers / Printing lifes / Drawing vertical line / Aliens wave array initializations / Variables initialization</p>\n<p>Line 3: Player moves / Current alien moves / Checking bottom reached / Next alien / Player display</p>\n<p>Line 4: Waiting vertical blank / Mystery alien / 4 musical notes</p>\n<p>Line 5: Alien shot</p>\n<p>Line 6: Player shot</p>\n<p>Line 7: Alien hit checks</p>\n<p>Line 8: End of wave checks / Mystery hit checks</p>\n<p>Line 9: Player explosion / Life update and game over checks / DATA for tiles's strings and 4 musical notes</p>\n<p>Line 10 : Game Over / Variable initialization / Sound initialization / Alien moves precalculation / Go to first wave</p>\n<p>5) Variables</p>\n<p>z$\u00a0 \u00a0 \u00a0 \u00a0: CHR$(0)</p>\n<p>w$\u00a0 \u00a0 \u00a0 \u00a0: Triple CHR$(0)</p>\n<p>a$()\u00a0 \u00a0 \u00a0: Aliens tiles</p>\n<p>b$\u00a0 \u00a0 \u00a0 \u00a0: Bunker tile</p>\n<p>s$\u00a0 \u00a0 \u00a0 \u00a0: Laser tile</p>\n<p>m$\u00a0 \u00a0 \u00a0 \u00a0: Mystery alien tile</p>\n<p>p\u00a0 \u00a0 \u00a0 \u00a0 : Score</p>\n<p>i\u00a0 \u00a0 \u00a0 \u00a0 : Current alien index</p>\n<p>x,y\u00a0 \u00a0 \u00a0 : Horizontal / Vertical loops</p>\n<p>x(),y()\u00a0 : Aliens position</p>\n<p>s$()\u00a0 \u00a0 \u00a0: Aliens tiles</p>\n<p>o\u00a0 \u00a0 \u00a0 \u00a0 : Offset for starting line of aliens (to increase difficulty of aliens waves)</p>\n<p>n\u00a0 \u00a0 \u00a0 \u00a0 : Aliens remainging</p>\n<p>j\u00a0 \u00a0 \u00a0 \u00a0 : Current alien move index</p>\n<p>u\u00a0 \u00a0 \u00a0 \u00a0 : Player move offset</p>\n<p>q\u00a0 \u00a0 \u00a0 \u00a0 : Mystery horizontal position or 0 if not active</p>\n<p>r\u00a0 \u00a0 \u00a0 \u00a0 : Mystery move offset (1 / -1)</p>\n<p>m$()\u00a0 \u00a0 \u00a0: Mystery alien tiles (0 when moving to the left 2 when moving to the right)</p>\n<p>e,f\u00a0 \u00a0 \u00a0 : Alien shot position (e=0 if no shot)</p>\n<p>b\u00a0 \u00a0 \u00a0 \u00a0 : Alien shot screen memory address for quick tests</p>\n<p>z,y\u00a0 \u00a0 \u00a0 : Player shot position (z=0 if no shot)</p>\n<p>a\u00a0 \u00a0 \u00a0 \u00a0 : Player shot screen memory address for quick tests</p>\n<p>s\u00a0 \u00a0 \u00a0 \u00a0 : Byte read at player shot video screen memory address</p>\n<p>c\u00a0 \u00a0 \u00a0 \u00a0 : Alien type (or 0 if no aliens or mystery)</p>\n<p>m,k\u00a0 \u00a0 \u00a0 : Used to iterate over aliens</p>", "metacritic": null, "released": "2023-03-12", "tba": false, "updated": "2023-03-13T06:17:21", "background_image": "https://media.rawg.io/media/screenshots/57f/57f9b6ade1a735e669139b5b4bc04c76.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 24, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Action"], "publishers": [], "esrb_rating": null}