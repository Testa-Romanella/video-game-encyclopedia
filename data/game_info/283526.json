{"id": 283526, "slug": "procedural-generation-fps-level-generator", "name": "Procedural Generation FPS Level Generator", "name_original": "Procedural Generation FPS Level Generator", "description": "<p>The tool is being created to speed up the level creation process by delivering a new level creation pipeline. The tool isn't platform specific meaning the levels created can be loaded into any game engine that can read a text file. The goal with this tool is to see if procedural generation algorithms can speed up and improve the level creation pipeline. The tool could be used for rapid prototyping levels so instead of spending time creating\u00a0a level from scratch you can just use the tool to generate a base level and build on top of that level instead which would save time at game jams or in indie development.</p>\n<p><strong>How the tool works</strong>: The tool will generate a level based on the users input and save the levels to a text file. The levels are then read into UE4 or Unity and game objects (Meshes)\u00a0are assigned to populate the level.\u00a0</p>\n<p><strong>Framework being used:\u00a0</strong>The is being programmed in C++ and is using the SFML framework. The use for SFML is purely for a 2D visualization. Mainly so i can see the scale of the world and objects and how they all relate to each other. On top of this uses imGui to deliver a U.I for the designer to enter all the information they want the level to be generated off of. Such as room size, number of rooms, algorithms being used, properties to give control over the algorithms and some other FPS elements that might be found commonly in FPS levels.</p>\n<p><strong>Example of how the tools could be used</strong>: a user wants to create an FPS game. They open the tool tell the tool how many levels they want and pick which algorithm/properties they want the levels to be created with and a text file is created with all the levels they want. Then the levels are loaded into Unity and they can cycle through every level and save the ones they like. The tools intended use isn't to create the levels and ship them in the game. The intended use is giving the designer a base level to then edit and add on top of in engine, as they wish.\u00a0</p>\n<p><strong>Target audience: </strong>The intended users are indie studios and people looking to rapid prototype levels.\u00a0</p>\n<p><strong>End goal</strong>: the end goal is to create a tool which allows a user to specify what they want from a level and pick from a wide range of properties and algorithms to achieve the level design they are looking for. On top of that the goal is to speed up prototyping levels.</p>\n<p><strong>GDD/TDD linked below</strong></p>", "metacritic": null, "released": "2019-01-09", "tba": false, "updated": "2019-01-11T04:13:44", "background_image": "https://media.rawg.io/media/screenshots/949/9495b41ded65d2257345861dbed88b9e.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 15, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["MrSlagovich"], "genres": [], "publishers": [], "esrb_rating": null}