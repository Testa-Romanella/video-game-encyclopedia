{"id": 565586, "slug": "spread-reproduce-fight-by-roepipi", "name": "Spread, Reproduce, Fight by RoePipi", "name_original": "Spread, Reproduce, Fight by RoePipi", "description": "INTRODUCTION\r\n============\r\nThis 2-player game takes place on a green island featuring clearings, orchards and mountains. Take control of your people - let them spread, reproduce, fight against people of the other color!\r\nWarning! It's an experimental project. BASIC's joystick control is extremely sluggish, so please apply firm and patient moves.\r\nFEATURES\r\n========\r\nThe game uses high-resolution multicolor graphics mode to provide a lively view. Two players can battle each other simultaneously using two colored selection boxes controlled by two - real or emulated - joysticks. (Please refer to your machine/emulator documentation on how to use joysticks.) Calculation of the winner happens on the fly.\r\nSTARTING VIA EMULATOR\r\n=====================\r\nRecommended emulator: YAPE http://yape.homeserver.hu/\r\nHow to start the game:\r\n1. File / Attach disk image...\r\n2. Select and open the .d64 image\r\n3. Enter command: DLOAD\"*\" and press Enter\r\n4. If you wish to LIST the program, see PROGRAM LINES OVERVIEW down below.\r\n5. Enter command: RUN and press Enter\r\nGAME INSTRUCTIONS\r\n=================\r\nFields\r\n------\r\nThe game plays on a 8x6 map, totaling to 48 fields. There are 3 different types of fields: clearings, orchards and mountains. They differ only in their life support capacity: on mountains, people can't reproduce. On clearings, things go normal, in orchards, they reproduce faster.\r\nPeople on fields\r\n----------------\r\nOne field can support up to 500 people. (1 figure means 1-100 men, 2 figures mean 101-200 men, and so on.) If there is fewer than 500 people in a field, they reproduce, except in mountains - but even faster in orchards (marked with $ symbols).\r\nMoving people\r\n-------------\r\nBoth players can move their selection boxes using real or emulated joysticks (red is player 1, blue is player 2). Please use long, sturdy moves as BASIC's joystick control detection is poor. You can move to every direction, including diagonal ones. If trigger is pressed while moving, players can get their own people to move. Note that when there are more than 400 people in a field (depicted as 5 figures), only half of them will move, the rest will remain there, reproducing if possible. This way, you can spread your people. If you move your people over another tribe of yours, they join forces - but not more than 500 people in a field! The excess is lost.\r\nAttacking the enemy\r\n-------------------\r\nWhat would be the aim if not destroying people of other color? Both players can move their own people over the enemy, this way an instant fight will take place: the bigger number wins. There can be no multiple colors in a field, so a fight removes all fighting parties, leaving only the rest of one color.\r\nEnding the game\r\n---------------\r\nThe battle ends if there are no more people of a color - or at all. After a little while, people freeze (players can't move them), the game scans them, then ends with a message that tells which party has won. A tie is the most beautiful thing that can happen. Pressing space - whoever gets there first to press it - restarts the game.\r\nPROGRAM LINES OVERVIEW\r\n======================\r\nUse the LIST command to view the program lines. You can use the LIST from-to syntax to list certain intervals, eg. LIST 0-4.\r\n0 set multicolor gfx mode, colors and var dimensions\r\n1 fill arrays, display short instructions\r\n2 session init, display map\r\n3 LOOP START: get X,Y, draw box, get joy; if none, go to 6\r\n4 if trigger is pressed (and not in final men count) while moving over own men: take all or half of them\r\n5 redraw field, move box; if men was brought, drop them; drop excess men, redraw field\r\n6 count men based on colors, reproduce them, drop excess men, redraw field\r\n7 swap player, next field, if one side won: go to 9: LOOP END\r\n8 SUBroutine: draw field and men\r\n9 if called 2nd time: display winner, wait for pressing space, restart program\r\nThroughout multiple lines: color, joystick direction and field data\r\nVARIABLES\r\n=========\r\nScope    Name&amp;dimensions    Purpose\r\n-----    ---------------    -------\r\nsession    F%(0-7,0-5)    field type at X,Y (0:mountain,1:clearing,2:orchard)\r\nconst    F$(0-2,0-1)    field type gfx lines\r\ntemp    I,J,K,L,M    loop/temp variables\r\ntemp    J        joy input (0-8,128-136)\r\ntemp    M        picked up people count (-red,+blue,-500 - 500)\r\nsession    M%(0-7,0-5)    men count at X,Y (-red,+blue,-500 - 500)\r\nconst    M$        men count display gfx\r\nconst    O        max men count at a field (500)\r\ntemp    P        actual player (0/1)\r\ntemp    R        actual player (alternative, -1/1)\r\ntemp    S(0/2)        stats (0:reds exist(0/1), 2:blues exist(0/1))\r\nconst    S$(0-2)        stats texts (who won: RED/NATURE/BLUE)\r\ntemp    T%        trigger pressed (0/1)\r\ntemp    U,V        actual reproducing sector (0-7,0-5)\r\nsession    W        final scanning in progress, can't move people (0/1)\r\ntemp    X,Y        actual player X,Y coordinates (0-7,0-5)\r\nsession    X(0-1),Y(0-1)    player# X,Y coordinates (0-7,0-5)\r\nconst    X%(0-8),Y%(0-8)    joy X,Y directions (-1 - 1)\r\nSOLUTIONS OF INTEREST\r\n=====================\r\nWhy high-res?\r\n - Because I wanted to use sprite-like selection boxes for practical reasons.\r\n - Because there is a line limit, but memory usage is unlimited in this contest :)\r\nWhy multicolor?\r\n - To be able to draw colored boxes around normal characters, obviously :D\r\n - Because standard characters look a little different on multicolor display, for example spades become human-like characters, and you can draw a good-looking mountain using some /s, Xs, \\s and 's :)\r\nWhy joysticks?\r\n - Because BASIC 3.5 can't handle multiple keypresses.\r\nThroughout the code:\r\n- \".\" instead of \"0\" where applicable: 30% speed boost! :O\r\n- DATA instructions in all usable places\r\n- Using default variable values (0) without defining them, because new game starts with RUN\r\n- DO WHILE ... :LOOP behaves like an \"inner IF\" when you are short in lines, you just need to arrange that the DO condition won't met again.\r\nFormatting lines by: Plus4HTML 2.02 by Istvan Bozsik\r\nLine 0:\r\n-------\r\nFOR I=0 TO 4:READ J, K:COLOR I, J, K:NEXT\r\n - When using all color sources from 0 to 4, you can do it as well! XD\r\nDIM L, M, P, R, U, V, X, Y, ...\r\n - DIM simple variables to bring them to the start of variable space to quicker access!\r\nLine 2:\r\n-------\r\nF%(X, Y)=RND(0)*2.5\r\n - Spare INTs when putting real numbers into integer variables.\r\nLine 3:\r\n-------\r\nX=X(P):Y=Y(P)\r\n - Cloning actual array values to simple variables to shorten references.\r\nLOCATEX*20, Y*24:BOX P*2+1, +0, +0, +19, +23\r\n - Placing graphic cursor to certain coordinates then drawing a fixed-size box relative to it.\r\nJ=JOY(P+1)\r\n - Players are marked as 0/1, whereas joystick ports are 1/2.\r\nT%=J/128\r\n - Again, sparing an INT to put integer 0 or 1 into T%.\r\nJ=J AND 15\r\n - J will contain the joystick move direction only.\r\nLine 4:\r\n-------\r\nIF T%&gt;W ...\r\n - Trigger (T%=1) can't be higher than W=1 while running people detection a last time, so then you can't move your men!\r\nM=M/(1-(M*R&gt;400))\r\n - M is men count at a position. If M is bigger than 400, (M*R&gt;400) becomes -1, so M is halved (M=M/1 - -1). Negative M means player red's men. R is -1 when dealing with red, so - times - equals +.\r\nLine 5:\r\n-------\r\nX=X+X%(J):X=X-(X&lt;0)+(X&gt;7):Y=Y+Y%(J):Y=Y-(Y&lt;0)+(Y&gt;5)\r\n - After coordinates are updated to player's move, a simple trick is needed to keep values in their intervals. If X or Y becomes negative, (X&lt;0) will be -1, so you subtract -1 from -1, and it becomes 0. Same for the other ends: If Y is 6, adding (Y&gt;5) = -1 to it becomes 5.\r\nIF M THEN ...\r\n - Equal to \"IF M &lt;&gt; 0 THEN ...\"\r\nLine 6:\r\n-------\r\nIF M THEN S(SGN(M)+1)=1\r\n - Based on which player's (M)en are detected, either S(0) or S(2) are set to 1.\r\nM=M*(1+F%(U, V)/5)\r\n - Men are multiplied by 1 (mountains), 1.2 (clearings) or 1.4 (orchards).\r\nM%(U, V)=M+.5\r\n - When dealing with negative numbers, we must equalize the gains: INT(0.5) is 0, whereas INT(-0.5) is -1.\r\nI=X:J=Y:X=U:Y=V:GOSUB 8:X=I:Y=J\r\n - Variable swap for the subroutine and back!\r\nLine 7:\r\n-------\r\nX(P)=X:Y(P)=Y:P=1-P:R=-R\r\n - Save and swap player. Line 3 (loop start) then uses the saved ones.\r\nDO UNTIL S(0)*S(2):GOSUB 9:LOOP UNTIL W\r\n - Skips GOSUB 9 (end check / game over) if both players have people (detected in line 6). LOOP UNTIL behaves like an independent end-of-loop check: it allows continuation if W is not 0 (and we set it to 1 in line 9). Next time, GOSUB 9 will be final: game terminates with a RUN, so there will be no stack overflow!\r\nGOTO 3ROEPIPI\r\n - The inevitable self-badge. Luckily GOTO doesn't see it.\r\nLine 8:\r\n-------\r\nMID$(M$, INT(6-ABS(L/100)), 5)\r\n - Displays a 5-character \"window\" of M$, thus displaying the men count in 100s and a proper number of spaces to erase former display.\r\nLine 9:\r\n-------\r\nPOKE 239, 0\r\n - Erase keyboard buffer, so players must surely press one after this.", "metacritic": null, "released": "2021-02-28", "tba": false, "updated": "2021-03-01T05:44:25", "background_image": "https://media.rawg.io/media/screenshots/802/8020a3db055bf578d21ee85dbb62dc90.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 5, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Strategy"], "publishers": [], "esrb_rating": null}