{"id": 384003, "slug": "eae-game-engineering-ii-assignment-07", "name": "EAE Game Engineering II Assignment 07", "name_original": "EAE Game Engineering II Assignment 07", "description": "<p><strong>Write Up:</strong></p>\n<p>This was a really fun assignment. My favorite part\u00a0was opening Maya for the first time ever around other artists and tech artists and watching them laugh at me. But also, I have to say: it's not as bad as I've heard. Maya's pretty freaking powerful. It's also just... a lot.</p>\n<p>The first part of the assignment was going very smoothly (a bit\u00a0<em>too</em> smoothly) and getting the geometry exported to the correct file format was really easy.</p>\n<p>And then came the errors.\u00a0</p>\n<p>I ran into a very mysterious set of errors surrounding Lua's lua_close() function. The function runs through a bunch of GCObjects allocated on the heap and frees each one, but for\u00a0<em>certain</em> geometries (or like, once we hit a threshold on the number of vertices we could load?) that free() function would try to free some invalid memory and all hell would break loose. It was getting really weird, because there were certain geometries that were apparently totally fine, and others that Lua just hated.\u00a0And I couldn't really find the pattern that separated the ones that were okay and the ones that weren't.<br/>(I realize that there was supposed to be a \"hard limit\" on the number of vertices our engine can handle, but this is like less than 50 vertices. It's way too small to be related to that.)</p>\n<p>I could only get three Maya geometries working on a x86 Release build (oddly specific, I know) which is how I obtained that first screenshot.</p>\n<p>Another weird thing I noticed was that some of my geometries (well,\u00a0<em>most</em> of my geometries) would have duplicate vertices in the vertex list exported by my plugin. I spent a good amount of time tracking that down and could only conclude that the data being passed into the plugin had duplicates in them. (Unless, of course, I missed something.)</p>\n<p>This is a bit baffling, since the\u00a0entire purpose of the vertex-buffer/index-buffer split is to make your data smaller. The only situation I can imagine redundancy like this might be useful is for cache-coherency. I don't know if that's actually a thing in graphics though.</p>\n<ul><li>Show at least one screenshot of your game running:<ul><li>Ta da! We've got screenshots!</li></ul></li><li>Tell us what references you had to add to the MayaGeometryExporter project<ul><li>I actually added the Graphics project as a reference on impulse, but afterwards realized that was totally unnecessary. We don't need to add any references to this project.</li></ul></li><li>Tell us what other projects depend on MayaGeometryExporter<ul><li>Same as before, not a thing. This is really just a totally standalone piece of software.</li></ul></li><li>Tell us whether you exported the unused data (i.e. normals, tangents, bitangents) to your human-readable file or not. Explain why.<ul><li>I didn't bother with exporting all that unused data mostly because I wouldn't even know what to do with it if I had it. I'll let Future Srija handle adding that functionality once we know what that functionality really is. Then I can optimize the format I read the data in for that functionality.</li></ul></li><li>Show a screenshot of you debugging your plug-in<ul><li>I spent a ridiculous amount of time getting this to work, but to no avail. Visual Studio isn't loading symbols from Maya at all.\u00a0I'm definitely just doing something wrong here.</li></ul></li><li>Tell us what happens if you try to load a model with too many vertices.<ul><li>Unless this is actually the cause of my Mystery Error, I have no clue. My guess, though, is that this has something to do with the fact that our indices are 16-bit integers. So we can only have at most\u00a065536 vertices in our current set up, after which we run out of indices to index the vertices with.</li></ul></li></ul><p>EDIT: I fixed the Mystery Error. Turns out my index array was being allocated too small for the actual number of indices I had? What a silly error. Also though, I wish tracking this stuff down was much easier. Can't we have some sort of trace of every piece of code that wrote to a memory location or something?</p>", "metacritic": null, "released": "2019-10-17", "tba": false, "updated": "2019-10-18T05:10:15", "background_image": "https://media.rawg.io/media/screenshots/4c1/4c19a80d98420b6d0138900245fdcafc.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 33, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["TheDarkMiko"], "genres": [], "publishers": [], "esrb_rating": null}