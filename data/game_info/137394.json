{"id": 137394, "slug": "coterminalapps", "name": "CoTerminalApps", "name_original": "CoTerminalApps", "description": "<p># CoTerminalApps</p>\n<p>## What's new:</p><p>**ver 1.1.7 -- 09aug18**</p>\n<p>* Fixed csok to handle DOS-format resume file.<br/>* Corrected errors in autosolvers for rush &amp; dirtydozen;</p>**ver 1.1.5 -- 5dec17**\n<p>* added DLLs needed under Windows;<br/></p>\n<p>* now using the intrinsic file detection function:\u00a0 Exists();<br/>* elliminated need for directory links, simplifying Windows install.<br/>* huge performance improvements by not erasing screens between redraws.</p>\n<p>**ver 1.1.4 -- 26oct17**</p>\n<p>* added prebuilt executables for msWindows;<br/>* added working build scripts for msWindows;</p>\n<p>===============================================================<br/>## Introduction<br/>CoTerminalApps contains color-terminal [command-prompt] games that run on msWindows, OS-X and Gnu/Linux, and can also be rebuilt after installing the GNAT GPL Ada compiler.\u00a0 The only difference from TerminalApps is the use of the gnat library gnatcoll to enable colored characters, which makes many games/puzzles easier to understand.</p>\n<p>Includes Pacman and 9 puzzle games that use ascii characters only:\u00a0 crush(rush-hour), cslid(klotski), c7(flat7), caz(flatAZ), csok(sokoban), chio(hole-in-one), chio4(hole-in-one+4), c9(nine), cdd(dirty-dozen), cpac(Pacman)</p>\n<p>Usable keys for all:</p>\n<p>* arrow-keys for movement;<br/>* (q)=quit<br/>* (?)=help toggle</p>\n<p>===========================================================================</p>\n<p>### CoTerminal-pacman (cpac.adb)<br/>A primitive version of Pacman with 9 predefined levels.</p>\n<p>For this game, keyboard setup is critical to playability.\u00a0 One must have a very short key-delay and fast repeat setting.\u00a0 The arrow keys, or wasd-keys, or ijkl-keys control movement.\u00a0 The (x),(q) keys quit;\u00a0 (p) pauses game.\u00a0 Note that there is a parameter called \"tick\" inside cpac.adb that is currently set to 0.2 seconds.\u00a0 Advanced users might want to adjust this number, then recompile.\u00a0 It controls game speed (smaller implies faster).\u00a0 Suggestions are welcome.</p>\n<p>### CoTerminal-Rush (crush.adb)<br/>Colored, non-graphical Traffic-Rush puzzle game designed to run in a terminal window.</p>\n<p>Horizontal and vertical strings of letters represent cars and trucks in a crowded parking garage.\u00a0 The objective is to move them around lengthwise in order to be able to get red car \"a\" to the exit, which is either at the right or top of the garage.\u00a0 Note that the last digits in each puzzle name represents the minimum number of moves to win.</p>\n<p>A stand alone autosolver, bfsr, is provided, but now, an autosolver is embedded into this game.\u00a0 At any time you may press the (=)-key to begin stepping toward a solution.</p>\n<p>### CoTerminal-BlockSlide (cslid.adb), CoTerminal-DirtyDozen (cdd.adb)<br/>Colored, non-graphical Block Slider puzzle games designed to run in a terminal window.</p>\n<p>Colored blocks of letters can be moved horizontally or vertically wherever there is space.\u00a0 The objective is to move the red block to a specified goal position.</p>\n<p>Now, an autosolver is embedded into these games.\u00a0 At any time you may press the (=)-key to begin stepping toward a solution.</p>\n<p>### Gameplay: crush, cslid</p>\n<p>\"?\" toggles the help screen.\u00a0 The \"+\" and \"-\" keys (next, previous) are used to cycle through the large number of predefined puzzles.\u00a0 You can reset a puzzle by typing \"+\" then \"-\".</p>\n<p>First, one selects a vehicle or block by typing its identifier letter.\u00a0 Then use the arrow keys to move it.\u00a0 Note that manual selection is not always necessary, as there is an auto-select mechanism for those times when only one selection may move in a given direction. \u00a0</p>\n<p>===============================================================<br/>### CoTerminal Seven, A2Z (c7.adb, caz.adb)</p>\n<p>c7 is a flat representation of a 2x2x2 cube with one missing that allows sliding permutations.\u00a0 Here, the 8-1 elements are labelled 1..7.</p>\n<p>caz is a flat representation of a 3x3x3 cube with one missing that allows sliding permutations.\u00a0 The 27-1 elements are conveniently labelled with the english alphabet.</p>\n<p>Both the \"caz\" and \"c7\" puzzles work the same:</p>\n<p>* note the original order, and blank location;<br/>* mix;<br/>* then restore.</p>\n<p>A character in an adjacent row, column, or layer may be moved to the empty space using the keyboard.</p>\n<p>Pressing the (home) key on a typical keyboard produces the character 'H'.\u00a0 So assuming that (home)=&gt;'H', (end)=&gt;'F', (up)=&gt;'A', etc...<br/>the key mapping follows:</p>\n<p>* (1)..(5): mix;\u00a0 higher values are more difficult.</p>\n<p>* (up),(i),(w): north<br/>* (dn),(k),(s): south<br/>* (rt),(l),(d): east<br/>* (lt),(j),(a): west<br/>* (home),(\\),(u),(.),(-): layer-up<br/>* (end),(/),(o),(+): layer-dn</p>\n<p>* (?): help<br/>* (q): quit</p>\n<p>===============================================================</p>\n<p>### CoTerminal-sokoban (csok.adb)<br/>Move the pusher &gt;&lt; with the arrow keys in order to push all the boxes [] onto the goals :: in which case they look like {}.\u00a0 Various other functions available on the help screen.\u00a0 Includes a very large family of puzzle files.</p>\n<p>Two [external] sokoban solvers named puller &amp; ibox have been added.\u00a0 The command line is \"solver-name puzzle-file-name max-levels level-number\".\u00a0 Note that the max-levels are embedded into each puzzle file name.</p>\n<p>The output file (named similarly to the input file) contains directions from the set {u,d,l,r,U,D,L,R}, where upper case indicates a push.\u00a0 It is size-limited to 17 or fewer boxes, and 128 or fewer interior puzzle positions.\u00a0 Compile it with the command \"cmp.sh puller\" or \"cmp.sh ibox\".</p>\n<p>There are many cases these solvers cannot handle, but they are pretty good at sovling certain types of puzzles, particularly the more dense ones.</p>\n<p>But now a time-limited solver is embedded into csok.\u00a0 At any time you may press the (=)-key to see if the solver can help you.\u00a0 If so, you will be prompted to keep pressing that same key to proceed toward a solution.\u00a0 No prompt means either the present state is unsolvable, or merely that the embedded algorithm failed.</p>\n<p>### CoTerminal-HoleInOne (chio.adb, chio4.adb)<br/>Move the red 2x2 'a' block into the center of the four L-shaped corner pieces.</p>\n<p>### CoTerminal-Nine (c9.adb)<br/>Reverse the order of the numbered blocks.</p>\n<p>===========================================================================<br/>## Compiler Scripts<br/>There are three scripts, wbuildall.bat for msWindows, lbuildall.sh for Linux, and obuildall.sh for OS-X.\u00a0 They differ in where the executables are put.\u00a0 Now with so many different precompiled binaries for each OS, there would be too much clutter if they were all put into the same place.</p>\n<p>===============================================================<br/>## Build Instructions:<br/>Remember that prebuilt executables are already included.\u00a0 If you want to rebuild...</p>\n<p>Manually install GNAT GPL from libre.adacore.com/download/.\u00a0 If you don't like my key-mappings, edit the code as you like.</p>\n<p>Next, edit the scripts wcmp.bat or lcmp.sh or ocmp.sh so that the path to gnatmake is correct.\u00a0 These scripts streamline the build process by allowing auxilliary files to be neatly hidden in subdirectories.\u00a0 And make sure it is executable.</p>\n<p>Then type \"[wlo]buildall\" to create new command-line executables for your system.</p>\n<p>===============================================================<br/>## Running:<br/>Your terminal must be at least 50 chars wide by 20 lines (at least 57x35 for pacman).\u00a0 Simply type the executable name to begin.</p>\n<p>For example, on OSX, you would open a terminal, and cd to the install directory and type:</p>\n<p>./bin/osx/csok</p>\n<p>to run the Sokoban game.</p>\n<p>===============================================================<br/>## Legal Mumbo Jumbo:</p>\n<p>CoTerminalApps is covered by the GNU GPL v3 as indicated in the sources:</p>\n\n<p>\u00a0This program is free software: you can redistribute it and/or modify<br/>\u00a0it under the terms of the GNU General Public License as published by<br/>\u00a0the Free Software Foundation, either version 3 of the License, or<br/>\u00a0(at your option) any later version.</p>\n<p>\u00a0This program is distributed in the hope that it will be useful,<br/>\u00a0but WITHOUT ANY WARRANTY; without even the implied warranty of<br/>\u00a0MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\u00a0 See the<br/>\u00a0GNU General Public License for more details.</p>\n<p>\u00a0You may read the full text of the GNU General Public License<br/>\u00a0at <http: licenses=\"\" www.gnu.org=\"\"></http:>.</p>\n<p>----------------------------------------------<br/>## Other Credits and Thanks:<br/>Serhiy Grabarchuk and Peter Grabarchuk for their \"Hole in One\", \"Hole in One plus 4\", and \"Nine\" puzzles.</p>\n<p>Mike Billars [michael@gmail.com] for his C-version of Pacman for the console, after which this Ada version was modelled (gnu gpl).</p>\n<p>----------------------------------------------<br/>## Best Download Site for all my games:<br/>https://github.com/fastrgv?tab=repositories</p>\n<p>--------------------------------------------------<br/>## Earlier Revision History:</p>\n<p>**ver 1.1.3 -- 18oct17**</p>\n<p>* added keymaps for IJKL, WASD, when possible, eg. pacman;<br/>* minor correction to compilation scripts;<br/>* pacman (cpac):<br/>\u00a0\u00a0 \u00a0* now enqueue ONLY valid moves;<br/>\u00a0\u00a0 \u00a0* corrected, improved, simplified movement logic;<br/>* major update to OSX libraries to AdaCore 2017;<br/>* now uses static libraries to simplify build process and enhance robustness;</p>\n<p>**ver 1.1.2 -- 2may17**</p>\n<p>* added DirtyDozen [external] solver (bfsl.adb) that handles L-shaped blocks.<br/>* embedded autosolvers initiated by the (=)-key into:<br/>\u00a0\u00a0 \u00a0* cdd (DirtyDozen)<br/>\u00a0\u00a0 \u00a0* crush (TrafficRush)<br/>\u00a0\u00a0 \u00a0* cslid (BlockSliders)<br/>\u00a0\u00a0 \u00a0* csok (Sokoban)</p>\n<p>**ver 1.1.1 -- 7jan17**</p>\n<p>* Added missing libraries for the Gnu/Linux prebuilt binaries.\u00a0 They should now run even without installing the GNAT GPL Ada compiler, or the GNATColl libraries.<br/>* Still, for MSWin and other OS's, one must install GNAT and rebuild.</p>\n<p>**ver 1.1.0 -- 5jan17**</p>\n<p>* Now supply prebuild binaries for OS-X and Linux;<br/>* Improved build system.</p>\n<p>**ver 1.0.7 -- 20aug16**</p>\n<p>* added two sokoban solvers (puller.adb, ibox.adb).<br/>* added cslid solver (bfs.adb).<br/>* added crush solver (bfsr.adb)<br/>* improved pacman gameplay, collision-detection, randomization.</p>\n<p>**ver 1.0.6 -- 27jul16**</p>\n<p>* added CoTerminal-DirtyDozen block slider (cdd.adb)<br/>* added CoTerminal-Nine by Grabarchuk (c9.adb)<br/>* improvements in csok::Draw that include speedup option (s-key).<br/>* added restart option to cslid.adb, crush.adb<br/>* added CoTerminal-Pacman (cpac.adb)</p>\n<p>**ver 1.0.5 -- 16jul16**</p>\n<p>* added HoleInOne, HoleInOne+4 (chio.adb, chio4.adb)<br/>* small improvement to sokoban key response.</p>\n<p>**ver 1.0.4 -- 11jul16**</p>\n<p>* fixed logic error in CoTerminalRush (crush.adb).</p>\n<p>**ver 1.0.3 -- 5jul16**</p>\n<p>* added csok game.</p>\n<p>**ver 1.0.2 -- 4jul16**</p>\n<p>* Added caz, c7 puzzle games.</p>\n<p>**ver 1.0.1 -- 3jul16**</p>\n<p>* Added block slider game named \"cslid\".<br/>* Greater care taken to ignore key escape codes.</p>\n<p>**ver 1.0.0 -- 28jun16**</p>\n<p>* original release.</p>", "metacritic": null, "released": "2016-07-16", "tba": false, "updated": "2019-01-09T12:41:06", "background_image": "https://media.rawg.io/media/screenshots/39a/39a6a2651e31b8dfe54a7d450726615a.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 39, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC", "macOS", "Linux"], "developers": ["fastrgv"], "genres": ["Puzzle"], "publishers": [], "esrb_rating": null}