{"id": 140166, "slug": "soko_allegro", "name": "Soko_Allegro", "name_original": "Soko_Allegro", "description": "<p>Bonjour, \u00e9l\u00e8ve premium depuis septembre 2017.</p>\n<p>J'ai utilis\u00e9 le framework Allegro 5 cod\u00e9 en c+, oui j'ai bien \u00e9crit c+ car j'ai m\u00e9lang\u00e9 du c et c++ et mon code est pas terrible ;)</p>\n<p>Je ne connaissais pas du tout ce framework et pas trop le C/C++. J'ai pass\u00e9 environ 15 heures code, retouche graphique et sons compris.</p>\n<p>Les graphismes sont de Kenney.</p>\n<p>Au niveau du th\u00e8me j'avais quelques id\u00e9es pour changer le gameplay comme rajouter des tiles qui permettent qu'un certain nombre de passage, ajouter des caisses qui ne peuvent pas \u00eatre \u00e0 proximit\u00e9 etc mais par manque de temps je me suis limit\u00e9 \u00e0 faire juste un niveau basique mani\u00e8re de\u00a0bosser un autre framework/langage.</p>\n<p>En conclusion je n'ai pas vu tant de diff\u00e9rence avec d'autre langage/framework. Certes la flexibilit\u00e9 du Lua est tr\u00e8s agr\u00e9able compar\u00e9 aux prises de t\u00eate avec les tableaux et m\u00e9moire du C/C++ mais tout est question d'habitude.\u00a0 J'aurai certainement fait un travail plus abouti si j'avais utilis\u00e9 des framework/moteur dont j'ai plus l'habitude. C'est en prendre en compte lors de la r\u00e9alisation d'un projet pour respecter les timelines.</p>", "metacritic": null, "released": "2018-01-25", "tba": false, "updated": "2019-01-09T12:41:06", "background_image": "https://media.rawg.io/media/screenshots/dc2/dc20c805c7872f0e9a17cef6fa44140a.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 8, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["kwandjeen"], "genres": ["Puzzle"], "publishers": [], "esrb_rating": null}