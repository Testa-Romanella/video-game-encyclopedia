{"id": 749390, "slug": "antsnake", "name": "AntSnake!", "name_original": "AntSnake!", "description": "<p>Scientists have recently discovered a strange new species of ant. On their own, they seem to wander aimlessly, but together they form a new macro-organism: the <strong>ANTSNAKE</strong>!</p>\n<p>You are a researcher observing this fascinating new behavior in a lab environment. Try to see how long the AntSnake can get without crashing into any walls or into itself. Whenever the AntSnake comes into contact with another ant, that ant will join and the AntSnake will get longer.</p>\r\nControls\r\n\r\nBUTTONKEYBOARDACTION\u2b05 \u27a1 \u2b06 \u2b07<br/>\u2b05 \u27a1 \u2b06 \u2b07Change AntSnake's directionSTARTEnterPlay/Pause GameSELECTBackslash (\\)Return to Start screen while paused\r\nAbout the Procedural Generation\r\n<p>The game uses procedually generated 2D terrain for the player to navigate around and avoid crashing into. This terrain is generated using a cellular automata\u00a0algorithm designed to generate cave-like spaces.</p>\n<p>The algorithm begins by generating a random value of 1 or 0 (filled or empty) for each cell, with each cell having a 45% chance of being filled.</p>\n<p>Once the inital cell values are generated, a cellular automata algorithm with the following rules is run:</p>\n<ul><li>A cell in the next generation is <strong>filled</strong>\u00a0<em>if and only if</em> a 3x3 grid centered around the cell contains <strong>5 or more</strong> filled cells in the current generation.</li><li>Any cell position outside the grid is treated as <strong>filled</strong>.</li></ul>\n<p>This algorithm is run on the generated cells for 6 generations, resulting in cave-system-like terrain.</p>\n<p>A hole at the center is also cleared before the game starts to ensure that the player's spawnpoint is clear.\u00a0</p>\n<p>Tweaking this algorithm by changing the inital probability of a cell being filled can result in narrower or wider passageways, but anything outside [40%,60%] tends to result in either completely filled or completely empty space.</p>\n<p>This algorithm is an implementation of a similar algorithm I wrote to generate terrain for another game\u00a0a few years ago, but that version then performed a Marching Squares algorithm on the generated cell grid.</p>", "metacritic": null, "released": "2022-03-02", "tba": false, "updated": "2022-03-04T07:51:08", "background_image": "https://media.rawg.io/media/screenshots/5aa/5aa1edab92a84cee0df94bde4cf61953.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 7, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["MGPAlpha"], "genres": ["Simulation"], "publishers": [], "esrb_rating": null}