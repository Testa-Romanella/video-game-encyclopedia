{"id": 950876, "slug": "snake-battle-back2the8bit", "name": "Snake battle (Back2the8bit)", "name_original": "Snake battle (Back2the8bit)", "description": "<p>For the Retroprogrammers Inside's \"Snake game jam\" I wrote this naval battle clone, in basic, with the aim to share some knowledge for beginners.</p>\n<p>Basic V2 is well known as a not fast interpreter, so it's not suitable for real games, but if you don't need scrolling, 8 or more sprites, sid music and wathever else made great the C64 back in that days, you can make something nice with raw basic.\u00a0This is one of these cases.</p>\n<p>Launch the prg into your favourite emulator such as Vice or whatever.</p>\n<p>----stop here if you don't want to read boring stuff about programming and you want to play----</p>\n<p>Some useful info for who will dare to read the code:</p>\n<p>1) I use the high memory $c000 to put the player's and AI's game map, including pieces and moves results.</p>\n<p>2) I use the low nibble of map's byte to store info about that cell:</p>\r\n\r\n0001=full,0010=empty,0100=void attempt,1000=successfull attempt\r\n<p>Possible values are - taking player's map as example and according to above nibbles:</p>\n<p>1 -&gt; cell \"full\", i.e. occupied by my piece, not yet poked by the enemy</p>\n<p>2 -&gt; cell of my map empty, not yet poked by the enemy</p>\n<p>9 -&gt; cell occupied by my piece and hit by enemy</p>\n<p>6 -&gt; cell empty and attempted by enemy</p>\n<p>other values are \"don't care conditions\"</p>", "metacritic": null, "released": "2023-04-01", "tba": false, "updated": "2023-04-03T17:30:48", "background_image": "https://media.rawg.io/media/screenshots/020/020aabde32e0e87a2aa175222fa112a3.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 14, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["Back2the8bit"], "genres": ["Strategy"], "publishers": [], "esrb_rating": null}