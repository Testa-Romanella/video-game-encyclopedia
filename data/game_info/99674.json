{"id": 99674, "slug": "moore-no", "name": "Moore, No!", "name_original": "Moore, No!", "description": "<p>Made for Ludum Dare 37.</p><p>You're in an integrated circuit and your task is to wire its internal logic using logic gates.</p><p>You have three kinds: AND, OR, NOT. Gates switch at 0.1 Volts. Gates also have a small switching delay.</p><p>WIRES are used to connect gates and IO. There is a voltage drop of 10% every tile. Gates boost the signal back to 1 V.</p><p>The lights on the walls and on the GUI represent inputs and outputs.</p><p>CYAN lights are inputs (blinking according to input signal)</p><p>RED lights are outputs (blinking according to desired output signal)</p><p>GREEN lights are correct output signals</p><p>ORANGE lights are not in use</p><p>There are 3 kinds of input signals:</p><p>SQUARE WAVE</p><p>SINE WAVE</p><p>SAWTOOTH WAVE</p><p>The desired outputs are input signals that have been modified using the 3 kinds of logic gates (AND, OR, NOT).</p><p>Your job is to figure out what process those signals went through.</p><p>Your signal will be compared to the desired output signal, and if it's close enough, the RED light will turn GREEN</p><p>When all RED lights are GREEN, you win.</p><p>CONTROLS:</p><p>WASD ----------- Move</p><p>Mouse/Arrows --- Rotate camera</p><p>LMB ------------ Place component</p><p>RMB ------------ Pick up component</p><p>Scroll / 1-4 ---- Change component</p><p>Space ---------- Jump</p><p>Shift ---------- Sprint</p><p>R -------------- Restart</p><p>M -------------- Mute music</p><p>F11 ------------ Toggle fullscreen</p><p>F2 ------------- Show console</p><p>Music by Kevin MacLeod</p><p>Written in C++ using OpenGL, GLFW and SDL_mixer.</p><p>The game uses Corium 1.3, my own engine.</p><p>NOTES:</p><p>- This game is quite difficult. The levels produced by PCG have varying difficulty.</p><p>- The signals, inputs and outputs are generated procedurally, so some levels may be difficult or impossible to solve.</p><p> This is why the signal comparator is very lenient, so you shouldn't get stuck. Don't be afraid to cheat!</p><p>- Half of the game is about experimentation (try connecting a NOT gate to itself)</p><p>TIPS:</p><p>- Use NOT gates to boost the signal</p><p>- NOT gates can also be used to delay a signal</p><p>- If a signal is very rapid, make sure that the voltage is low enough or a gate won't have time to switch</p><p>- Don't connect gates to other gates. The behaviour is unpredictable. Use a wire in between.</p>", "metacritic": null, "released": "2016-12-12", "tba": false, "updated": "2019-08-28T23:25:13", "background_image": "https://media.rawg.io/media/screenshots/68f/68f2a8e7763a10d3885381c1d356a03c.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 110, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["Ronin748"], "genres": ["Puzzle"], "publishers": [], "esrb_rating": null}