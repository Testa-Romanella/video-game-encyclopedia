{"id": 492999, "slug": "large-sprites-for-gb-studio-20", "name": "Large Sprites for GB Studio 2.0", "name_original": "Large Sprites for GB Studio 2.0", "description": "<p>I shoehorned in a way to have larger sprites in GB Studio games. With the immense power granted by eject engine, I hacked together a function that checks a certain set of variables to determine if a sprite should be parented to another sprite, and if so, forces its position to be adjacent to it at all times. The parent sprite is free to move as a normal sprite, and all of its children will happily follow.</p>\n<p>It's kludgy and hacky, probably really inefficient, and presumably prone to failure. But it's also really cool, so check it out!<br/></p>\n<p>If you wish to use it in your own game, and let me make it abundantly clear you are doing so at your own risk, these are the steps you should take:</p>\n<ol><li>Eject the\u00a0engine in your project, if you haven't already.</li><li>Copy <strong>a</strong><strong>ssets/engine/src/core/ParentedActors.c</strong> to the equivalent folder in your project directory</li><li>\u00a0Do the same with\u00a0<strong>assets/engine/include/</strong><strong>ParentedActors.h</strong></li><li>Open\u00a0<strong>a</strong><strong>ssets/engine/src/core/Core_Main.c</strong> in a text editor</li><li>Insert the line\u00a0<em><strong>#include \"ParentedActors.h\"</strong></em> immediately after the line that says\u00a0<strong><em>#include \"main.h\"</em></strong></li><li>Insert the line\u00a0<strong><em>PositionParentedActors(); </em></strong>before the first line\u00a0that says\u00a0<strong><em>UpdateActors();</em></strong></li><li>Save the file</li></ol>\n<p>Now, when you run your game, it will take a little while to build the first time, but if the emulator opens, then you did everything right.</p>\n<p>To actually make use of it, you will need to make an On Init script with two events. It will look something like this:</p>\n<p><strong>Variable: Set To Value</strong> has two fields, and both are important:</p>\n<ul><li>The variable field on top tells the game which actor should be the child. The variable ID should be the actor's number + 90. In this instance, I want Actor 3 to be the child, so I set it to $93$</li><li>The value field below tells the game which actor should be the parent. Here, it is set to 2, standing for actor 2. If you want the player to be the parent, set it to 10.</li></ul>\n<p><strong>Variable: Add Flags</strong> has 8 checkboxes. Flags 5-8 tell the game where the child should be positioned relative to the parent. Flags 1-4 should be left unchecked.</p>\n<ul><li>Flag 5 sets the child to be <strong>left\u00a0</strong>of the parent</li><li>Flag 6 sets the child to be\u00a0<strong>up\u00a0</strong>from the parent</li><li>Flag 7 sets the child to be\u00a0<strong>down\u00a0</strong>from the parent</li><li>Flag 8 sets the child to be\u00a0<strong>right\u00a0</strong>of the parent</li></ul>\n<p>They are in the same order as the\u00a0<strong>Direction</strong> buttons for easy reference.\u00a0</p>\n<p>If you did everything right, when you run the game, everything should just magically work. The child actor will follow the parent actor wherever it goes.</p>\n<p><strong>Note:\u00a0</strong>I realized as I was typing this up that I didn't take into account the fact that GBS2.0 supports more than 9 actors. As a result, future updates to this patch will be incompatible with the current variable configuration.<br/></p>", "metacritic": null, "released": "2020-09-08", "tba": false, "updated": "2020-09-11T14:49:24", "background_image": "https://media.rawg.io/media/screenshots/d96/d960d1a352d8d8b4f575845ce2a6769b.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 9, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["um3k"], "genres": [], "publishers": [], "esrb_rating": null}