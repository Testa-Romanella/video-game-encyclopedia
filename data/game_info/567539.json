{"id": 567539, "slug": "archery-by-retro-programmers-inside", "name": "Archery by Retro Programmers Inside", "name_original": "Archery by Retro Programmers Inside", "description": "<p>Archery for TenLiner Basic contest</p>\n<p>Computer: Commodore64<br/>Basic: V.2 - PUR120<br/>Emulator: Vice</p>\n<p>https://rpinside.itch.io/archery-with-10-line-of-basic-pur-120</p>\n<p>This is a simple game, the goal of the game is hit the center of a target with an arrow.</p>\n<p>The target moves at a random velocity and the archer (the player) is at fixed position. The player can setting up the angle and the force to hurl the arrow. the score depends on how close the arrow is to the center of the target.</p>\n<p>Joystick on Port 2<br/>Left-Right to setup the used force<br/>Up-Down to setup the angle</p>\n<p>List of used variables<br/>!- a: joy-up/dw-value -1/1<br/>!- b: joy-left/right-value -1/1<br/>!- c: angle<br/>!- d: Arrow velocity\u00a0<br/>!- e: paralell to ground velocity (d*cos(k))<br/>!- f: fire\u00a0 (yes&lt;&gt;0)<br/>!- g: 192<br/>!- h: target x starting point<br/>!- i: generic counter<br/>!- j: joy2 value<br/>!- k: used locally in various places<br/>!- kk: angle in radians<br/>!- l: 56320<br/>!- m: perpendicular velocity of the arrow (d*sin(k))<br/>!- n: number of shoots<br/>!- o: 1052<br/>!- p: 53249<br/>!- q: flag for target touched<br/>!- r: 1092<br/>!- rr:\u00a0 distance from target center x component<br/>!- s: game status 0 waiting to start, 1 target is moving, 2 arrow is running, 3 target\u00a0 hitted or arrow on the edge of screen -&gt; Status will became = 0<br/>!- t: time<br/>!- u: distance from target center y component<br/>!- v: target velocity<br/>!- w: arrow elevation<br/>!- x: x target<br/>!- y: y target<br/>!- z: x arrow<br/>!- pu: score<br/>!- zy=12288<br/>!- zx=12480<br/>!- zv=2040<br/>!- zk=128</p>\n<p>Reading some constants and initializing video<br/>0reS:rEp,o,r,g,zv,zy,zx,zk,s,y,x,z,t,l,s$,v$,c$,s(0),s(1),s(2),s(3):v=fR(0):goS6:v=3+rN(.)*5:pO53280,0:pO53281,0</p>\n<p>Checking for Joystick on port 2 and status, if status = 2 (arrow is running) then wait for status change else if statsu = 3 reinitialize all, else sets values of a, b and f (x,y offset and fire)<br/>1?s$pu;v$v;c$:t=t-(s=2):goS3:ons(s)gO1,0:j=pE(l):on-(j=127)gO1:a=sG(jaN2)-(jaN1):b=sG(jaN4)-sG(jaN8):f=jaN16:iff=0tHgoS9</p>\n<p>Update cursors for angle and force (Gosub 9)<br/>If joystick is touched, the target starts moving, if fire is'n clicked go to 1 (onf/16gO1) else calculate the velocity components and come back to 1<br/>2s=1:goS8:onf/16gO1:k=c*({pi}/180):e=d*cos(k):m=d*sI(k):s=2:gO1:dA53248,1052,1092,192,2040,12288,12480,128,0,230,255,90,0</p>\n<p>Subroutine that update Sprites positions, if arrow is on the edge of screen or target is hitted update score (go4).<br/>3w=t*m-t*t:x=x+v*(s&gt;0aNx&gt;24):pOp,x:y=y+e*(s=2aNy&gt;59):pOp+3,y:on-((x&lt;25ory&lt;60orw&lt;0aNt&gt;0)orx&lt;=zaNz&lt;x+49aNy&lt;72)gO4:reT</p>\n<p>Update score variable if target is hitted, anyway change status variable to 3 for new game.<br/>4q=-(w&gt;0aNw&lt;43aNx&lt;=zaNz<x+49):po53252,q*((z-x)+26):po53253,(140-w)*q:u=21-w:rr=24-(z-x):rr=sq(u*u*q+rr*rr*q)<br></x+49):po53252,q*((z-x)+26):po53253,(140-w)*q:u=21-w:rr=24-(z-x):rr=sq(u*u*q+rr*rr*q)<br>5pu=pu+int(31-rr)*q:s=3:n=n+1:reT:dA56320,\"{home}s\",\" v\",\"{home}{down*15}facebook: retro programmers inside\"</p>\n<p>Initialization of screen and sprites<br/>6fOi=0to3:pOzv+i,g+i:nE:on-(n&gt;0)gO8:?\"{147}\":fOi=0tog:pOzy+i,0:nE:fOi=0to63:pOzy-i*(i&lt;12),x:pO12352-i*(i&lt;12)*3,g:pOzx+i,x:nE<br/>7fOi=0to9:rEc,d:pOp+c+1,d:nE:pO1104,6:pO1064,1:pO12416,zk:c=25:d=c:dA,,1,2,,67,5,26,6,99,20,15,22,12,28,13,38,7,39,1,40</p>\n<p>Update then cursors for Angle and Force<br/>8pOp,x:pOp+2,z:pOp+3,y:c=c-a*(c+a&gt;14aNc+a&lt;35):d=d-b*(d+b&gt;14aNd+b&lt;35):fOi=0to2:k=32-49*(i=1):pOo+c-i,k:pOr+d-i,k:nE:reT</p>\n<p>Emits the arrow sound when shooted.<br/>9k=54272:fOi=ktok+24:pOi,0:nE:pOk+12,37:pOk+13,15:pOk+24,15:pOk+8,255:pOk+7,255:pOk+11,129:reT:dA,41,7</p>\n<p>Complete list:</p>\r\n\r\n0reS:rEp,o,r,g,zv,zy,zx,zk,s,y,x,z,t,l,s$,v$,c$,s(0),s(1),s(2),s(3):v=fR(0):goS6:v=3+rN(.)*5:pO53280,0:pO53281,0\r\n1?s$pu;v$v;c$:t=t-(s=2):goS3:ons(s)gO1,0:j=pE(l):on-(j=127)gO1:a=sG(jaN2)-(jaN1):b=sG(jaN4)-sG(jaN8):f=jaN16:iff=0tHgoS9\r\n2s=1:goS8:onf/16gO1:k=c*({pi}/180):e=d*cos(k):m=d*sI(k):s=2:gO1:dA53248,1052,1092,192,2040,12288,12480,128,0,230,255,90,0\r\n3w=t*m-t*t:x=x+v*(s&gt;0aNx&gt;24):pOp,x:y=y+e*(s=2aNy&gt;59):pOp+3,y:on-((x&lt;25ory&lt;60orw&lt;0aNt&gt;0)orx&lt;=zaNz&lt;x+49any&lt;72)go4:ret 4q=\"-(w\"&gt;0aNw&lt;43aNx&lt;=zaNz&lt;x+49):po53252,q*((z-x)+26):po53253,(140-w)*q:u=21-w:rr=24-(z-x):rr=sq(u*u*q+rr*rr*q) 5pu=\"pu+int(31-rr)*q:s=3:n=n+1:reT:dA56320,\"{home}s\",\"\" v\",\"{home}{down*15}facebook:=\"\" retro=\"\" programmers=\"\" inside\"=\"\" 6foi=\"0to3:pOzv+i,g+i:nE:on-(n\"&gt;0)gO8:?\"{147}\":fOi=0tog:pOzy+i,0:nE:fOi=0to63:pOzy-i*(i&lt;12),x:pO12352-i*(i&lt;12)*3,g:pOzx+i,x:nE\r\n7fOi=0to9:rEc,d:pOp+c+1,d:nE:pO1104,6:pO1064,1:pO12416,zk:c=25:d=c:dA,,1,2,,67,5,26,6,99,20,15,22,12,28,13,38,7,39,1,40\r\n8pOp,x:pOp+2,z:pOp+3,y:c=c-a*(c+a&gt;14aNc+a&lt;35):d=d-b*(d+b&gt;14aNd+b&lt;35):fOi=0to2:k=32-49*(i=1):pOo+c-i,k:pOr+d-i,k:nE:reT\r\n9k=54272:fOi=ktok+24:pOi,0:nE:pOk+12,37:pOk+13,15:pOk+24,15:pOk+8,255:pOk+7,255:pOk+11,129:reT:dA,41,7&lt;/x+49):po53252,q*((z-x)+26):po53253,(140-w)*q:u=21-w:rr=24-(z-x):rr=sq(u*u*q+rr*rr*q)&gt;&lt;/x+49any&lt;72)go4:ret&gt;", "metacritic": null, "released": "2021-03-02", "tba": false, "updated": "2021-03-05T09:58:01", "background_image": "https://media.rawg.io/media/screenshots/72b/72bb36d51127ab928d8129646103a55e.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 23, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Sports"], "publishers": [], "esrb_rating": null}