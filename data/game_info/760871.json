{"id": 760871, "slug": "sigils-by-kim-slawson", "name": "Sigils by Kim Slawson", "name_original": "Sigils by Kim Slawson", "description": "<p># Sigils</p>\n<p>By Kim Slawson, February \u2013 March 2022</p>\n<p>*NOMAM* 2022 10-Line BASIC competition entry (EXTREME-256 category)</p>\n<p>Requires an Atari 8-bit machine or emulator running TurboBASIC XL (800XL minimum)</p>\n<p>The provided disk image contains TurboBASIC XL and automatically runs the game.</p>\n\n<p>## The pitch</p>\n<p>It's connect the dots, but more interesting. You form symbols (sigils) as you play. Also, there are gratuitous crashing noises.</p>\n\n<p>## To play\u00a0\ud83d\udd79\ufe0f</p>\n<p>Use the joystick to move from dot to dot, drawing a line as you go. The pitch of the sound is (inversely) proportional to the length of the line (like stretching a rubber band). If you get stuck or just want to retry a level, push fire. To get back to the main menu, hit reset (this also applies to the level editor).</p>\n\n<p>## Wait, did you say level editor\u00a0\u2049\ufe0f</p>\n<p>Yes, Virginia, there is a level editor. When you master all of the included levels, have fun making your own. Draw dots until you're ready to play, then hold down fire for more than a second. The screen will flash, indicating you're now playing your homemade level. If you get stuck or just want to retry your creation, push fire.</p>\n\n<p>## Colophon\u00a0\u00a0\ud83e\uddf0</p>\n<p>Sigils was developed on a Macbook Pro and tested using Atari800MacX and on my childhood Atari 130XE. Shoutouts to the following AtariAge users: @dmsc for basicParser, @skr for MacTurban, @luckybuck for Sublime Text integration and @mozzwald and @tschak909 for FujiNet /|\\\u00a0</p>\n\n<p>## Source code\u00a0\u00a0\ud83d\udcbb</p>\n<p>If you're curious, check out the commented source code below. You may also wish to look at the obfuscated source code (if you dare). Use the source, Luke!</p>\n\n\n<p>\u00a0Readable listing with comments</p>\n\n<p>```basic</p>\r\n\r\nREM Sigils\r\nREM written for 2022 NOMAM Ten-line BASIC competition\r\nREM built with Turban (TURboBAsic Nifty)\r\nREM obsfuscated using tbxlparser\r\nREM requires Turbo-BASIC XL\r\nREM by Kim Slawson\r\nREM 2022-02-22\r\nrem OUTLINE:\r\nrem set up\r\nrem\u00a0 \u00a0encode strings\r\nrem title\r\nrem\u00a0 \u00a0get level number\r\nrem loop\r\nrem\u00a0 \u00a0clear\r\nrem\u00a0 \u00a0play level\r\nrem\u00a0 \u00a0 \u00a0if level editor\r\nrem\u00a0 \u00a0 \u00a0 \u00a0build level, start level on hold\r\nrem\u00a0 \u00a0 \u00a0 \u00a0store level in array\r\nrem\u00a0 \u00a0 \u00a0elseif normal level\r\nrem\u00a0 \u00a0 \u00a0 \u00a0draw level (recall from array if user-created)\r\nrem\u00a0 \u00a0 \u00a0 \u00a0play level, retry level on fire\r\nrem\u00a0 \u00a0 \u00a0 \u00a0increment level when done\r\nrem rerun for setup &amp; menu again\r\npoke 580,1:rem ensure that RESET does cold start rather than warm start\r\npoke 82,0:rem no margin\r\nrem dimension the string for level storage\r\nrem dimension the 2D array to remember user-created levels\r\nrem dimension the arrays to hold level widths and x,y starting positions\r\ndim level$(255),l(16,8),wid(10),x(10),y(10)\r\nrem encode levels into string, prepended by substring lengths by level\r\nrem size, startx, starty, then bit-encoded columns as chars (8 bits high by size bits wide)\u00a0\r\nrem lvl: 1\u00a0 \u00a0 \u00a0 2\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 3\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a04\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a05\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 6\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 7\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a08\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a09\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 10\r\nlevel$=[\"&lt;8&lt;&lt;&lt;&lt;&lt;\\1C\\14\\1C\\08\\1C\\14\\1C\\38\\1C\\3C\\38\\30\\38\\2C\\7E\\7E\\20\\FF\\FF\\FF\\FE\\FE\\FE\\FC\\FC\\FC\\1C\\1C\\7F\\77\\7F\\1C\\1C\\1C\\36\\3E\\1C\\1C\\04\\1C\\1C\\04\\1C\\7E\\5A\\7E\\7E\\5A\\7E\\0F\\3B\\2E\\3B\\0F\\0C\\0C\\0E\\1B\\7F\\CE\\80\\FC\\FE\\FE\\7E\\78\\40\\CE\\82\\FE\"]\r\nGr.3:rem mode 3 with text window for titles and instructions\r\npoke 710,0:rem black text window\r\nrem draw title\r\ncolor 1\r\nfor y=0 to 2\r\n\u00a0 for x=0 to 9\r\n\u00a0 \u00a0 plot x*2+11,y*2\r\n\u00a0 next x\r\nnext y\r\ncolor 0:plot 25,0:plot 25,2\r\ncolor 2\r\nrepeat\r\n\u00a0 rem get title coordinates out of DATA\r\n\u00a0 read x,y\r\n\u00a0 rem negative x coordinate means plot, positive means drawto (plus x offset to center)\r\n\u00a0 if x&lt;0:plot abs(x)+11,y:else:drawto x+11,y:endif\r\n\u00a0 pause 5:rem slow down title sequence\r\nuntil (x=16 and y=4)\r\nrem pick a level, or edit your own!\u00a0\r\nrem rerun on bad input\r\ntrap #run\r\n? [\"\u00a0 ~{lbar}1~{lbar}Easy ~{lbar}2~{lbar}Glasses ~{lbar}3~{lbar}House ~{lbar}4~{lbar}Four\"]\r\n? [\"\u00a0 ~{lbar}5~{lbar}City ~{lbar}6~{lbar}Cross ~{lbar}7~{lbar}Key ~{lbar}8~{lbar}Holes\"]\r\n? [\"\u00a0 ~{lbar}9~{lbar}Skull ~{lbar}10~{lbar}Yorgle ~{lbar}0~{lbar}Level editor\"]\r\ninput \"Level\";level:cls\r\nrem read level starting positions into x and y arrays\r\nfor i=1 to 10:read w,x,y:wid(i)=w:x(i)=x:y(i)=y:next i\r\nrem main game loop\r\ndo\r\nrem clear the screen\r\nGr.3:rem mode 3 with text window for titles and instructions\r\npoke 710,0:rem black text window\r\npoke 752,1:rem get rid of cursor\r\nrem did the user pick the level editor?\r\nif level=0 and remaining=0\r\n\u00a0 \u00a0 ? ,\"Design your own level!\"\r\n\u00a0 \u00a0 ? [\" ~{lbar}FIRE~{lbar}to plot/erase, hold~{lbar}FIRE~{lbar}to play\"]\r\nrem set starting point\r\npause 30\r\nx=4:y=4:btime=time:mtime=time:oc=0:rem initialize cursor and times\r\nwhile 2-done-b\r\nrem blink the cursor\r\n\u00a0 if time-btime&gt;10:btime=time:b=1-b:color b*2-oc*b:plot x,y:endif\r\nREM get joystick position\r\nS=STICK(0)\r\n\u00a0 \u00a0 dy=((S=13)-(S=14))*2\r\n\u00a0 \u00a0 dx=((S=7)-(S=11))*2\r\n\u00a0 \u00a0 rem look ahead to next spot\r\n\u00a0 \u00a0 ny=y+dy:nx=x+dx\r\n\u00a0 \u00a0 ny=y+dy*((ny&gt;3) and (ny&lt;19)):nx=x+dx*((nx&gt;3) and (nx&lt;35))\r\n\u00a0 \u00a0 rem synchronize the movement in lockstep with timer\r\n\u00a0 \u00a0 if time-mtime&gt;20 and (dx or dy)\r\n\u00a0 \u00a0 rem redraw original spot and draw next spot\r\n\u00a0 \u00a0 \u00a0 \u00a0 color oc:plot x,y\r\n\u00a0 \u00a0 \u00a0 \u00a0 x=nx:y=ny\r\n\u00a0 \u00a0 \u00a0 \u00a0 locate x,y,oc\r\n\u00a0 \u00a0 \u00a0 \u00a0 color 2:plot x,y\r\n\u00a0 \u00a0 \u00a0 \u00a0 mtime=time\r\n\u00a0 \u00a0 endif\r\n\u00a0 \u00a0 if strig(0)=0\r\n\u00a0 \u00a0 \u00a0 mtime=time:oc=1-oc:remaining=remaining+(oc*2-1):rem reset the move timer, increment the number of dots\r\n\u00a0 \u00a0 \u00a0 repeat:until strig(0)\r\n\u00a0 \u00a0 \u00a0 if time-mtime&gt;60:rem if the user holds fire for more than a second, we're done\r\n\u00a0 \u00a0 \u00a0 \u00a0 done=1\r\n\u00a0 \u00a0 \u00a0 \u00a0 poke 712,180:poke 710,180:pause 10:poke 712,0:poke 710,0:rem flash the screen to confirm user is done\r\n\u00a0 \u00a0 \u00a0 endif\r\n\u00a0 \u00a0 endif\r\nwend\r\nrem remember position\r\nx(0)=x:y(0)=y\r\nrem read level into array in case of user reset\r\nfor x=0 to 15\r\nfor y=0 to 7\r\nlocate 4+x*2,4+y*2,oc\r\nl(x,y)=oc&gt;0\r\nnext y\r\nnext x\r\nendif\r\nrem draw the level\r\nremaining=0:o=0\r\nif level=0\r\nrem recall user-created level from 2D array\r\nfor x=0 to 15\r\nfor y=0 to 7\r\noc=l(x,y)\r\ncolor oc\r\nplot 4+x*2,4+y*2\r\nremaining=remaining+oc:rem increment the number of dots\r\nnext y\r\nnext x\r\nrem recall position\r\nx=x(0):y=y(0)\r\n\u00a0 cls:? [\" ~{lbar}FIRE~{lbar}to retry level, ~{lbar}RESET~{lbar}for menu\"]\r\nelse\r\nrem offset into level string for current level = size of level\r\nfor i=0 to level-1\r\n\u00a0 o=o+wid(i)\r\nnext i\r\nrem decode string\r\ncolor 1\r\nwid=wid(level)\r\nfor y=1 to wid\r\n\u00a0 oc=asc(level$(o+y))\r\n\u00a0 bit=0.5\r\nfor x=0 to 7\r\nbit=bit*2\r\nif (oc &amp; bit = bit):plot y*2+18-wid,x*2+3:remaining=remaining+1:endif\r\n\u00a0 next x\u00a0\r\nnext y\r\nrem set starting point\r\nx=x(level)*2+20-wid:y=y(level)*2+3\r\nendif\r\nrem play the level\r\nbtime=time:mtime=time:original=remaining:rem initialize cursor and times\r\npause 30:rem pause for dramatic effect\r\nwhile remaining&gt;1\r\n\u00a0 if time-btime&gt;60:btime=time:b=1-b:color b*2:plot x,y:endif:rem blink the cursor\r\nREM get joystick position\r\nS=STICK(0)\r\n\u00a0 dy=((S=13)-(S=14))\r\n\u00a0 dx=((S=7)-(S=11))\r\n\u00a0 rem look ahead to next spot\r\n\u00a0 \u00a0 ny=y+dy:nx=x+dx\r\n\u00a0 \u00a0 n2y=y+dy*2:n2x=x+dx*2\r\n\u00a0 \u00a0 locate nx,ny,c:locate n2x,n2y,c2\r\n\u00a0 \u00a0 rem synchronize the movement in lockstep with timer\r\n\u00a0 \u00a0 if time-mtime&gt;20\r\n\u00a0 \u00a0 \u00a0 if c2=1 and c=0:rem can the player move in this direction?\r\n\u00a0 \u00a0 \u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 Poke 77,0:rem disable attract mode\r\n\u00a0 \u00a0 \u00a0 \u00a0 color 2:plot x,y:plot nx,ny:plot n2x,n2y:rem move to next spot\r\n\u00a0 \u00a0 \u00a0 \u00a0 x=n2x:y=n2y:remaining=remaining-1:mtime=time:rem update position, decrement spots, reset the move timer\r\n\u00a0 \u00a0 \u00a0 \u00a0 rem make some noise! spread sound pitch over 0...255\r\n\u00a0 \u00a0 \u00a0 \u00a0 pitch=255-(255/original)*remaining\r\n\u00a0 \u00a0 \u00a0 \u00a0 sound 0,pitch,10,1\r\n\u00a0 \u00a0 \u00a0 else:rem spoiler: the player cannot move in this direction\r\n\u00a0 rem holy crashing noises batman\r\n\u00a0 \u00a0 \u00a0 if dx or dy:poke 712,6:poke 710,6:pause 5:poke 712,0:poke 710,0:mtime=time:sound 0,pitch,2,8:pause 10:endif\r\n\u00a0 \u00a0 \u00a0 sound\u00a0\r\n\u00a0 \u00a0 endif\r\n\u00a0 endif\r\n\u00a0 if strig(0)=0:exit:endif:rem pop out of the loop if the player presses the fire button (retry the level)\r\nwend\r\nsound:rem turn off the sound, just in case\r\nrem logic for end of level. restart if all done.\r\nif remaining=1\r\n\u00a0 ?:? ,\"\u00a0 \u00a0 \u00a0Well done!\"\r\n\u00a0 for x=0 to 255:poke 709,x:pause 1:next x:rem oo, fancy colors. maybe I should make a tenline light synth, ala llamasoft\r\n\u00a0 if level=0:run:endif:rem if we finished our own user-created level, we're all done, so restart the game\r\n\u00a0 level=(level+1) mod 11:rem increment the level, wrapping around to the level editor (level 0) at the end\r\nendif\r\nloop:rem end main game loop\r\nrem fill out this line with a tribute to HSW\r\n?\"All respect to Howard Scott Warshaw, to whom my Yorgle easter egg is dedicated. Good luck to all the 2022 NOMAM entrants!\"\r\nrem trapped errors go here, restarting the game and redisplaying the menu\r\n#run\r\nrun\r\nrem data needs to be at end of line so fill out the last line with it\r\ndata -2,0,0,0,0,2,2,2,2,4,0,4,-4,0,4,4,-8,0,6,0,6,4,8,4,8,2,-10,0,10,4,-12,0,12,4,14,4,-18,0,16,0,16,2,18,2,18,4,16,4,7,2,2,7,2,2,4,1,4,6,5,5,9,0,0,7,5,3,10,4,3,6,0,1,5,0,0,16,4,2\r\nrem data has level widths and starting x and y pos too (width,x,y for each level)\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0starting here|1\u00a0 \u00a0 \u00a02\u00a0 \u00a0 \u00a03\u00a0 \u00a0 \u00a04\u00a0 \u00a0 \u00a05\u00a0 \u00a0 \u00a06\u00a0 \u00a0 \u00a07\u00a0 \u00a0 \u00a0 8\u00a0 \u00a0 \u00a09\u00a0 \u00a0 \u00a010```\r\n\n<p>\u00a0Obfuscated 10 line listing</p>\n\n<p>```basic</p>\r\n\r\n0_=%1+%3:A2=%3+_:Z=%3+A2:A0=%1+Z:A3=255:A1=710:A4=%2+A1:POKE580,%1:POKE82,%0:DIMA$(A3),A(16,8),B(Z),C(Z),D(Z):A$=\"&lt;atascii-encoded levels&gt;\":GR.%3:POKEA1,%0:C.%1:F.A=%0TO%2:F.B=%0TO9\r\n1PL.B*%2+A0,A*%2:N.B:N.A:C.%0:PL.25,%0:PL.25,%2:C.%2:REP.:READB,A:IFB&lt;%0:PL.ABS(B)+A0,A:EL.:DR.B+A0,A:END.:PA.5:U.B=16ANDA=_:T.#A:?\"\u00a0 _1_Easy _2_Glasses _3_House _4_Four\":?\"\u00a0 _5_City _6_Cross _7_Key _8_Holes\":?\"\u00a0 _9_Skull _10_Yorgle _0_Level editor\"\r\n2I.\"Level\";C:CLS:F.D=%1TOZ:READE,B,A:B(D)=E:C(D)=B:D(D)=A:N.D:DO:GR.%3:POKEA1,%0:POKE752,%1:IFC=%0ANDF=%0:?,\"Design your own level!\":?\" _Fire_ to plot/erase, hold _Fire_ to play\":PA.30:B=_:A=_:G=TIME:H=TIME:I=%0:W.%2-J-K:IFTIME-G&gt;Z:G=TIME:K=%1-K:C.K*%2-I*K\r\n3PL.B,A:END.:L=STICK(%0):M=((L=13)-(L=14))*%2:N=((L=A2)-(L=A0))*%2:O=A+M:P=B+N:O=(O&gt;%3ANDO&lt;19)*M+A:P=(P&gt;%3ANDP&lt;35)*N+B:IFTIME-H&gt;20AND(N ORM):C.I:PL.B,A:B=P:A=O:LOC.B,A,I:C.%2:PL.B,A:H=TIME:END.:IFSTRIG(%0)=%0:H=TIME:I=%1-I:F=I*%2-%1+F:REP.:U.STRIG(%0)\r\n4IFTIME-H&gt;60:J=%1:POKEA4,180:POKEA1,180:PA.Z:POKEA4,%0:POKEA1,%0:END.:END.:WE.:C(%0)=B:D(%0)=A:F.B=%0TO15:F.A=%0TOA2:LOC.B*%2+_,A*%2+_,I:A(B,A)=I&gt;%0:N.A:N.B:END.:F=%0:Q=%0:IFC=%0:F.B=%0TO15:F.A=%0TOA2:I=A(B,A):C.I:PL.B*%2+_,A*%2+_:F=F+I:N.A:N.B:B=C(%0)\r\n5A=D(%0):CLS:?\" _Fire_ to retry level, _Reset_ for menu\":EL.:F.D=%0TOC-%1:Q=B(D)+Q:N.D:C.%1:R=B(C):F.A=%1TOR:I=ASC(A$(Q+A)):S=.5:F.B=%0TOA2:S=S*%2:IFI&amp;S=S:PL.A*%2+18-R,B*%2+%3:F=F+%1:END.:N.B:N.A:B=C(C)*%2+20-R:A=D(C)*%2+%3:END.:G=TIME:H=TIME:T=F\r\n6PA.30:W.F&gt;%1:IFTIME-G&gt;60:G=TIME:K=%1-K:C.K*%2:PL.B,A:END.:L=STICK(%0):M=(L=13)-(L=14):N=(L=A2)-(L=A0):O=A+M:P=B+N:U=M*%2+A:V=N*%2+B:LOC.P,O,W:LOC.V,U,X:IFTIME-H&gt;20:IFX=%1ANDW=%0:POKE77,%0:C.%2:PL.B,A:PL.P,O:PL.V,U:B=V:A=U:F=F-%1:H=TIME\r\n7Y=A3-A3/T*F:SO.%0,Y,Z,%1:EL.:IFN ORM:POKEA4,6:POKEA1,6:PA.5:POKEA4,%0:POKEA1,%0:H=TIME:SO.%0,Y,%2,8:PA.Z:END.:SO.:END.:END.:IFSTRIG(%0)=%0:EX.:END.:WE.:SO.:IFF=%1:?:?,\"\u00a0 \u00a0 \u00a0Well done!\":F.B=%0TOA3:POKE709,B:PA.%1:N.B:IFC=%0:RUN:END.:C=(C+%1)MODA0:END.:LOOP\r\n8?\"All respect to Howard Scott Warshaw, to whom my Yorgle easter egg is dedicated. Good luck to all the 2022 NOMAM entrants!\"\r\n9#A:RUN:D.-2,0,0,0,0,2,2,2,2,4,0,4,-4,0,4,4,-8,0,6,0,6,4,8,4,8,2,-10,0,10,4,-12,0,12,4,14,4,-18,0,16,0,16,2,18,2,18,4,16,4,7,2,2,7,2,2,4,1,4,6,5,5,9,0,0,7,5,3,10,4,3,6,0,1,5,0,0,16,4,2\u00f5```\r\n<br/>\n<p>## Get in touch\u00a0\ud83d\udce9</p>\n<p>\u00a0 * [OxC0FFEE on AtariAge](https://atariage.com/forums/profile/50996-oxc0ffee/)</p>\n<p>\u00a0 * [OxC0FFEE on Twitter](https://twitter.com/OxC0FFEE)</p>\n<p>\u00a0 * [kimslawson@gmail.com]</p>", "metacritic": null, "released": "2022-03-26", "tba": false, "updated": "2022-03-28T06:29:53", "background_image": "https://media.rawg.io/media/screenshots/106/106cb54699b9991288ce51973b3ce3e4.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 29, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Strategy"], "publishers": [], "esrb_rating": null}