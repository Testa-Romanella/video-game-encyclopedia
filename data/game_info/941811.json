{"id": 941811, "slug": "tic-c64-by-kevin-prosser", "name": "TIC (C64) by Kevin Prosser", "name_original": "TIC (C64) by Kevin Prosser", "description": "<p>TIC</p>\n<p>This is a Tic Tac Toe game for the Commodore 64.\u00a0</p>\n<p>A 3x3 matrix will appear representing the TIC TAC TOE game. The user plays X and the Computer plays O. When Prompted for a \u201cMOVE?\u201d, type the number of the grid square where you would like to place your X. The screen will redraw with your X in place while the computer decides its next move. The screen will then redraw again with the computers move and the process continues until there is a winner or a tie. The game is suitable for kids as the computer will generally make good moves but is not unbeatable.</p>\n<p>Line by line description:</p>\n<p>0 DIMB(38):DIMT(38):DIMA(38):FORI=1TO23:READB(I),T(I),A(I):NEXT:GOSUB6:DATA2,0</p>\n<p>Dimension arrays for bitwise mask, test, and action arrays and reads that data,</p>\n<p>GOSUB is for the display routine.</p>\n<p>1 PRINT\"SMOVE?\":GETG$:M=VAL(G$):M=-(M&lt;9)*M:l=2^M:if(G$=\"\")or((X+OANDl)&gt;0)THENGOTO1</p>\n<p>Get X move and test to see if it is a free space. X and O are 9 bit integers that represent all the spaces held by the X and O marks. They are automatically initialized to zero at program execution.</p>\n<p>2 X=X+2^M:GOSUB6:IFX+O&gt;510THENPRINT\"TIE\":END:DATA1,8,0,3,32,0,5,128,0,7,64,0,6,4,0,2</p>\n<p>Update X value. X is a 9bit integer of spaces the Xs are in. If all spaces full without winner then tie.</p>\n<p>3 FORI=1to23:IF(XANDB(I))=T(I)AND(OAND2^A(I))=0THENM=A(I):DATA1,0,0,256,0,8,16,0</p>\n<p>Evaluate defensive moves from lowest priority to highest, save the best move as M.</p>\n<p>4 NEXT:FORI=15TO23:IF(OANDB(I))=T(I)AND(XAND2^A(I))=0THENM=A(I):DATA4,457,129,6</p>\n<p>Look for opportunities for O to win and take them if available.</p>\n<p>5 NEXT:)O=O+2^M:GOSUB6:GOTO1:DATA457,257,6,457,136,6,457,264,6,295,258,2,7,3,2</p>\n<p>Call the routine to display new board and check for a winner routine.</p>\n<p>6 PRINT\"SQQ\":FORI=0TO2:FORJ=0TO2:K=3*I+J:L=2^K:S=88+((OANDL)=0AND(XANDL)=0)*(40-K)</p>\n<p>Display new board, S is ascii code of item in the current square, X,O, or number of square</p>\n<p>7 S=S+9*((OANDL)&gt;0):R=18-128*(S&lt;70):PRINTCHR$(R)+CHR$(S);:NEXT:PRINT:NEXT</p>\n<p>R is code for reverse video if an X or O is in the square</p>\n<p>8 FORI=15TO22:Z=Z+((XANDB(i))=B(I)OR(OANDB(I))=B(I)):NEXT:IFZ&lt;0THENPRINT\"WIN!\":END</p>\n<p>Check for a winner which are moves 15-22. Z is zero by default unless any row/col/diagonal has all 1s</p>\n<p>9 RETURN:DATA56,24,5,448,320,7,73,9,6,146,18,7,292,260,5,273,272,0,84,80,2,7,5,1</p>\n<p>More data</p>", "metacritic": null, "released": "2023-03-16", "tba": false, "updated": "2023-03-17T11:05:47", "background_image": "https://media.rawg.io/media/screenshots/8b8/8b86ca0f65b99b33f2481f9ff7e779ce.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 9, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Strategy"], "publishers": [], "esrb_rating": null}