{"id": 911119, "slug": "space-shooter-itch-mathieu-schmerber", "name": "Space shooter (itch) (Mathieu Schmerber)", "name_original": "Space shooter (itch) (Mathieu Schmerber)", "description": "Context\r\n<p>This project was made in the context of my 3rd year of college at Epitech (France). I teamed up with 3 other students for this project which was developed in 2 months.\u00a0</p>\n<p>The requirements of this project was to build a networking game engine in C++ using a client/server architecture\u00a0and make a R-Type replica using it.\u00a0 This project also needed to be cross-OS accross windows and linux and built using the connan package manager.</p>\n<p>On the technical aspect, we had to write in\u00a0 C++ with the SFML graphic library. The only code libraries allowed were STD and BOOST.</p>\n<p>In the end, we made a random shooter game with our engine, using the sprite sheets of the R-Type. This project was awarded as the best project of our promotion.</p>\r\n\r\nEngine\r\n<p>The engine is built using the ECS architecture pattern. The engine provides the core architecture and abstraction that the client and server can then work with. The server holds the main gameplay alongside a lobby system and the connection management. The client is only responsible for drawing whatever it receives from the server on the screen. The engine\u00a0features:</p>\n<ul><li>Networking abstraction\u00a0(UDP &amp; TCP sockets)</li><li>Rendering:<ul><li>Sprite &amp; textures</li><li>Fonts</li></ul></li><li>Audio management:</li><li><ul><li>Musics</li><li>Sound effects</li></ul></li><li>Scene management</li><li>General purpose systems:<ul><li>Parent/Child restraints</li><li>Rendering</li><li>Input management</li><li>Parallax</li><li>2D Physics</li><li>Text management</li><li>Dynamic window size</li><li>Animation</li><li>Button</li></ul></li></ul>\r\n\r\nNetworking\r\n<p>The server is responsible for handling incoming connections.\u00a0It features a multi threaded lobby or \"game room\" system and handles every game.</p>\n<p>Our RFC protocol can be found on our Github repository (link below).</p>\n<p>To ensure an enjoyable online experience, the game implements entity interpolation and projectile prediction.</p>\r\n\r\nGameplay\r\n<p>In this game you can play alone or with up to 4 friends.</p>\n<p>Each player controls a spacecracft that is capable of moving and shooting.\u00a0 Your goal is to play through the whole stage until reaching the final boss.</p>\n<p>Whenever an enemy gets killed, there's a random chance of it dropping an item. Items will essentially provide the player with automatic turrets that can be upgraded thanks to other bonus dropped by enemies.</p>\n<p>Controls (Keyboard):</p>\n<p>- [UP/DOWN/RIGHT/LEFT]: move</p>\n<p>- [SPACE]: shoot (hold to charge a powerfull projectile)</p>\r\n\r\nTeam\r\n<ul><li><strong>Mathieu Schmerber:</strong> Game engine, core gameplay, client-server game\u00a0networking</li><li><strong>Cyprien Ricque:</strong> Game engine, ai programing, dynamic library loader</li><li><strong>Emillien Delevoye:</strong> Server, lobby management, core socketing</li><li><strong>Paul Surrans:</strong> Client UI and scenes</li></ul>", "metacritic": null, "released": "2023-01-13", "tba": false, "updated": "2023-01-16T15:40:37", "background_image": "https://media.rawg.io/media/screenshots/c24/c240c209eceea5768efba01840702f2e.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 94, "game_series_count": 0, "reviews_count": 0, "platforms": ["Linux", "PC"], "developers": ["Mathieu Schmerber"], "genres": ["Shooter"], "publishers": [], "esrb_rating": null}