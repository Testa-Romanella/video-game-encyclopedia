{"id": 791155, "slug": "streamer-logo-graphics", "name": "Streamer Logo Graphics", "name_original": "Streamer Logo Graphics", "description": "<p>Streamer Logo is a small Twitch integration game for drawing... with turtles!!!</p>\r\nWhy Get Streamer Logo\u00a0Graphics\r\n<p>No need for Twitch bot authorisation (though this may be added later if a feature requires it.)</p>\n<p>Interactive Twitch Chat implementation of a Logo-like language.</p>\n<p>Pit teams of turtles against each other to make art!</p>\n<p>Run a chill stream where viewers draw together through basic programming techniques.<br/></p>\n<p>Supports transparent backgrounds for streaming overlay purposes.<br/></p>\r\nWhat is Logo?\r\n<p>Logo is a programming language developed in 1967. Part of this language (and perhaps its most well known feature) is Turtle Graphics which allows users to draw vector art using programming commands. Streamer Logo Graphics is a Twitch chat partial implementation of Turtle Graphics.<br/></p>\r\nFeatures\r\n<ul><li>Logo Graphics-like drawing through text</li><li>Read chat to make art</li><li>Host <strong>individual</strong> or <strong>team</strong> games</li><li>Generate text or image based prompts</li><li>Timed play sessions</li><li>Grid overlay for more accurate positioning.</li><li>Screenshot artwork at any point in time (this can be requested by viewers too)</li></ul>\r\nNOTE\r\n<p>You agree to use Logo Streamer Graphics responsibly and only run it on channels\u00a0that you have explicit permission to.</p>\n<p>If the game is abused or used for abusive purposes (harassment and similar negative behaviour) it will be taken down and/or Twitch authentication will be required.<br/></p>\r\nHow To Use (Streamer)\r\nOverlay Setup (OBS/Streamlabs)\r\n<p>The game supports transparent backgrounds (in windowed mode). This allows you to capture the game as an overlay on top of whatever other content you wish to stream. To do this, set the background colour of the canvas to an alpha less than 1 then in OBS add a Game Capture source, select the game window for Streamer Logo Graphics and then make sure to enable Allow Transparency.</p>OBS Source Properties Window with SLG in transparent background mode.In the top half of the image you can see the game preview. You can see im the Background Colour preview that the background has been set to 0 (fully transparent).<p>With this setup, maximise the window and then you can switch to any other program you want and the game will still be captured as an overlay.<br/></p>Interface\r\n<p>The game offers a minimal interface. The most important first step is to set your channel. Click the settings cog and then type your channel name. You can save this for future sessions by pressing the Save Settings button, however this is not needed if you have multiple channels and would like to enter the channel name every time you start the game.</p>\r\nTurtle Settings\r\nTurtle Collisions\r\n<p>Sets whether turtles can collide with each other. Leaving this off creates a more pure art environment and will improve performance a little. However, if you would like a more chaotic experience that forces viewers to work together to create their masterpiece, enable this setting.</p>\r\nClear Queue on Collision\r\n<p>Sets whether a turtle will continue to try and finish its queued commands even if it collides with the bounding box or another turtle. If true any remaining commands will be cleared and the turtle will be reset to waiting state.<br/></p>\r\nTurtle Speed\r\n<p>This is an experimental setting. When lots of turtles/drawn lines are on screen you may find the game will get unstable and turtles will stop and jitter in place when using faster speeds. This can be fixed with a stop or reset command in most cases. If you plan on having a lot of turtles on screen you may want to reduce the speed below the default.<br/></p>\r\nTeam Game Settings\r\n<p>Max Teams</p>\n<p>Sets the maximum number of turtles that can be in the game at once. For a more chaotic stream set this to a high number, for a more chill or strategic game, set this to a low number, perhaps even just one or two turtles.<br/></p>\r\nScreenshot Settings\r\n<p><strong>Allow Viewers to request a screenshot<br/></strong></p>\n<p>Allows viewers to use the screenshot\u00a0command\u00a0to request\u00a0a\u00a0screenshot.\u00a0This will\u00a0be performed no\u00a0more frequently than\u00a0the\u00a0cooldown\u00a0time.</p>\n<p><strong>Screenshot Cooldown</strong></p>\n<p>Use this to set a cooldown on viewer screenshot requests.</p>\n<p><strong>Hide UI on Screenshot</strong></p>\n<p>If true, the UI will be hidden before a screenshot is taken.<br/></p>\r\nPrompt Settings\r\nGenerating Art Prompts\r\n<p>There are two ways to generate prompts. The first is to generate a word prompt. This generates a random phrase from a list of words. At the moment they can be somewhat nonsensical. Users can provide their own file to generate their own list of words to generate prompts with.<br/></p>\r\nCustom Word Prompts\r\n<p>If you place a file in the same folder as the game called\u00a0<strong>phrase_gen.json</strong> with the following format you can make custom prompts.</p>\r\n\r\n{\r\n    \"nouns\": [\"noun1\", \"noun2\"],\r\n    \"adjectives\": [\"adjective1\", \"adjective2\"],\r\n    \"activities\": [\"activity1\", \"activity2\"],\r\n}\r\n\r\nTeams Game\r\n<p>Teams mode allows multiple viewers to control the same turtle. The first person to request a turtle is made will be the owner of the turtle and\u00a0</p>\r\nOwner Weight\r\n<p>The host can specify if the owner of a turtle\u00a0received additional weight to their turtle requests and can set how much additional (or less) weight that user receives.</p>\r\nBanning Users\r\n<p>If users are being overly spammy with their commands you can ban them in the game. This won't ban them from Twitch Chat, just from having an effect in the game. If a user is truly being a nuisance it is best to ban them in Twitch itself.</p>\n<p>To ban a user click the settings cog then add their name to the ban list. Remember to click Save Settings before closing the popup.</p>\n<p>When you are ready to remove the ban, select their name from the list and click unban user. Again, click Save Settings before closing the popup.</p>\r\nBEGIN\r\n<p>When you are ready to accept viewer chat, type <strong><em>begin</em></strong> into your Twitch chat. Begin will only respond to the channel owner. <br/></p>\n<p>If viewers wish to\u00a0run\u00a0their\u00a0own\u00a0copies of the game\u00a0to see\u00a0what\u00a0their\u00a0turtle is doing\u00a0more\u00a0clearly, they\u00a0will\u00a0need\u00a0to load their\u00a0copy before\u00a0you\u00a0type\u00a0begin. If\u00a0this is\u00a0something\u00a0you\u00a0want to\u00a0allow\u00a0viewers to do\u00a0you\u00a0may want to\u00a0discuss the\u00a0exact settings\u00a0you are\u00a0using\u00a0and\u00a0give viewers a countdown\u00a0before\u00a0typing begin.<br/></p>\r\nEND\r\n<p>When you want to end the game, type <strong><em>end </em></strong>into your Twitch chat. This will lock the game from accepting any more chat requests. This is useful for preventing spam or allowing turtles to finish their art without any new art being started.</p>\r\nAccept Turtle Commands\r\n<p>This button simulates begin and end, however you must type begin before this button has any effect. This is a safety switch feature for channel owners. Once you have called begin you can use this switch in the UI to accept or disable chat commands being read by the game.<br/></p>\r\nHow To Use (Viewer)\r\n<p>Turtles will respond to various commands. The first and most important is <strong>make turtle</strong>. This will request the game make a turtle with your name.</p>\r\nMovement\r\n<p><strong>move [distance]</strong></p>\n<p><strong>forward [distance]</strong>\u00a0(alias\u00a0for\u00a0move)</p>\n<p><strong>back [distance]</strong></p>\r\n\r\nDistance can be specified as an integer or non-integer number:\r\nforward 100\r\nforward 250.5\r\nNegative numbers will move the turtle in the opposite direction:\r\nforward -200 is the same as back 200\r\n\r\nRotation\r\n<p><strong>right [angle]</strong></p>\n<p><strong>left [angle]</strong></p>\n<p><strong>rotate [angle]\u00a0</strong>(alias for\u00a0right)</p>\r\n\r\nAngle can be specified as an integer or non-integer number:\r\nright 90\r\nright 45.5\r\nNegative numbers will rotate the turtle in the opposite direction:\r\nleft -90 is the same as right 90\r\nrotate defaults to a right rotation.\r\nPen\u00a0Commands\r\n<p><strong>penup\u00a0</strong></p>\n<p><strong>pendown\r\n</strong></p>\n<p><strong>pen up</strong></p>\n<p><strong>pen down</strong></p>\r\n\r\nIf the pen is set to down position, a line will be drawn when a move command is issued\r\n\r\n<p><strong>width [num]<br/></strong></p>\n<p>Sets the\u00a0pen\u00a0width\u00a0in\u00a0pixels.</p>\r\n\r\ne.g. width 10\r\n\r\n<p><strong>colour [colour]\u00a0(can\u00a0also\u00a0use\u00a0US\u00a0English\u00a0spelling color)</strong></p>\r\n\r\nColours can be specified using a hex code or one of the default colours\r\nThe streamer can present a list of acceptable colour names on the side of the screen.\r\n\r\nQueued Commands\r\n<p>Commands can be queued (this does not work in team mode to make evaluating group command requests less intensive for the host's computer)</p>\n<p><strong>[command1 parameter, command2, parameter</strong></p>\r\n\r\ne.g.\r\n[move 100, right 90, penup, move 100, right 90, pendown\r\nThere is technically no limit to the size of the queue, however Twitch chat has a character limit of ~500 characters.\r\n\r\nRepeat Commands\r\n<p>You can repeat a queue of commands to get even more advanced drawings. (this does not work in team mode to make evaluating group command requests less intensive for the host's computer)<br/></p>\n<p><strong>rpt num [queue (as above)</strong><br/></p>\r\n\r\ne.g. rpt 4 [move 100, right 90\r\nThe above code will move the turtle in a square motion with sides 100 pixels. \r\n!!!Currently there is no recursion for repeating or queueing repeats.!!!\r\n\r\nOther Commands\r\n<p><strong>reset</strong></p>\n<p>If your turtle gets stuck use the reset command to clear any queued commands, lift the pen and reset the position and state of the turtle. </p>\r\nTurtle frantically flapping its fins\r\n<p><strong>leave</strong></p>\n<p>If you are done playing you can use the leave command which will destroy your turtle and all lines that you have drawn.<br/></p>\n<p><strong>pos [x,y]</strong></p>\n<p>If you would like to quickly move your turtle to a point on screen.<br/></p>\r\nTeam\u00a0Commands\r\n<p><strong>join [name]</strong></p>\n<p><strong>join [team]</strong></p>\n<p><strong>join [id]</strong></p>\n<p>You can join a team by requesting joining the team's owner, the team name or the turtle as specified in its creation order (e.g. the first turtle created would be turtle 1)</p>\n<p><strong>name [team_name]</strong></p>\n<p>The owner of a team turtle can set the team name. e.g. name best_team will rename the turtle to best_team. This can be used by other players to join the turtle.<br/></p>\r\nExtras\r\n<p>For super advanced play, viewers can run their own copy of the game, sign in with the streamer's channel. Their game will respond just the same as the streamer's chat! (Provided the same settings are used, such as team/owner weight settings)<br/></p>\n<p>This can be useful for very busy streams where your turtle or team's turtle may get obscured by others.</p>\r\nFuture Features\r\n<p>If the game proves popular, further developments may be considered including:</p>\n<ul><li>Importing custom images for prompts</li><li>Resizing prompt images</li><li>Exporting finished art to SVG format</li><li>Automatic upload to image sharing platforms</li><li>Improve timing of games to prevent input outside of the timing events</li></ul>\r\nSupport Development\r\n<p>You can support the game in several ways:</p>\n<ul><li>Provide an optional payment on this page, right here</li><li>Consider a tip on Ko-Fi</li><li>If you would to support us for free, consider sharing our work on social media and coming by to support our live streams and other content.</li></ul>\r\nOpen Source\r\n<p>Streamer Logo was created in Godot Engine (MIT License) godotengine.org/license.</p>\n<p>Utilises snippets of code from TwitchChatManager\u00a0https://github.com/davidkbd/Godot_TwitchChatManager/</p>\n<p>Utilises some concepts from  https://www.dougdoug.com/twitchplays<br/></p>\r\nHelp!\r\n<p>The game is still in development, please log any bugs, issues or suggests in the game's community pages or on our Discord and we'll try to address them.</p>\r\nI can't connect to Twitch Chat\r\n<p>The game features an independent authorisation mechanism to prevent abuse. If you see an error about authentication it may just be that the authentication server is temporarily down or inaccessible, please try again shortly. If the problem persists it may be that the game has been removed from the authentication server. In this case check the devlog to see if a new version has been posted.<br/></p>\n<p>If the game gets too much abuse it may be removed permanently, in which case a devlog will be posted stating as such.</p>\r\nNo Turtles Show On Stream\r\n<p>The streamer must type <strong><em>begin </em></strong>in order for any commands to be run by the game. Make sure you, the streamer has typed this command before anyone else tries to make turtles.</p>", "metacritic": null, "released": "2022-05-20", "tba": false, "updated": "2022-05-23T15:13:46", "background_image": "https://media.rawg.io/media/screenshots/896/8969af1e3612c1afb0ab25f3c80808be.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 6, "game_series_count": 0, "reviews_count": 0, "platforms": ["Linux", "macOS", "PC"], "developers": ["Drentsoft Games"], "genres": [], "publishers": [], "esrb_rating": null}