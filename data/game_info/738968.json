{"id": 738968, "slug": "byte-fox-by-roepipi", "name": "Byte Fox by RoePipi", "name_original": "Byte Fox by RoePipi", "description": "<p>INTRODUCTION</p>\n<p>============</p>\n<p>You are a digitized fox though only one byte long. Your energy is limited, so you must feed on other bytes. Initially, you are kept on a line of bytes which is expanding at random. You must keep on hunting for new, tasty bytes through 3 levels in this game.</p>\n\n<p>FEATURES</p>\n<p>========</p>\n<p>- Colorful action on 3 different levels</p>\n<p>- \"Safe start\": Starting game after reset the first level always plays the same</p>\n<p>- Forgiving: On fail, the game restarts at the same level</p>\n<p>- Use either joystick port</p>\n<p>- Classic beeps</p>\n\n<p>GAME INSTRUCTIONS</p>\n<p>=================</p>\n<p>Use a real or virtual joystick in either of the 2 built-in ports.</p>\n<p>After starting the game, it displays the current number of level and the target bytes to \"eat\". After a short wait, you are placed on a dim line of bytes. You must move along these bytes to light them and reward you with some energy. At the top of the screen, you can see the \"painted\" bytes count, the iconic title of the game (it's a 10-liner version of Bit Fox on C16/Plus4), and your current energy. If you step on a dim byte, you're rewarded 3 units of energy, but anything else you do costs you 1 unit of it. If you can't eat the necessary amount of bytes (60 on level 1, 120 on level 2 and 180 on level 3), you must replay that level. If you win all 3 levels, the game restarts after a gratulation.</p>\n<p>The colors of levels:</p>\n<p>Level 1: brown -&gt; orange</p>\n<p>Level 2: green -&gt; cyan</p>\n<p>Level 3: dark blue -&gt; light blue</p>\n\n<p>PROGRAM LINES OVERVIEW</p>\n<p>======================</p>\n<p>Use the LIST command to view the program lines. You can use the LIST from-to syntax to list certain intervals, eg. LIST 4-7.</p>\n<p>0 init: joy directions, functions, sound volume</p>\n<p>1 next level: black screen, set variables</p>\n<p>2 set more variables, display ready screen</p>\n<p>3 set even more variables, clear screen and zero colors, display initial level</p>\n<p>4 player loop: draw player, get joy direction</p>\n<p>5 hide player, set new position and change energy</p>\n<p>6 extender loop: find existing tile, randomize direction</p>\n<p>7 continue direction, on exisiting tile: dismiss, else: place tile</p>\n<p>8 death, level finish, game finish</p>\n<p>9 subroutine: keep moving coordinates on board, display stats</p>\n\n<p>FUNCTIONS</p>\n<p>=========</p>\n<p>FNP(.) color peek at (I,J) position (anything other than 0 means tiles)</p>\n<p>FNR(I) random integer between 0 and I-1</p>\n\n<p>VARIABLES</p>\n<p>=========</p>\n<p>const B base color POKE address (2089)</p>\n<p> C target tile color</p>\n<p>level C$ level color char</p>\n<p> D extender direction (0:none, 1:up, 3:right, 5:down, 7:left)</p>\n<p>level E energy</p>\n<p> I loop variable</p>\n<p> J loop variable, joystick input</p>\n<p> L level # (1-3)</p>\n<p>const M playfield columns-1 (18)</p>\n<p>const N playfield rows-1 (11)</p>\n<p>level P painted tiles count</p>\n<p>level P$ level player color char</p>\n<p>level T target tiles count</p>\n<p>const T$ tile gfx</p>\n<p> U,V extender coordinates (0 - M-1, 0 - N-1)</p>\n<p> X,Y player coordinates (0 - M-1, 0 - N-1)</p>\n<p>const X,Y(0-8)joystick X,Y directions (-1/0/1)</p>", "metacritic": null, "released": "2022-02-12", "tba": false, "updated": "2022-02-14T07:31:42", "background_image": "https://media.rawg.io/media/screenshots/7ce/7ce1bb1c79225b77abc3f3006821f7b6.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 12, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Action"], "publishers": [], "esrb_rating": null}