{"id": 660218, "slug": "the-name-garden", "name": "The Name Garden", "name_original": "The Name Garden", "description": "<p><em><strong>Tell your (or a friend's) name to the garden gnome and watch it grow a garden unique to you.</strong></em><br/></p>\n\n\n\n<p><strong>Controls: directional arrows, or mouse dragging, or swiping (not tapping) if you're on mobile.<br/></strong><br/><br/></p>\n<p>This was an experiment to see if I could achieve <strong><em>seed-based random generation</em></strong> and <strong><em>text input</em></strong> in the charmingly limited and simple <strong>M\u00f4si</strong> game engine (very similar to the very popular <strong>Bitsy</strong> game engine).</p>\n<p>There's 10 different palettes, 5 dirt types, 5 plant types and 5 flower types you can get, on top of a unique positioning of these elements, based on the name you enter.<br/><br/><br/></p>\n<p>The garden generation is random, but seed-based. That means it will <strong><em>always generate the same garden for a given seed (text entered)</em></strong>. There is a script you can use in <em>M\u00f4si</em> that returns random numbers each time you call it, but I couldn't use it because I needed the generation to stay consistent every time you entered a given name.<br/></p>\n<p>I assigned a number to each letter, which together form the first seed. I then used a <em><strong>linear congruential generator</strong></em> algorithm, a kind of (pseudo)random number generation technique,  to generate new seeds from the previous ones. I used the last digit of each new seed, which codes for different sprite options, for sprite selection and positioning.</p>\n<p>Since that takes a lot of scripting in <em>M\u00f4si </em>(there's no arrays or loop functionality), I wrote a program that generated those lines of code for me. That way I could easily loop through the more than 70 repetitions of generating a new seed, selecting and placing the sprite at a given position.<br/><br/><br/></p>\n<p>If you're interested in random number generation but are new to the concept, here's a fun introductory video from the great channel <em>Numberphile</em>, which also explains the formula for the linear congruential generator I used.</p>\n<p>Feel free to ask me any questions in the comments below as well.<br/></p>", "metacritic": null, "released": "2021-08-21", "tba": false, "updated": "2021-09-08T16:46:09", "background_image": "https://media.rawg.io/media/screenshots/0d4/0d4699ab9a21f34ee7adda38c706ff0e.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 30, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC", "macOS", "Linux", "Android", "Web"], "developers": ["squali"], "genres": [], "publishers": [], "esrb_rating": null}