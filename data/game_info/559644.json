{"id": 559644, "slug": "kitty-vs-bath-retro-game", "name": "Kitty vs. Bath retro game", "name_original": "Kitty vs. Bath retro game", "description": "<p>You are a cat. As a cat, you must avoid your owner\u2019s attempt to wash you at all cost. You are now locked inside the bathroom full of baits and traps set up by your owner \u2013 Can you escape? Collect all the fish cookies and keys in the room. All forms of soap and water puddles are your enemies! If you touch them, you will get caught.\u00a0Toilet paper roll and duckie are benevolent friends. Use your keyboard to control the movement of the kitty.\u00a0</p>\n<p>Soundtrack is William Rosati - Floating Also (NO COPYRIGHT 8-bit Music) from YouTube.\u00a0\r\n</p>\n<p>All sprites except the cat are hand drawn by me. The cat is a free resource downloaded fromwww.kissclipart.com. The tile image is sourced from WayFair.\u00a0\r\n</p>\n<p>\u00a0\r\n</p>\n<p>The development process:\r\n</p>\n<p>\u00a0For this game, I decided to use rather simple game mechanisms and focused more on the character building and aesthetic experience of the game. I decided to not include the score board because the goals seem rather straightforward. I also would prefer not to crowd up the canvas too much when I already have a lot of different graphic elements at work. In terms of the development of the code, it was overall successful with a good amount of trouble shooting. I was following the steps in the class demo rather closely. At times when I was trying out new codes, I would look up a bunch of tutorials and then tweaked on the code template provided by those tutorials. It would usually work out after a few trials and errors. I am definitely feeling much more familiar with the Unity interface and syntaxes in C# after this assignment.\u00a0</p>\n\n<p>Successes:\r\n</p>\n<p>\u00a0I am happy with the overall aesthetics/graphic design of the game, as well as the storytelling. Coding wise, I am proud of figuring out how to create moving obstacles with Mathf.PingPong. Even though we used it before in our exercise 2, it still took me a while to understand how to apply it in 2D. I am also happy with my soundtrack choice, which took me some hours of research to find.</p>\n<p>\u00a0\r\n</p>\n<p>Failures:\r\n</p>\n<p>\u00a0I failed to make the water puddles slippery. I tried multiple mechanisms such as 2D surface effector, using AddForce function in code and 2D physical material, but somehow none of them worked in the game. I hope to keep troubleshooting on this over the next few weeks. Or perhaps turn the puddles into some other kinds of traps!</p>\n<p>\u00a0\r\n</p>\n<p>Lessons Learned:<br/></p>\n<p>Finish editing your sprites first before adding them to the prefab.</p>\n<p>Also check and edit the file name when copying and pasting code from a different file.\u00a0\r\n</p>\n<p>Always double check\u00a0the screen size before you start building!</p>\n<p>\u00a0\r\n</p>\n<p>Future Development:\r\n</p>\n<p>\u00a0Increase the difficulty of the game. Create a more aesthetically consistent sprite sheet. Add more responsive sound effects.\u00a0</p>", "metacritic": null, "released": "2021-02-17", "tba": false, "updated": "2021-02-19T06:50:40", "background_image": "https://media.rawg.io/media/screenshots/fea/fea2ded95f2183e9ea3f1c57ef1d5cf6.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 9, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["jasminleung177"], "genres": ["Adventure"], "publishers": [], "esrb_rating": null}