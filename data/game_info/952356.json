{"id": 952356, "slug": "synapse-tompudding", "name": "Synapse (tompudding)", "name_original": "Synapse (tompudding)", "description": "<p>*** WARNING *** \r\nThis is an extremely nerdy hacking \"game\" that is barely a game, and  certainly not fun. If you're not into security or embedded systems  shenanigans, you might want to give this a miss!  \r\nThat said, if things like TIS-100 and 0x10c interest you, and you  wish for something vastly more complicated and much less fun, then walk  this way...</p>\n<p><strong>Synapse </strong><br/></p>\n<p> This is a \"game\" made in 48 hours for Ludum Dare 33 (August 21st-24th, 2015) where the theme was \"You are the Monster\". It is a hacking simulator (You  are the monster(!), because hackers are monsters right?) where you have  an imaginary old machine based on an ARMv2 CPU and made up hardware. You  have some tapes, and on each tape there is a secret password, can you  find all three?  \r\nI had originally intended to implement a BBS style system and have  you hack a real server and possibly other people, but that was way too  ambitious for the 48 hours. It's probably extremely hard, with a high  barrier to entry, but if you like low level stuff, old computers and  ARM, then it might just be for you :)</p>\n<p><strong>Help\u00a0</strong><br/></p>\n<p>\r\nTo get started you'll want to load a tape. You can type load and  enter and it will try to load a tape, but at bootup there is no tape in  the drive. <br/></p>\n<ul><li>Press escape to halt execution and switch controll to the  debugger. You'll see the bottom right text switch from \"RUNNING\" to  stopped   * Press tab until the tape selector is highlighted </li><li>Use the arrow keys to choose the tape you want </li><li>Press enter or space to load it </li><li>Resume execution either by pressing c or escape again. R will  reset the machine and Q exit completely at this point so be careful! </li><li>type load and enter to load the tape </li><li>Enjoy the delights of the Tetralimbic Systems Synapse!</li></ul>\n<p>At this point it's probably very daunting. The debugger is not very  full featured and there's a lot of code, so I've included a docs  directory in the binary distributions with some helpful files:</p>\n<ul><li>disassembly of the tapes including function names. These should give some hints where to set those breakpoints </li><li>ARMv2 manual  \r\nYou can add other tapes by dropping files into the tapes directory.  These can then either be loaded and run as any other tape, or played as  keyboard input by pressing p (for any crafted input you might need :)) </li></ul>\n<p><strong>Bugs\u00a0</strong><br/></p>\n<ul><li>\r\nSometimes there's a deadlock and it hangs. Not sure why :( </li><li>There is no indication when the CPU is idle and waiting for an  interrupt. This is a problem as it causes the debugger to not step.</li></ul>RatingsInnovation#129\r\n3.61\r\nMood#160\r\n3.53\r\nGraphics#425\r\n3.17\r\nHumor#542\r\n2.53\r\nOverall#572\r\n3.00\r\nFun#599\r\n2.82\r\nTheme#875\r\n2.40\r\nCoolness#1752\r\n36%", "metacritic": null, "released": "2023-04-06", "tba": false, "updated": "2023-04-07T07:41:35", "background_image": "https://media.rawg.io/media/screenshots/26d/26df833ca1e1c010e584998f07cf29cb.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 28, "game_series_count": 0, "reviews_count": 0, "platforms": ["Linux", "PC"], "developers": ["tompudding"], "genres": [], "publishers": [], "esrb_rating": null}