{"id": 636299, "slug": "tanks-lewis-stephens", "name": "Tanks! (Lewis Stephens)", "name_original": "Tanks! (Lewis Stephens)", "description": "Summary\r\n<p>Tanks! is a 2 player (1 keyboard) 3D shooter game. Each player controls a distinct tank that can move and shoot. Players can charge their shots to increase their shooting range and aim.\u00a0Players must fight to defeat each other in order to win each round. The first player to win 5 rounds wins the game.\u00a0</p>\r\nHow to Play\r\n<p>Player 1</p>\n<ul><li>WASD to move</li><li>Space to shoot</li><li>Hold space to charge your shot</li></ul>\n<p>Player 2</p>\n<ul><li>Arrow keys to move</li><li>Space to enter<br/>\n</li><li>Hold enter to charge your shot\r\n</li></ul>\r\nProject Outcomes\r\n<p>I really enjoyed this Unity project as it was straight forward, well paced, and very informative. It built upon my existing knowledge and went into some basic concepts in further detail which improved my overall ability in Unity and C#.\u00a0</p>\n<p>After completing this project I am now able to:</p>\n<ul><li>Build upon the Input Manager to add multiple inputs for multiple players\r\n</li><li>How to correctly use Quaternions and Euler Angles to manipulate rotation\r\n</li><li>How to correctly use Mathf and Lerp functions\r\n</li><li>When to use Update() vs. FixedUpdate() methods\r\n</li><li>Identify where I can use primitive colliders versus detailed ones in order to optimise my game and make it more performant\r\n</li><li>Understand the difference between perspective and orthographic camera projections and how that affects the Frustum\u00a0\r\n</li><li>Build a camera rig that scales and moves based on the location of multiple players\u00a0\r\n</li><li>Integrate both world and screen space UI</li><li>Understand the difference between baked lighting and real-time lighting and when and how to implement them</li><li>Vary pitches to eliminate phasing in a 2D space with multiple Audio Sources playing the same sound\r\n</li><li>Using the Audio Mixer to group and balance my game audio\r\n</li><li>Use ducking (Duck Volume) to reduce background music in order to emphasise sounds effects</li></ul>\n<p>I would like to return to this project in the future to add support for additional players, tank/colour selection and an enhanced UI with player names and round counters. For now I am going to move on to the other projects/course offered by Unity Learn in order to continue learning new skills and\u00a0building out my portfolio.\u00a0</p>", "metacritic": null, "released": "2021-07-13", "tba": false, "updated": "2021-07-16T09:13:24", "background_image": "https://media.rawg.io/media/screenshots/b5a/b5adfd1acc25bf7f913d5f7b1e400f60.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 98, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["Lewis Stephens"], "genres": [], "publishers": [], "esrb_rating": null}