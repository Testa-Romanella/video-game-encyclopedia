{"id": 901037, "slug": "platformer-made-in-visual-ts-game-engine", "name": "Platformer made in Visual-ts game engine", "name_original": "Platformer made in Visual-ts game engine", "description": "<p>Config property defined in constructor from ServerConfig class in interest way. With two defined flags dev &amp; prod it is easy resolved boring problem with migration localhost - public server:\r\n</p>\r\n\r\n    // enum : 'dev', 'mongodb.net' or 'prod'     this.serverMode = \"dev\";      this.networkDeepLogs = false;     this.rtcServerPort = 12034;     this.rtc3ServerPort = 9001;     this.connectorPort = 1234;      this.domain = {       dev: \"localhost\",       prod: \"maximumroulette.com\"     };      this.masterServerKey = \"maximumroulette.server1\";     this.protocol = \"http\";     this.isSecure = false;      // localhost     this.certPathSelf = {       pKeyPath: \"./server/rtc/self-cert/privatekey.pem\",       pCertPath: \"./server/rtc/self-cert/certificate.pem\",       pCBPath: \"./server/rtc/self-cert/certificate.pem\",     };      // production     this.certPathProd = {       pKeyPath: \"/etc/httpd/conf/ssl/maximumroulette.com.key\",       pCertPath: \"/etc/httpd/conf/ssl/maximumroulette_com.crt\",       pCBPath: \"/etc/httpd/conf/ssl/maximumroulette.ca-bundle\"     };      this.appUseAccountsSystem = true;     this.appUseBroadcaster = true;     this.databaseName = \"masterdatabase\";      this.databaseRoot = {       dev: \"mongodb://localhost:27017\" ,       prod: \"mongodb://userAdmin:********@maximumroulette.com:27017/admin\"     };      this.specialRoute = {       \"default\": \"/var/www/html/applications/visual-typescript-game-engine/build/app.html\"     };\r\n<p>- Running server is easy :\u00a0From root folder (not from server folder). If you wanna use node.js debugger you need to fix path for the certs.\r\n</p>\r\n\r\n  npm run rtc\r\n<p>With this cmd :\u00a0<em>npm run rtc</em>\u00a0we run server.js\u00a0hosting\u00a0and connector.ts websocket\u00a0session\u00a0and webrtc\u00a0broadcaster.ts. Connector is our account session used for login, register etc. Implemented video chat based on webRTC protocol. Running rtc3 server is integrated. If you wanna disable session-database-rtc3 features and run only\u00a0broadcaster:\r\n</p>\n<p>Features comes with broadcaster:\r\n</p>\n<ul><li>Multiplatform video chat works with other hybrid frameworks or custom implementation throw the native mobile application web control (Chrome implementation usually).\r\n</li></ul>\n<p>GUI Tools</p>\n<p>To get GUI tools first download python3 for your OS.\u00a0creator2dmap\u00a0is python3 canvas oriented application.\r\n</p>\r\n\r\n cd tools \r\n git submodule init  \r\n git submodule update  \r\n // or  \r\n git clone --recurse-submodules https://github.com/zlatnaspirala/visual-ts-game-engine \r\n // update   git fetch   git merge\r\n<p>In this way you will get project:\u00a0https://github.com/zlatnaspirala/creator-2dmap\u00a0intro\u00a0tools/creator2dmap/\u00a0folder.\r\n</p>\n<p>Start application with:\r\n</p>\r\n\r\npython.exe tool.py (win)   ./python3 tool.py (macos) \r\n<p>Documentation:</p>\n<p>Follow link for API: [WIP]\u00a0Application documentation\r\n</p>\n<p>Possible to install from (It's good for instancing new clear base project):\r\n</p>\r\n\r\n  npm i --save visual-ts \r\n<p>Take a look this repo (it is example for approach\u00a0npm i visual-ts)\u00a0https://github.com/zlatnaspirala/visual-ts-module\r\n</p>\n<p>Work with visualTs like package library will be full teste in next commits.\r\n</p>\n<p>If you wanna generate doc you will need manual remove comment from plugin section in webpack.config.js. Restart 'npm run dev' Best way to fully healty build.\r\n</p>\n<p>If you wanna insert some new html page just define it intro webpack.config.js :\r\n</p>\r\n\r\nplugins : [     new HtmlWebpackPlugin({     filename: '/templates/myGameLobby.html',             template: 'src/html-components/myGameLobby.html'         }), ...\r\n<ul><li>See register and login example.\r\n</li></ul>\n<p>Code format :</p>\r\n\r\n  npm run fix   npm run tslint\r\n<p>or use :\r\n</p>\r\n\r\n  tslint -c tslint.json 'src/**/*.ts' --fix   tslint -c tslint.json 'src/**/*.ts'\r\n<p>Abour visual tools</p>\n<p>Based on python3 tk tech.It is standalone git project imported like git submodule.\r\n</p>\n<p>https://github.com/zlatnaspirala/creator-2dmap\r\n</p>\n<p>Important - About tools setup\r\n</p>\n<p>After setup run python app from cli with command:\r\n</p>\r\n\r\n  npm run creator\r\n<p>\n<br/></p>\n<p>Public stage server / Tutorial demos</p>\n<p>ACTUALLY SERVER IS RUNNING - You need to register.\r\n</p>\n<p>Basic examples - How to create instance of engine. With minimum elements and features.</p>\n<ul><li><p>Static object vs Free</p>\n</li><li><p>Webcam stream loaded as player skin</p>\n</li></ul>\n<p>Platformer example without networking</p>\n<ul><li><p>Single player platformer</p>\n</li></ul>\n<p>Multiplayer - With Account session</p>\n<ul><li><p>Multiplayer platformer</p>\n</li></ul>\n<p>Multiplayer/webCam inside gamePlay - With Account session</p>\n<ul><li><p>Video chat platformer</p>\n</li></ul>\n<p>Licence</p>\n<p>Visual Typescript Game engine is under:\r\n</p>\n<p>MIT License generaly</p>\n<p>except ./src/lib. Folder lib is under:\r\n</p>\n<p>GNU LESSER GENERAL PUBLIC LICENSE Version 3</p>\n<p>External licence in this project:</p>\n<p>- Networking based on :<br/>Muaz Khan MIT License\u00a0www.WebRTC-Experiment.com/licence<br/>\n</p>\n<p>- Base physics beased on :<br/>Matter.js\u00a0https://github.com/liabru/matter-js<br/>\n</p>\n<p>Sprites downloaded from (freebies/no licence sites):\r\n</p>\n<ul><li>https://craftpix.net/\r\n</li><li>https://dumbmanex.com\r\n</li><li>https://opengameart.org/content/animated-flame-texture\r\n</li><li>https://www.gameart2d.com/\r\n</li><li>https://www.behance.net/JunikStudio\r\n</li></ul>\n<p>In Dreams by Scott Buckley |\u00a0www.scottbuckley.com.au\u00a0Music promoted by\u00a0https://www.chosic.com/free-music/all/\u00a0Attribution 4.0 International (CC BY 4.0)\u00a0https://creativecommons.org/licenses/by/4.0/<br/>\n</p>\n<p>Todo list for 2020</p>\n<p>I'am still far a away from project objective :\r\n</p>\n<ul><li>Make visual nodes for editor mode in game play.\r\n</li><li>Item's selling for crypto values.\r\n</li><li>Create examples demos in minimum 20 game play variants (table games, actions , platformers , basic demo trow the api doc etc.).\r\n</li><li>Implementing AR and webGL2.\r\n</li></ul>\n<p>Platformer single player solution</p>\n<p>version 0.3.4</p>\n<p>Published on apps facebook</p>\n<p>http://apps.facebook.com/nidzica\r\n</p>\n<p>\n</p>\n<p>Donate my work</p>", "metacritic": null, "released": "2022-12-23", "tba": false, "updated": "2022-12-26T11:00:44", "background_image": "https://media.rawg.io/media/screenshots/16c/16c825e7aba80b4b38fcb0c1d5099a12.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 58, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["Game developing"], "genres": ["Platformer"], "publishers": [], "esrb_rating": null}