{"id": 152183, "slug": "kingdom-of-spades", "name": "Kingdom of Spades", "name_original": "Kingdom of Spades", "description": "<p>A real-time strategy game prototype made in 3 days.</p>\n<p><strong>Instructions</strong></p>\n<p>Left click: selection - select/deselect an object</p>\n<p>Right click: command - send selected unit to given position, attack given enemy, build/repair a building or dig a hole</p>\n<p>Move mouse to the edge of a screen: scroll the viewpoint</p>\n<p>Goal:</p>\n<p>Dig a hole to find a hidden gem.<br/>Do not get killed by enemies crawling from the hole.</p>\n<p><strong>Theme</strong></p>\n<p>As always, our game sticks to the Running out of space theme only very loosely. Because starting with the exact official theme is too mainstream (and would probably lead to our game being very similar to many other games), we started elsewhere, working our way to the original theme. The phonetic similarity of Running out of space and Running out of spades led to an idea of digging a hole with spades/shovels, which break often, inspiring me to make a resource management real-time strategy. Additional idea bringing the game more to the official theme was to move the soil from the hole to other place(s) on the map, possibly causing troubles when walking around it. The theme has also projected into the Worker\u2019s inventory size, which is relatively small, requiring the Worker to do many trips when harvesting a material.</p>\n<p><strong>Development</strong></p>\n<p>Somebody once told me programming real-time strategy games is difficult. Well, I should have listened better. After spending actual (time-tracker-measured) 25 hours and 25 minutes programming and reaching just the state you can see, I can confirm it is true. The total length of the source code, consisting of 49 files (with Unity scripts, classes and enums), is 2140 lines.</p>\n<p><strong>Results</strong></p>\n<p>Although the game is not finished, we managed to create:</p>\n<p>- Solid code base for an RTS game:<br/>\u00a0 - hybrid hierarchical finite state machine-based behaviours combined with behaviour trees<br/>\u00a0 \u00a0 - walk, build, fight, harvest, ...<br/>\u00a0 \u00a0 - non-trivial behaviour combinations such as \"repeat: find nearest object of given type (e.g. a unit, a building or any more concrete type) belonging to given player, within a set diameter, go towards it, then keep attacking it, handling it running away\"...<br/>\u00a0 \u00a0 - due to the decomposition into a hierarchy of behaviour classes, each behaviour or combination of behaviours is relatively simple<br/>\u00a0 - object model of the \"game world\"<br/>\u00a0 \u00a0 - e.g. MonoBehaviour -&gt; MapObject -&gt; Unit -&gt; Worker or MonoBehaviour -&gt;MapObject -&gt; Building -&gt; FactoryBuilding -&gt; Center<br/>\u00a0 - GUI (status bar with selected object info, and object's inventory)<br/>\u00a0 - miscelaneous scripts and utilities<br/>\u00a0 \u00a0 - VisualSwitcher: a flexible script, switching on/off children GameObjects based on parent's health level, requiring no setup (only correct naming of the children)<br/>\u00a0 \u00a0 - PhotoShoot: a scene and a script for automatic (therefore deterministic/reproducible) batch generation of icons/sprites from 3D objects by automatically rendering them (on a GPU, using Unity) in a prepared environment, placing the results into the Assets folder<br/>\u00a0 \u00a0 - ...<br/>\u00a0 - (The code works almost without dirty programming hacks. I could say I am *almost* proud of it.)<br/>- Minimalist graphics:<br/>\u00a0 - 3D objects composed of a few geometric primitives.<br/>- and last but not least: Nice music with a classic AoE vibe.</p>\n<p><strong>Future work</strong></p>\n<p>- Commands bar (build a building, make a worker) is work in progress.<br/>\u00a0 - Debugging an issue with button-clicks not being registered took the most valuable time just before submission and it had to be disabled.<br/>- Handle object reaching 0 HP - block unit behaviour, disable commands.<br/>- Add more buildings (e.g. barracks) and units (e.g. soldiers).<br/>- Implement actually using (and using up) spades as a required tool when digging.<br/>- Implement moving of the dug-out soil elsewhere (do not let it just disappear).<br/>- Implement path finding and obstacle avoidance.<br/>- Implement enemy spawning and more high-level/global AI such as estimating player's units' strength and attacking only when we (enemy) are stronger.<br/>- Balance the gameplay difficulty (adjust maximum health of each object, spawn just-enough enemies to keep the player busy but not overwhelmed).<br/>- Make better visuals (especially the Worker).<br/>- Make SFX (tool-wood, tool-rock, tool-soil hits; click sounds, object selection noises and unit \"taunts\" when receiving commands; ...).<br/>- Add animations (walk, attack, idle, harvest tree, harvest iron, dig).<br/>- Add logo, menu, gameover/win screens, ..., level editor, multiplayer, battle-royale mode and become #1 game on all possible application stores\u00a0;-)</p>\n<p><strong>Credits</strong></p>\n<p>Music: cheeslo</p>\n<p>Everything else: M-1</p>\n\n<p><strong>Please let us know what you think - what you like or don\u2019t like about the game. Any feedback is welcome!</strong></p>", "metacritic": null, "released": "2018-08-14", "tba": false, "updated": "2019-01-09T12:41:06", "background_image": "https://media.rawg.io/media/screenshots/7e2/7e2805e069f19af9d9806aeadb62ad94.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 18, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC", "macOS", "Web"], "developers": ["M-1"], "genres": ["Strategy"], "publishers": [], "esrb_rating": null}