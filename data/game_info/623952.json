{"id": 623952, "slug": "sorrow-work-in-progress", "name": "SORROW (WORK-IN-PROGRESS)", "name_original": "SORROW (WORK-IN-PROGRESS)", "description": "<p>; ----------------------------------------------------------------------<br/>; SORROW - A work-in-progress game for the DOS Games Spring Jam 2021.<br/>; Programmed by MegaBrutal, 14 June 2021.<br/>;<br/>; In its current state, there is no valuable game content and goal,<br/>; and I ran into a technical problem regarding BIOS graphics routines,<br/>; which is an interesting lesson for life.<br/>;<br/>; The program comes with a small C utility (tga2bin.c) to convert TGA<br/>; images to a simple binary format which my assembly routine draws<br/>; to screen.<br/>;<br/>; Steps to build:<br/>;<br/>; 1. Compile tga2bin. (Should be ANSI C compliant, so it should compile<br/>;\u00a0\u00a0\u00a0 with any ANSI C compliant compiler for any platform, but I used<br/>;\u00a0\u00a0\u00a0 GCC.)<br/>;<br/>;\u00a0\u00a0\u00a0 gcc -Wpedantic -ansi -o tga2bin tga2bin.c<br/>;<br/>; 2. Convert player.tga to binary format.<br/>;<br/>;\u00a0\u00a0\u00a0 ./tga2bin player.tga player.bin<br/>;<br/>; 3. Compile SORROW.COM.<br/>;<br/>;\u00a0\u00a0\u00a0 nasm -o sorrow.com sorrow.asm<br/>;<br/>; The resulting SORROW.COM file is an actual DOS executable which may<br/>; be run with a DOS emulator or virtual machine.<br/>; ----------------------------------------------------------------------<br/></p>", "metacritic": null, "released": "2021-06-15", "tba": false, "updated": "2021-06-18T09:58:35", "background_image": "https://media.rawg.io/media/screenshots/49a/49acd453166eb417a40339d97018d9f8.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 4, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC", "macOS", "Linux"], "developers": ["MegaBrutal"], "genres": [], "publishers": [], "esrb_rating": null}