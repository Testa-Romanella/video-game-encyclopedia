{"id": 745083, "slug": "what-if-there-was-a-pixel", "name": "What If There Was a Pixel", "name_original": "What If There Was a Pixel", "description": "How to start the game:\r\n<p>To start the game, do any of the following:</p>\n<ul><li>click on a sample level image</li><li>open a level image file using the file selector input</li><li>drag a level image file from your filesystem to the input box</li><li>use your browser's paste command to paste a level image from your clipboard into the input box</li></ul>\n<p>If there is something wrong with the image or file, a message will appear in the input box.<br/></p>\r\nHow to play:\r\n<p>You control the white pixel.</p>\n<p>Press the left and right arrow keys to move. You can move up one-pixel steps without jumping, and you move down one-pixel steps immediately without leaving the ground.</p>\n<p>Press Z to jump. In a typical level, holding Z jumps higher than tapping it.</p>\n<p>Holding Z will also bounce you higher from a bounce pad.</p>\n<p>In areas with a cyan background, press Z repeatedly to swim upward.</p>\n<p>Press R to respawn if stuck.</p>\n<p>Press Q to quit the level.</p>\n<p>The object of a level is to touch all the yellow items.</p>\n\n<strong>How to make a new level (click to expand):</strong>\n<p>Levels are just PNG files, using specific pixel colors to place specific game objects.</p>\n<p>Right-click and save the first sample level (witwap_sample1.png), or download it with the source code zip. Use this as a reference for the pixel colors you can use and their effects.</p>\n<p>The level size must be at least 32x20 pixels, and no more than 1920x1080. The level must contain a white pixel for the player's start point. The file must be in PNG format.</p>\n<p>Only the first hex digit each of the red, green, and blue channels are considered. For instance, #FEFEFE and #F1F1F1 are both considered #FFF pixels. If the alpha channel is 0, the pixel is treated as empty regardless of the RGB channels.</p>\n<p>In many cases, a single connected object behaves differently from two separate objects. Pixels of the same color are connected if there's a path of that color between them. Diagonally touching pixels do count as connected.</p>\n<p>ESSENTIAL OBJECTS:</p>\n<p>* #FFF (white): This is the player start position. If you place more than one, only one is used. There must be one.</p>\n<p>* #FCF (pale magenta): This is a checkpoint. The player respawns from the last touched pixel on a checkpoint. Make sure the entire checkpoint is somewhere safe to respawn into! You don't necessarily have to place any checkpoints.</p>\n<p>* #FF0 (yellow): This is a goal item. If you don't place any, there won't be a way to complete the level.</p>\n<p>SOLID OBJECTS:</p>\n<p>* #050 (dark green): This is normal solid terrain that blocks the player and all movingobjects.</p>\n<p>* #850 (brown): This is solid for the player, but moving objects can move through it.</p>\n<p>* #8F0 (pale yellow-green): This is a bounce pad when the player is on top of it, and otherwise solid.</p>\n<p>* #0C0 (medium-light green): This is a vertically moving platform. It starts by moving up and turns around when it hits a solid. If it tries to push the player into solid space, the player will end up inside the platform instead, and will fall through if it's only 1 pixel thick.</p>\n<p>* #0CF (bluish cyan): This is a horizontally moving platform. It starts by moving right and turns around when it hits a solid. Like the vertical platform, it moves through the player instead of pushing the player into solid space.</p>\n<p>HAZARDS:</p>\n<p>* #F00 (red): This is a stationary hazard. Like all hazards, objects can move through it, and the player respawns on contact.</p>\n<p>* #C08 and #F08 (off-red): These are blinking hazards. They're safe to move through when they're dark. The difference between them is timing.</p>\n<p>* #F50 (orange), #F0F (magenta), #C0F (bluish magenta), and #F58 (off-magenta): These are moving hazards that start moving down, left, down+left, and up+left respectively. Like platforms, they turn around when they hit a wall.</p>\n<p>SPECIAL BACKGROUNDS:</p>\n<p>* #008 (dark blue): This is open space for the player, but solid for moving platforms and moving hazards.</p>\n<p>* #45F (off-cyan): This is open space where the player can swim instead of jumping.</p>\n<p>PHYSICS METADATA OBJECTS:</p>\n<p>* #CCC (light gray): The width and height of this object are used to determine gravity and jump velocity.\u00a0 The player's jump height matches the height of the object. The time to the peak of the jump matches the width of the object (when moving horizontally at full speed). Bouncing and swimming physics are changed proportionally. If you don't place one of this object, the game's default behavior is like it was 9 wide by 6 high. If you place more than one, only one is used (make sure it's fully connected to itself!)</p>\n<p>* #444 (dark gray): The height to width ratio of this object is used to determine the player's maximum falling speed. The fall speed matches the slope of the object's diagonal (when moving horizontally at full speed). If you don't place one, the default is like it was 2 wide by 3 high. If you place more than one, only one is used (make sure it's fully connected to itself!)</p>\n<p>Any pixel colors not mentioned above are treated as empty.</p>\n<p>This game is open source and incorporates other open-source code; see LICENSE.txt in the download package.<br/></p>", "metacritic": null, "released": "2022-02-21", "tba": false, "updated": "2022-02-25T11:15:51", "background_image": "https://media.rawg.io/media/screenshots/878/878cf53a1e3b0c87fcadb08656ea92c1.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 44, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["hyperpixel"], "genres": ["Platformer"], "publishers": [], "esrb_rating": null}