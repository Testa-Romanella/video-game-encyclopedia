{"id": 942727, "slug": "haze-itch-steampunkdemon", "name": "Haze (itch) (Steampunkdemon)", "name_original": "Haze (itch) (Steampunkdemon)", "description": "HAZE\r\n<p>Rumour has it that a treasure chest was hidden in an old hedge maze. Many have tried to find it but few have returned, and they only brought back a handfull of gems. They claimed that the maze faded in and out of existance and a ghost chased them relentlessly from dusk until dawn.</p>\n<p>Scoffing at their foolishness you decided to try your luck, but as soon as you entered the maze the exit door slammed shut behind you and locked! Was that a maniacal laugh you heard in the distance? Surely it must have just been the wind. No matter, you have no choice now but to venture further into the maze...</p>\n\r\nObjectives\r\n<p>You must collect 4 keys to unlock the exit. Pick-up the scattered gems as you go. If you find all 15 gems the treasure chest will appear somewhere in the maze.</p>\n\r\nControls\r\n<p>Movement -\u00a0 Cursor / WASD / IJKL keys or controller D-pad.</p>\n<p>Pause / Resume - P key or Xbox controller B button / Playstation controller Circle button.</p>\n\r\nBackground\r\n<p>HAZE is the result of my experiments with maze generation, field of view calculation and astar path finding in Godot. It was created in my spare time over the course of a week. I went with a very simple, stylised look reminisent of old Atari 2600 console games but the gameplay and storyline is somewhat based on the Amstrad CPC 464 title Sultan's Maze.<br/></p>\n<p>The mazes are generated using a version of the recursive backtracking algorithm where the ends of cul-de-sacs/dead ends are joined to a neighbouring cell before backtracking.</p>\n<p>I implimented the field of view and 'memory haze' by placing a second tile map on top of the one with the maze tiles. It uses a tile set of grey tiles that have opacity ranging from 0 to 100 percent to obscure parts of the maze.<br/></p>\n<p>The field of view calculation is very simple as the player can only look along single cell width corridors in each of the 4 cardinal directions. The code checks each direction until it reaches a hedge or the exit, increasing the opacity level each cell. The results of the field of view check are added to the haze tile map each time the player moves or after the haze has been faded one step towards 100 percent opacity, which happens at regular intervals.<br/></p>", "metacritic": null, "released": "2023-03-13", "tba": false, "updated": "2023-03-17T18:48:53", "background_image": "https://media.rawg.io/media/screenshots/ef2/ef25d41994c271898a76a0df41f2b62c.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 21, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["Steampunkdemon"], "genres": ["Action"], "publishers": [], "esrb_rating": null}