{"id": 760805, "slug": "maze-adventure-by-david-payne", "name": "Maze Adventure by David Payne", "name_original": "Maze Adventure by David Payne", "description": "<p>Maze Adventure</p>\n<p>Explore the maze, collect all of the keys and then get to the exit portal to progress to the next level.</p>\n\n<p>Keys:</p>\n<p>Cursor keys</p>\n\n<p>Note that there is a 15 second (approx.) delay at the start of the game and before each new level as the maze is being generated</p>\n<p>The maze generation algorithm used is a randomised depth first search (https://en.wikipedia.org/wiki/Maze_generation_algorithm#Randomized_depth-first_search)\u00a0variables used in main program (all variables are global apart from x and y which are local in PROCa):</p>\n<p>n and m - these values determine the size of the maze. m should be set to n*2+2</p>\n<p>for a 5 x 5 maze: n = 10, m = 22</p>\n<p>for a 4 x 4 maze: n = 8, m = 18</p>\n<p>for a 6 x 6 maze: n = 12, m = 26</p>\n<p>g - 2d array representing the maze. even rows/columns represent the cells (each room contains 2x2 cells). odd rows/columns represent the walls between cells</p>\n<p>w - level number (therefore also the number of keys in the current level)</p>\n<p>r - used to seed the pseudo random number generator</p>\n<p>a,b - loop counters. Later used for the left/right and up/down displacements of the cursor key pressed</p>\n<p>i,j,c - loop counters</p>\n<p>x,y (global variables) - x,y coordinates of cell that object is being put into</p>\n<p>k,l - x,y coordinates of current room within maze (in steps of 4, starting at 1)</p>\n<p>s,t - x,y coordinates of player within current room</p>\n<p>v - number of keys collected</p>\n<p>u - key pressed</p>\n<p>z - loop counter. Later what lies in the direction that the player has tried to go:</p>\n<p>0 - empty space</p>\n<p>1 - key</p>\n<p>2 - exit portal</p>\n<p>3 - wall</p>\n<p>variables used in PROCa:</p>\n<p>x,y (local variables) - x and y coordinates of current cell</p>\n<p>v - loop counter for the directions list</p>\n<p>z - used to choose a random direction. Later 0 if the adjacent cell has been visited, 1 if unvisited</p>\n<p>r - is the random direction chosen</p>\n<p>a,b - a is the left/right displacement of this direction, b is the up/down displacement</p>\n<p>Program explanation (referring to the expanded version)</p>\n<p>initialisation (set size of maze)</p>\n<p>100n=10</p>\n<p>101m=22</p>\n<p>dimension the array (all array elements are set to 0 initially)</p>\n<p>102DIMg(m,m)</p>\n<p>set level to 1</p>\n<p>103w=1</p>\n<p>main game loop</p>\n<p>104REPEAT</p>\n<p>seed the pseudorandom number generator</p>\n<p>105r=RND(-TIME)</p>\n<p>set all \"internal\" cells as unvisited (leaving a border of visited cells around them)</p>\n<p>106FORb=1TOm-1</p>\n<p>107FORa=1TOm-1</p>\n<p>108g(b,a)=1</p>\n<p>109NEXT,</p>\n<p>generate the maze (starting at the top left corner). PROCa also sets v (number of keys collected) to 0.</p>\n<p>110PROCa(2,2)</p>\n<p>111MODE4</p>\n<p>disable cursor</p>\n<p>112VDU23,1,0;0;0;0;</p>\n<p>put the objects into the cells (w keys and 1 exit portal)</p>\n<p>200FORi=0TOw</p>\n<p>choose a random cell, make sure that it is empty</p>\n<p>201REPEAT</p>\n<p>202x=RND(n)*2</p>\n<p>203y=RND(n)*2</p>\n<p>204UNTILg(y,x)=0</p>\n<p>put an object into that cell</p>\n<p>205g(y,x)=193-(i=0)</p>\n<p>206NEXT</p>\n<p>display the level number</p>\n<p>207PRINT;w</p>\n<p>display the top left \"door post\"</p>\n<p>208VDU9,227</p>\n<p>initialise the x and y coordinates of the room</p>\n<p>209k=1</p>\n<p>210l=1</p>\n<p>initialise the x and y coordinates of the player within the room</p>\n<p>211s=5</p>\n<p>212t=4</p>\n<p>disable the cursor keys for editing</p>\n<p>213*FX4,1</p>\n<p>A% is used by the &amp;FFF4 (OSBYTE) call later on</p>\n<p>300A%=135</p>\n<p>current level loop</p>\n<p>301REPEAT</p>\n<p>display/erase the objects in the cells in the current room</p>\n<p>302FORj=0TO1</p>\n<p>303FORi=0TO1</p>\n<p>304VDU31,18*i+10,14*j+8,g(l+j*2+1,k+i*2+1)+32</p>\n<p>305NEXT,</p>\n<p>display/erase the walls for the current room</p>\n<p>z is 0 for the horizontal walls and 1 for the vertical walls</p>\n<p>306FORz=0TO1</p>\n<p>307FORj=0TO2-z</p>\n<p>308FORi=0TOz+1</p>\n<p>400VDU31,i*18+2-z,j*14+z+1,17,g(l+j*2+z,k+i*2+1-z)</p>\n<p>401FORc=z*4TO16</p>\n<p>402VDU227,8,9+z</p>\n<p>403NEXT</p>\n<p>set colour back to white, display the \"door post\"</p>\n<p>404VDU17,1,227</p>\n<p>405NEXT,,</p>\n<p>current room loop</p>\n<p>406REPEAT</p>\n<p>display the player</p>\n<p>407VDU31,s,t,227</p>\n<p>valid move loop</p>\n<p>500REPEAT</p>\n<p>valid key press loop</p>\n<p>501REPEAT</p>\n<p>502u=GET-136</p>\n<p>503b=(u=3)-(u=2)</p>\n<p>504a=(u=0)-(u=1)</p>\n<p>505UNTILa+b</p>\n<p>check what lies in the direction that the player has tried to go</p>\n<p>506VDU31,s+a,t+b</p>\n<p>&amp;FFF4 (OSBYTE) call with A%=135 returns the character at the current cursor position</p>\n<p>507z=(USR(&amp;FFF4)AND768)/256</p>\n<p>0 - empty space</p>\n<p>1 - key</p>\n<p>2 - exit portal</p>\n<p>3 - wall</p>\n<p>exit loop when z = 0 OR z = 1 OR z = 2 AND all keys have been collected, otherwise can't go in that direction</p>\n<p>508UNTILz+(v=w)&lt;2</p>\n<p>erase the player</p>\n<p>600VDU31,s,t,32</p>\n<p>update player x and y coordinates</p>\n<p>601s=s+a</p>\n<p>602t=t+b</p>\n<p>if key collected then remove it from the cell, increment keys collected, beep, change palette to green if all keys have been collected, display keys collected</p>\n<p>603IFz=1THENg(l+t DIV7,k+s DIV9)=0:v=v+1:VDU7,19,1,7+(v=w)*5;0;31,38+(v&gt;9),0:PRINT;v</p>\n<p>exit loop when player has exited room or has reached exit portal</p>\n<p>700UNTILs=0ORs=38ORt=0ORt=30ORz=2</p>\n<p>if exited room from left/right enter new room from right/left</p>\n<p>701s=s-a*37</p>\n<p>if exited room from above/below enter new room from below/above</p>\n<p>702t=t-b*29</p>\n<p>update room coordinates</p>\n<p>703l=l+b*4</p>\n<p>704k=k+a*4</p>\n<p>exit loop if reached exit portal (level completed)</p>\n<p>705UNTILz=2</p>\n<p>increment level</p>\n<p>706w=w+1</p>\n<p>flash screen green/magenta</p>\n<p>707VDU19,1,10;0;</p>\n<p>play sound effect for end of level</p>\n<p>708GOSUB1000</p>\n<p>exit loop when final level has been completed (not enough cells to put all of the objects in next level)</p>\n<p>709UNTILw=n*n</p>\n<p>710END</p>\n<p>maze generation algorithm</p>\n<p>800DEFPROCa(x,y)</p>\n<p>set cell as visited</p>\n<p>801g(y,x)=0</p>\n<p>if PROCa has been called from the main program then define the graphics characters, set the beep to a higher pitch</p>\n<p>802IFr&lt;0THEN!&amp;C08=&amp;FD070000:!&amp;C0C=&amp;A7:!&amp;C10=&amp;A5BD81FF:!&amp;C14=&amp;FF81BDA5:!&amp;C18=-1:!&amp;C1C=-1:?&amp;265=200</p>\n<p>set the 4 directions to choose from</p>\n<p>1 - up</p>\n<p>3 - left</p>\n<p>5 - right</p>\n<p>7 - down</p>\n<p>900!&amp;70=&amp;7050301</p>\n<p>check the directions in a random order, looking for the 1st one where the cell in that direction is unvisited</p>\n<p>901v=4</p>\n<p>902REPEAT</p>\n<p>RND(12) is used because 12 is the LCM of 1, 2, 3 and 4</p>\n<p>903z=RND(12)MODv</p>\n<p>r is the direction chosen</p>\n<p>904r=z?&amp;70</p>\n<p>replace that direction in the list with the one at the end of the list</p>\n<p>905z?&amp;70=v?&amp;6F</p>\n<p>906b=r DIV3-1</p>\n<p>907a=r MOD3-1</p>\n<p>908z=g(y+b*2,x+a*2)</p>\n<p>lose the direction at the end of the list</p>\n<p>909v=v-1</p>\n<p>exit loop when the directions list is empty or when we've found a direction that we can go in</p>\n<p>910UNTILv=0ORz</p>\n<p>if we've found a valid direction then remove the wall through to that cell and generate more maze in that direction (i.e. recursive call to PROCa). When we come back, look for valid directions again.</p>\n<p>if there were no valid directions found then backtrack</p>\n<p>if called from GOSUB1000 then z will be 2 so play sound effect for end of level</p>\n<p>1000IFz=1THENg(y+b,x+a)=0:PROCa(x+a*2,y+b*2):GOTO900ELSEIFz=0THENENDPROC ELSEFORz=0TO255:SOUND1ANDz,-15,z,0:NEXT:RETURN</p>", "metacritic": null, "released": "2022-03-26", "tba": false, "updated": "2022-03-28T06:07:26", "background_image": "https://media.rawg.io/media/screenshots/161/161fe158c5410ff07a52c45c2e8b7189.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 3, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Adventure"], "publishers": [], "esrb_rating": null}