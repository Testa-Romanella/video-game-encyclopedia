{"id": 583245, "slug": "the-horde-ii-by-fabrizio-caruso", "name": "The Horde II by Fabrizio Caruso", "name_original": "The Horde II by Fabrizio Caruso", "description": "<p>THE HORDE II</p>\n<p>Goal:</p>\n<p>Defend the castle from the assualt of the horde.</p>\n<p>Try to reach the highest score and the highest level.</p>\n<p>Controls:\u00a0</p>\n<p>J (left), L (right), [space bar] fire.</p>\n\n<p>EXTENDED VERSION (CBM Prg Studio syntax)</p>\r\n\r\n0poke52,48:poke56,48:clr:k=1944:d=1104:w=53272:z=56334:y=12288:fast:bank14:fora=yto12752:pokea,peek(a+40960):next:bank15:reada$:dime(40)\r\n1t=54272:poke2604,peek(2604)and240or12:pokez,peek(z)and254:poke1,peek(1)and251:poke1,peek(1)or4:pokez,peek(z)or1:pokew,peek(w)and240or12\r\n2h=66:q=20:s=40:color.,1:color4,1:fori=.to87:m=asc(mid$(a$,i+1))-1:m=m-62*(m=s):poke12816+i,m:next:slow:print\"{light gray}{clear}{light green}the horde ii\":getkeyk$\r\n3z=80:e=1:m=0:v=15:b=32:g=68:fori=.to39:e(i)=d+i:pokek+t+i,2:pokek+s+t+i,9:pokek+s+i,76:poked+i,67:next:s$=\"{cyan}score{white}\":ifj&gt;rthenr=j\r\n4j=.:h$=\"{green} hi{white}\":gosub9:volv:data\"{25}{45}{75}{75}{172}{158}{09}{21}{25}{37}{25}{41}{154}{25}{37}{41}{09}{29}{09}{09}{09}{09}{09}{21}{25}{37}{67}{67}{190}{130}{01}{01}{1}{1}{1}{1}{25}{37}{25}{41}{154}{25}{37}{41}{1}{1}{1}{1}{25}{37}{154}{41}{25}{25}{37}{67}{25}{1}{154}{1}{25}{1}{37}{1}{1}{1}{1}{1}{1}{1}{25}{37}{25}{41}{154}{25}{37}{41}{1}{1}{52}{52}{128}{76}{128}{128}{41}{128}\"\r\n5f=rnd(.)*s:c=e(f):pokec,70:pokec+s,71:::pokec,74:pokec+s,75:ifj&gt;e*vthencolor4,3:sound3,y,2,.,.,.,2:e=e+1:color4,1:ife&lt;vthenm=m+s:gosub9\r\n6e(f)=c+s:i=e(f):pokei-s,b:pokei,67:getk$:n=(k$=\"j\")-(k$=\"l\"):ifnthenc=q+n:ifc&gt;=.thenifc&lt;sthenpokek+q,b:q=c:pokek+q,x\r\n7ifi&gt;=kthenprint\"{home}{down}{red}game over\":pokei,72:sleep2:getkeyk$:goto2:elseifk$=\" \"thenifx=hthenx=69:pokek+q,x:a=k+q-s:pokea,g:o=q:sound1,d,2,2,.,.,2,d\r\n8ifx&gt;hthenife(o)&gt;=athenpokee(o),72:pokee(o)+t,2:zz=tan(9.9):j=j+1:pokea,b:gosub9:goto5:elseifx&gt;hthenpokea,b:a=a-z:pokea,g:goto5:elsegoto5\r\n9pokee(o),73:print\"{home}\"spc(v)s$;j;h$;r\" {light green}lv{white}\"e:x=h:pokek+q,x:pokee(o),b:pokee(o)+t,v:e(o)=d+s+o+m:pokee(o),67:sound2,d,3,1,d,w,3,.:return\r\n<p>MAIN VARIABLES</p>\n<p>k: lower left-most player's position\u00a0</p>\n<p>q: player's offset position</p>\n<p>e: level</p>\n<p>m: (from line 3) spawned enemy start line offset</p>\n<p>g: arrow character</p>\n<p>f: zombie index</p>\n<p>e(f): f-th zombie offset position wrt to start line</p>\n<p>j: score</p>\n<p>r: high score</p>\n<p>k$: read key</p>\n<p>x: bow character (66 for loaded, 69 for unloaded)</p>\n<p>a: arrow offset position</p>\n<p>b: space character (32)</p>\n<p>h: loaded bow character (66)</p>\n<p>t: color ram offset wrt to screen ram</p>\n<p>s: number of characters in a line (40)</p>\n<p>EXPLAINED CODE</p>\n<p>0</p>\n<p>// Make some room to avoid collision with the BASIC code</p>\n<p>poke52,48:poke56,48:clr:\u00a0</p>\n<p>// Initialize</p>\n<p>k=1944:d=1104:w=53272:z=56334:y=12288:\u00a0</p>\n<p>// Fast mode, Read part of the rom set and store starting at 12288</p>\n<p>fast:bank14:fora=yto12752:pokea,peek(a+40960):next:bank15:reada$:dime(40)\u00a0</p>\n<p>1</p>\n<p>//\u00a0</p>\n<p>t=54272:poke2604,peek(2604)and240or12:pokez,peek(z)and254:poke1,peek(1)and251:poke1,peek(1)or4:pokez,peek(z)or1:pokew,peek(w)and240or12</p>\n<p>2</p>\n<p>// Initialize vars</p>\n<p>h=66:q=20:s=40:</p>\n<p>// Set screen colors to black</p>\n<p>color.,1:color4,1:</p>\n<p>// Read and set 11 user defined characters.</p>\n<p>// Remark: Special encoding:</p>\n<p>// 1. Add 1 to all values to avoid 0 (which would be an impossible character to edit)</p>\n<p>// 2. use 41 to encode 103 (which would be an impossible character to edit)</p>\n<p>fori=.to87:m=asc(mid$(a$,i+1))-1:m=m-62*(m=s):poke12816+i,m:next:</p>\n<p>// Set slow mode. Print game name and wait for a key press.</p>\n<p>slow:print\"{light gray}{clear}{light green}the horde ii\":getkeyk$</p>\n<p>3</p>\n<p>// Initialize vars</p>\n<p>z=80:e=1:m=0:v=15:b=32:g=68:</p>\n<p>// Display zombies on the second top line, display wall and set color for player area</p>\n<p>fori=.to39:e(i)=d+i:pokek+t+i,2:pokek+s+t+i,9:pokek+s+i,76:poked+i,67:next:</p>\n<p>// Initialize s$</p>\n<p>s$=\"{cyan}score{white}\":ifj&gt;rthenr=j</p>\n<p>4</p>\n<p>// Initialize variables</p>\n<p>j=.:h$=\"{green} hi{white}\":</p>\n<p>// Display score</p>\n<p>gosub9:</p>\n<p>// Set volume to max</p>\n<p>volv:</p>\n<p>// Graphics data encoded as \"encoded\" characters. The encoding makes sure that only editable characters are used.</p>\n<p>data\"{25}{45}{75}{75}{172}{158}{09}{21}{25}{37}{25}{41}{154}{25}{37}{41}{09}{29}{09}{09}{09}{09}{09}{21}{25}{37}{67}{67}{190}{130}{01}{01}{1}{1}{1}{1}{25}{37}{25}{41}{154}{25}{37}{41}{1}{1}{1}{1}{25}{37}{154}{41}{25}{25}{37}{67}{25}{1}{154}{1}{25}{1}{37}{1}{1}{1}{1}{1}{1}{1}{25}{37}{25}{41}{154}{25}{37}{41}{1}{1}{52}{52}{128}{76}{128}{128}{41}{128}\"</p>\n<p>5</p>\n<p>// Select a random zombie</p>\n<p>f=rnd(.)*s:c=e(f):</p>\n<p>// Display 1st and 2nd frame of a moving zombie\u00a0</p>\n<p>pokec,70:pokec+s,71:::pokec,74:pokec+s,75:</p>\n<p>// If new level is reached, then flash screen colors, make a high-pitched sound, increase level, if level is below 15, then lower the respawm zombie starting line</p>\n<p>ifj&gt;e*vthencolor4,3:sound3,y,2,.,.,.,2:e=e+1:color4,1:ife&lt;vthenm=m+s:gosub9</p>\n<p>6</p>\n<p>// The selected zombie is displayed at a below position</p>\n<p>e(f)=c+s:i=e(f):pokei-s,b:pokei,67:</p>\n<p>// Read keyboard. If key pressed is either J or L then compute new position. If new position is not outside the line, then update players position.</p>\n<p>getk$:n=(k$=\"j\")-(k$=\"l\"):ifnthenc=q+n:ifc&gt;=.thenifc&lt;sthenpokek+q,b:q=c:pokek+q,x</p>\n<p>7</p>\n<p>// If the zombie has reached the wall then print \"game over\", display happy zombie, wait 2 secs, wait for key press, jump to 2 (restart game)</p>\n<p>ifi&gt;=kthenprint\"{home}{down}{red}game over\":pokei,72:sleep2:getkeyk$:goto2:</p>\n<p>// Othewise check if key pressed is the space bar, if it is and if the bow is loaded with the arrow, than set a new arrow and produce a sound</p>\n<p>elseifk$=\" \"thenifx=hthenx=69:pokek+q,x:a=k+q-s:pokea,g:o=q:sound1,d,2,2,.,.,2,d</p>\n<p>8</p>\n<p>// [This part is tricky because of how the ELSE statement is interpreted in BASIC V7, i.e., no scope exists, everthing is interpreted from left to right so that if the IF condition is false, the program jumps to the next ELSE statement.]\u00a0</p>\n<p>// If the arrow is moving and it has reached a zombie then display dead zombie; short pause (use sin(9.9) for this); increase score;\u00a0</p>\n<p>// delete arrow and jump to routine at line 9; restart main game loop.</p>\n<p>// If the arrow is moving and it has not reached a zombie, then move arrow upwards. Restart main game loop.</p>\n<p>// If the arrow is not moving restart main game loop.</p>\n<p>ifx&gt;hthenife(o)&gt;=athenpokee(o),72:pokee(o)+t,2:zz=tan(9.9):j=j+1:pokea,b:gosub9:goto5:elseifx&gt;hthenpokea,b:a=a-80:poKa,g:gO5:elsegO5</p>\n<p>9</p>\n<p>// [Score update routine]</p>\n<p>// Display dead zombie</p>\n<p>pokee(o),73:</p>\n<p>// Display score line</p>\n<p>print\"{home}\"spc(v)s$;j;h$;r\" {light green}lv{white}\"e:</p>\n<p>// Reload bow</p>\n<p>x=h:pokek+q,x:</p>\n<p>// Display explosed zombie</p>\n<p>pokee(o),b:pokee(o)+t,v:</p>\n<p>// Reset zombie position</p>\n<p>e(o)=d+s+o+m:pokee(o),67:</p>\n<p>// Produce short noise sound</p>\n<p>sO2,d,3,1,d,w,3,.:return</p>", "metacritic": null, "released": "2021-04-08", "tba": false, "updated": "2021-04-12T22:11:26", "background_image": "https://media.rawg.io/media/screenshots/f06/f06ba658d8f346fb1fda8baf01c489bd.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 9, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Action"], "publishers": [], "esrb_rating": null}