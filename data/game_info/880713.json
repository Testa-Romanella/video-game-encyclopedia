{"id": 880713, "slug": "player-move-unity", "name": "player move unity", "name_original": "player move unity", "description": "<p>player script</p>\n<p>\u00a0 \u00a0 public float runspead=10;</p>\n<p>\u00a0 \u00a0 public float nespead=-5;</p>\n<p>\u00a0 \u00a0 public float spead=5;</p>\n<p>\u00a0 \u00a0 public Animator playerAN;</p>\n<p>\u00a0 \u00a0 private void Awake()</p>\n<p>\u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 playerAN = GetComponent<animator>();</animator></p>\n<p>\u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 void Update()</p>\n<p>\u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetKey(KeyCode.LeftShift))</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"isbackr\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 transform.position = transform.position + transform.forward * runspead * Time.deltaTime;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"iswalk\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0playerAN.SetBool(\"run\",true);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetKeyUp(KeyCode.LeftShift))</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"isbackr\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"iswalk\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"run\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetKey(KeyCode.W))</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"run\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"isbackr\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 transform.position = transform.position + transform.forward * spead * Time.deltaTime;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0playerAN.SetBool(\"iswalk\",true);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetKeyUp(KeyCode.W))</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"run\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"isbackr\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"iswalk\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetKey(KeyCode.S))</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 transform.position = transform.position + transform.forward * nespead * Time.deltaTime;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"isbackr\",true);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"run\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"iswalk\",false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetKeyUp(KeyCode.S))</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"isbackr\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"run\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 playerAN.SetBool(\"iswalk\", false);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 \u00a0\u00a0</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0\u00a0</p>\n<p>\u00a0 \u00a0 }</p>\n<p>camera move</p>\n<p>\u00a0float mouseX;</p>\n<p>\u00a0 \u00a0 float mouseY;</p>\n<p>\u00a0 \u00a0 SceneManager levels;</p>\n<p>\u00a0 \u00a0 public float sensitivity = 100f;</p>\n<p>\u00a0 \u00a0 public Transform player;</p>\n<p>\u00a0 \u00a0 float rotation = 0f;</p>\n<p>\u00a0 \u00a0 public float minAngle = -90f;</p>\n<p>\u00a0 \u00a0 public float maxAngle = 90f;</p>\n<p>\u00a0 \u00a0 // Start is called before the first frame update</p>\n<p>\u00a0 \u00a0 void Start()</p>\n<p>\u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 Cursor.visible = false;</p>\n<p>\u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 // Update is called once per frame</p>\n<p>\u00a0 \u00a0 void Update()</p>\n<p>\u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 mouseX = Input.GetAxis(\"Mouse X\") * sensitivity;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 mouseY = Input.GetAxis(\"Mouse Y\") * sensitivity;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 rotation -= mouseY;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 rotation = Mathf.Clamp(rotation, minAngle, maxAngle);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 transform.localRotation = Quaternion.Euler(rotation, 0, 0);</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 player.Rotate(Vector3.up * mouseX);</p>\n<p>\u00a0 \u00a0 \u00a0</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetKey(KeyCode.E))</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Cursor.visible = true;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetKey(KeyCode.Q))</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 {</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Cursor.visible = false;</p>\n<p>\u00a0 \u00a0 \u00a0 \u00a0 }</p>\n<p>\u00a0 \u00a0 }</p>", "metacritic": null, "released": "2022-11-11", "tba": false, "updated": "2022-11-14T12:21:45", "background_image": "https://media.rawg.io/media/screenshots/684/684485165a743fefcff5e45b3850349a.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 39, "game_series_count": 0, "reviews_count": 0, "platforms": ["Android", "Linux", "macOS", "PC"], "developers": ["Tomyousef"], "genres": [], "publishers": [], "esrb_rating": null}