{"id": 161218, "slug": "dementors-lament", "name": "Dementor's Lament", "name_original": "Dementor's Lament", "description": "Dementor's Lament\r\n\n<p>Dementor's Lament is a game made by Rage Tank Games for the 25th quarterly gm48 game jam.</p>\n<p>In Dementor's Lament, play as the sorcerer, Gif, who has been trapped deep within a terrible cavern full of ghosts and traps. Solve puzzles as you attempt to escape the dungeon using the only spell you know!<br/><br/></p>\r\nControls:\r\n<p>Movement: Left/Right Keys<br/>Jump: Space Bar<br/>Cast Spell: \"Z\" Key<br/><br/>You can also cast upwards if you hold the Up Key while casting!</p>\r\nWhat I Learned:\r\n<p>Because DilapidatedMeow's \"Learn Something New\" jam and gm48 both started at roughly the same time, and because the work put into the original gm48 version inspired me to continue working on \"Dementor's\u00a0Lament\" beyond what we created within the alotted 48 hours, I\u00a0decided to learn how to and therefore implement a music and sound option menu and appropriate music/sound player object into the game.</p>\n<p>Originally, all sounds were held within the default audio group in GM:S, which would have required that each sound have their volume adjusted individually. The first thing implemented was a new audio group to separate music and sfx, allowing for a simpler and faster method of reducing music group and sfx group volumes independently of each other while. Ended up being a lot simpler than I expected, but still required various functions I was not familiar with.<br/></p>\n<p>Another issue arose after attempting to run as an html5 game. GM:S is known for having issues when it comes to html5 and how GML is handled in that format. Because of that, the system used for sound management in Windows would not work in html5, and I ended up having to create a new system\u00a0(not a more complicated one, though certainly a bit longer in code), which basically does what I mentioned above, and manipulates volume on each sound in the game individually.<br/></p>\n<p>This ended up being annoying, but ultimately a very good thing to have happen, as I ended up learning how to implement a system that would check to see if the game was being run in-browser\u00a0(html5) or not. This wasn't completely necessary, but I threw it in anyway to see if I had a grasp on how various OS type functions and variables work.</p>\n<p>Lastly came implementing a pause menu with these volume options. A pause feature was already put into the game for the gm48 version, but all it did was deactivate everything. Now, the same is done with the added benefit of a UI declaring the game is paused and allowing the player to adjust music and sfx volume. This was my first attempt at making a functioning UI outside of a basic \"start\" button, so it isn't necessarily pretty, but it works, and I'm happy with that for now.<br/><br/></p>\n<p>Was definitely a good learning experience. I think the extra things I learned along the way will end up becoming invaluable development tools in the future!</p>Credits:<p>Kilven Deneras - Programming; SFX; Writing</p><p>DillonSemaj - Art Design; Music; Writing</p>", "metacritic": null, "released": "2018-01-18", "tba": false, "updated": "2019-08-28T23:21:48", "background_image": "https://media.rawg.io/media/screenshots/420/42039c879666809bdda4024bcae80fca.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 43, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["KilvenDeneras"], "genres": ["Puzzle", "Platformer"], "publishers": [], "esrb_rating": null}