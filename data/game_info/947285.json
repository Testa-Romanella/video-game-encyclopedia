{"id": 947285, "slug": "mini-mars-plus-c16-by-giuseppe-mignona", "name": "Mini Mars Plus (C16) by Giuseppe Mignona", "name_original": "Mini Mars Plus (C16) by Giuseppe Mignona", "description": "<p>===================================</p>\n<p>\u00a0 \u00a0 \u00a0M I N I\u00a0 M A R S\u00a0 P L U S\u00a0 \u00a0 \u00a0\u00a0</p>\n<p>===================================</p>\n<p>\u00a0 \u00a0Title: Mini Mars Plus</p>\n<p>Platform: Commodore Plus/4</p>\n<p>\u00a0 Author: Giuseppe Mignogna</p>\n<p>Language: BASIC 3.5</p>\n<p>Category: PUR-120</p>\n<p>===================================</p>\n<p>Intro</p>\n<p>-------------------</p>\n<p>This game has been written using CBM prg Studio 3.13. It has been tested with the emulators Yape 1.2.1 and Plus4emu 1.2.9.2. Vice should be OK too, but I didn't try it. The original .prg file has been compiled using Austrospeed for PLus4. Source and compiler are available in the folder \"source\".</p>\n<p>How to run</p>\n<p>-------------------</p>\n<p>To run it, simply drag and drop the .d64 file into Yape -OR- attach it to drive 8, type DLOAD\"MMP\" and then type RUN.\u00a0</p>\n<p>How to play</p>\n<p>-------------------</p>\n<p>To play, use a joystick in port 2 (left, right and fire). The goal of the game is to smoothly land the spacecraft on the ground base. Values of Angle of inclination (A), Vertical velocity (V) and Angular Velocity (VA) must be kept as lower as possible and will be shown if you crash.</p>\n<p>Code</p>\n<p>-------------------</p>\n<p>========================================</p>\n<p>COMPRESSED CODE MAX 120 CHARS PER LINE</p>\n<p>========================================</p>\r\n\r\n1colO0,1:colO1,6:colO4,1:sC:chA1,0,0,\"minimars+ by giuseppe mignogna 2023     use joy 2 - wait...\":dIc(1,200)\r\n2vO8:fOy=0to99:r=6.22*y/99:c(1,y)=sI(r)*6:c(1,y+100)=c(1,y):c(0,y)=cos(r)*6:c(0,y+100)=c(0,y):chA1,19,1,stR(y):nE\r\n3colO1,3,5:gR1,1:x=160:y=50:vx=0:vy=0:a=0:d=0:q=0:w=0:e=0:j=0:b=rN(0)*280:bO1,b,190,b+40,199:dR1,0,190to319,190:colO1,2\r\n4j=jO(2):ifj&gt;127tHvx=vx+c(1,a)/10:vy=vy-c(0,a)/10::k=rN(0)*0.5+1.5:j=j-128:sO3,0,0:sO3,550,10\r\n5q=x:w=y:e=a:ifj=3tHd=d+0.5:sO3,0,0:sO3,750,5:eLifj=7tHd=d-0.5:sO3,0,0:sO3,750,5\r\n6cI0,q,w,3,6,,,e*3.63,120:f=e+50:dR0,q+c(1,f),w-c(0,f)toq+c(1,f)*u,w-c(0,f)*u:a=a+d:ifa&gt;99tHa=0:eLifa&lt;0tHa=99\r\n7x=x+vx:y=y+vy:vy=vy+0.1:cI1,x,y,3,6,,,a*3.63,120:ifk&lt;&gt;0tHf=a+50:dR1,x+c(1,f),y-c(0,f)tox+c(1,f)*k,y-c(0,f)*k:u=k:k=0\r\n8ifx&lt;-10orx&gt;330ory&lt;-10tHsO3,300,100:chA1,0,0,\"ouch! a:\"+stR(a)+\" v:\"+stR(vy)+\" va:\"+stR(d):sO3,100,50:gO3:eLify&gt;184tH10\r\n9gO4\r\n10ifx&gt;baNx&lt;b+40aN(a&lt;4ora&gt;95)aNvy&lt;2aNaB(d)&lt;2tHchA1,0,0,\"well done!\":sO1,400,10:sO1,600,40:gO3:eLx=-20:gO8\r\n<p>========================================</p>\n<p>UNCOMPRESSED CODE</p>\n<p>========================================</p>\r\n\r\n1color0,1:color1,6:color4,1:scnclr:char1,0,0,\"minimars+ by giuseppe mignogna 2023     use joy 2 - wait...\":dimc(1,200)\r\n2vol8:fory=0to99:r=6.22*y/99:c(1,y)=sin(r)*6:c(1,y+100)=c(1,y):c(0,y)=cos(r)*6:c(0,y+100)=c(0,y):char1,19,1,str$(y):next\r\n3color1,3,5:graphic1,1:x=160:y=50:vx=0:vy=0:a=0:d=0:q=0:w=0:e=0:j=0:b=rnd(0)*280:box1,b,190,b+40,199:draw1,0,190to319,190:color1,2\r\n4j=joy(2):ifj&gt;127thenvx=vx+c(1,a)/10:vy=vy-c(0,a)/10::k=rnd(0)*0.5+1.5:j=j-128:sound3,0,0:sound3,550,10\r\n5q=x:w=y:e=a:ifj=3thend=d+0.5:sound3,0,0:sound3,750,5:elseifj=7thend=d-0.5:sound3,0,0:sound3,750,5\r\n6circle0,q,w,3,6,,,e*3.63,120:f=e+50:draw0,q+c(1,f),w-c(0,f)toq+c(1,f)*u,w-c(0,f)*u:a=a+d:ifa&gt;99thena=0:elseifa&lt;0thena=99\r\n7x=x+vx:y=y+vy:vy=vy+0.1:circle1,x,y,3,6,,,a*3.63,120:ifk&lt;&gt;0thenf=a+50:draw1,x+c(1,f),y-c(0,f)tox+c(1,f)*k,y-c(0,f)*k:u=k:k=0\r\n8ifx&lt;-10orx&gt;330ory&lt;-10thensound3,300,100:char1,0,0,\"ouch! a:\"+str$(a)+\" v:\"+str$(vy)+\" va:\"+str$(d):sound3,100,50:goto3:elseify&gt;184then10\r\n9goto4\r\n10ifx&gt;bandx&lt;b+40and(a&lt;4ora&gt;95)andvy&lt;2andabs(d)&lt;2thenchar1,0,0,\"well done!\":sound1,400,10:sound1,600,40:goto3:elsex=-20:goto8\r\n<p>Code explanation</p>\n<p>-------------------</p>\n<p>Line\u00a0 1: sets colors; prints a message; initializes the array c</p>\n<p>Line\u00a0 2: precalculates valus for sin and cosin (100 values)</p>\n<p>Line\u00a0 3: opens the graphic screen; sets some variables; draws the ground and the base at a random position</p>\n<p>Line\u00a0 4: checks if fire has been pressed and increases the velocity value; var. k keeps the lenght of rocket fire</p>\n<p>Line\u00a0 5: stores spacecraft old position; checks if left or right joy has been pressed and increaes or decreases angular velocity</p>\n<p>Line\u00a0 6: deletes old spacecraft and rocket fire; updates angular inclination</p>\n<p>Line\u00a0 7: updates spacecraft position; draws spacecraft and rocket fire at new position</p>\n<p>Line\u00a0 8: checks if the spacecraft is going to outer space</p>\n<p>Line\u00a0 9: go back to line 4</p>\n<p>Line 10: checks if the spacecraft succesfully landed or crashed</p>\n<p>-end-</p>", "metacritic": null, "released": "2023-03-25", "tba": false, "updated": "2023-03-27T09:30:29", "background_image": "https://media.rawg.io/media/screenshots/a33/a33403ffd6a6b8fd705c0b355d125158.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 10, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Action"], "publishers": [], "esrb_rating": null}