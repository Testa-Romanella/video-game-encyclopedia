{"id": 705714, "slug": "project-snake-gamepad-edition", "name": "Project Snake - Gamepad Edition", "name_original": "Project Snake - Gamepad Edition", "description": "<p>Projeto do jogo Snake com suporte de controle. Projeto base encontrado em\u00a0link.</p>\n<p>Refer\u00eancia utilizada para configurar o controle.</p>\r\n\u00a0 \u00a0 //Qualquer c\u00f3digo dentro do Update \u00e9 executado a quantidade m\u00e1xima de frames por segundo na qual a m\u00e1quina do jogador conseguir executar.\r\n\u00a0 \u00a0 private void Update()\r\n\u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 //Caso a dire\u00e7\u00e3o do eixo x for diferente de 0, o jogador consegue mover-se no eixo x, de acordo com o seu controle de prefer\u00eancia.\r\n\u00a0 \u00a0 \u00a0 \u00a0 if (this.direction.x != 0f)\r\n\u00a0 \u00a0 \u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //Caso o valor no input seja menor que -0.95 no eixo y do gamepad, o jogador move-se para cima.\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetAxis(\"VerticalGamepad\") &lt; -0.95)\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 this.direction = Vector2.up;\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //Entretanto, caso o valor no input seja maior que .95 no eixo y do gamepad, o jogador move-se para baixo.\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 else if (Input.GetAxis(\"VerticalGamepad\") &gt; 0.95)\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 this.direction = Vector2.down;\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //Caso o jogador aperte os bot\u00f5es W, a seta para cima no teclado ou o bot\u00e3o de cima do controle o jogador move-se para cima.\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetKeyDown(KeyCode.W) || Input.GetKeyDown(KeyCode.UpArrow) || Input.GetButtonDown(\"AlternativeUp\"))\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 this.direction = Vector2.up;\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //Entretanto, caso o jogador aperte os bot\u00f5es S, a seta para baixo no teclado ou o bot\u00e3o de baixo do controle o jogador move-se para baixo.\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 else if (Input.GetKeyDown(KeyCode.S) || Input.GetKeyDown(KeyCode.DownArrow) || Input.GetButtonDown(\"AlternativeDown\"))\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 this.direction = Vector2.down;\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 \u00a0 \u00a0 //Entretanto, caso a dire\u00e7\u00e3o do eixo x n\u00e3o for diferente de 0 e a dire\u00e7\u00e3o do eixo y for, o jogador consegue mover-se no eixo y, de acordo com o seu controle de prefer\u00eancia.\r\n\u00a0 \u00a0 \u00a0 \u00a0 else if (this.direction.y != 0f)\r\n\u00a0 \u00a0 \u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //Caso o valor no input seja menor que -0.95 no eixo x do gamepad, o jogador move-se para a esquerda.\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetAxis(\"HorizontalGamepad\") &lt; -0.95)\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 this.direction = Vector2.left;\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //Entretanto, caso o valor no input seja maior que .95 no eixo x do gamepad, o jogador move-se para a direita.\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 else if (Input.GetAxis(\"HorizontalGamepad\") &gt; 0.95)\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 this.direction = Vector2.right;\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //Caso o jogador aperte os bot\u00f5es D, a seta direita no teclado ou o bot\u00e3o da direita do controle o jogador move-se para a direita.\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (Input.GetKeyDown(KeyCode.D) || Input.GetKeyDown(KeyCode.RightArrow) || Input.GetButtonDown(\"AlternativeRight\"))\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 this.direction = Vector2.right;\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //Entretanto, caso o jogador aperte os bot\u00f5es A, a seta esquerda no teclado ou o bot\u00e3o da esquerda do controle o jogador move-se para a esquerda.\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 else if (Input.GetKeyDown(KeyCode.A) || Input.GetKeyDown(KeyCode.LeftArrow) || Input.GetButtonDown(\"AlternativeLeft\"))\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 this.direction = Vector2.left;\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 }", "metacritic": null, "released": "2021-12-03", "tba": false, "updated": "2021-12-10T12:44:39", "background_image": "https://media.rawg.io/media/screenshots/e3d/e3dc8368d93437b56fac8d51a80f2799.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 8, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["Jooper8"], "genres": ["Action"], "publishers": [], "esrb_rating": null}