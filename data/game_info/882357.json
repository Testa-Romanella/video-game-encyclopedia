{"id": 882357, "slug": "dance-floor-ar-dj", "name": "Dance Floor AR-DJ", "name_original": "Dance Floor AR-DJ", "description": "<p>This app was created for the Niantic November 2022 Mini-Jam with the theme \"People.\" I was excited to work on this particular theme because \"people\" is something I think a lot about when developing for AR.\u00a0\u00a0</p>\n<p>One current challenge of AR is that it is necessarily a somewhat isolating experience. It is an experience between the user and their device. Even when you have a shared AR session, it's still private among those people, and those people are still interacting with their devices primarily and not each other.\u00a0</p>\n<p>How can we remove the wall of the physical device and create engaging AR experiences for groups of people? How can we encourage group play in the built environment?\u00a0How can we create a spectacle?\u00a0</p>\n<p>I explored a handful of approaches and settled on - instead of each person having one device - we will have one giant device for all the people to look at together. Plug an AR capable device into a TV or projector and you have a gigantic AR capable device!\u00a0</p>\n<p>What I love about this approach is that it can draw anyone in. There is no app to install or technology to understand. It is a completely discoverable experience and since the full track can't be heard without at least 3 people, others are naturally encouraged and rewarded for jumping in.\u00a0</p>\n<p>In order to accomplish this I\u00a0needed to explore an unconventional approach to the ARDK tools. The ARDK is designed to be used on a device that is in someone's hand and is in motion. What are the implications of placing the device on a tripod in a fixed position? How do the various capabilities of the ARDK\u00a0change and behave in this scenario? Read on for the technical nitty gritty.</p>\n<p>But first...\u00a0</p>\r\nInstructions For Setup\r\n<p>Tools needed:\u00a0</p>\n<ul><li>An iPhone or iPad running DanceFloorDJ (This app was built and tested with an iPhone 13 Pro.)</li><li>A tripod or stable surface on which to put iDevice</li><li>An HDMI adapter</li><li>Some kind of display or projector</li><li>A dance floor with ~4m of depth\u00a0</li><li>A bangin sound system</li></ul>\n<p>Set up the camera in a stationary location\u00a0facing the dance floor. Leave ~1m of space between the camera and the very front of the dance floor. The device should be in landscape and ~5' off the ground but feel free to play around.\u00a0</p>\n<p>Set up the display or projector to display behind the camera. Set the display to flip horizontally to create a magic mirror effect.\u00a0</p>\n<p>Before plugging in the display, start the app and check that no samples are playing. If samples are playing make sure the dance floor is clear all the way to the back. The app scans a line across the horizon line to detect depths, so the horizon specifically should be clear to ~4m.\u00a0</p>\n<p>When everything is working and set up plug in your display and sound system and get some people on the Dance Floor!\u00a0</p>\r\nTechnical Info\u00a0\r\n<p>This app makes use of the ARDK's depth manager. A row of depth probes are sent out in a horizontal row across the middle of the screen. Think of shooting 50 lasers out of the front of the phone. Wherever each laser hits, a tiny 3D sphere is placed.\u00a0</p>\n<p>The dance floor is then made of of several invisible\u00a03D\u00a0boxes, each assigned to muting or unmuting a given looping sample. If one of the depth probe spheres ends up within one of those 3d boxes (because someone is standing there), the box is triggered.\u00a0\u00a0</p>\n<p>I initially started with a more complicated design in mind with the camera up high and facing down, but this presented some problems and made for less interactive output. For the purposes of the jam I decided to keep it simple and go head on.\u00a0</p>\n\n<p>The collision boxes above correspond to different loops. The center track has overlapping drums that can go together while the other two instruments are separated.\u00a0\u00a0</p>\r\nGet The Game<p>Join the beta on testflight:\u00a0https://testflight.apple.com/join/Y5Ddl7IC\u00a0</p>Credits\r\n<p>Engineering by Sam Garfield</p>\n<p>Music by Daniel Foster Smith</p>\n<p>Merry Thieves, BLLC</p>", "metacritic": null, "released": "2022-11-15", "tba": false, "updated": "2022-11-18T17:10:26", "background_image": "https://media.rawg.io/media/screenshots/148/148eb9940dda3c779f43f7e095120fc4.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 89, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["SamG"], "genres": [], "publishers": [], "esrb_rating": null}