{"id": 304413, "slug": "mean-beans", "name": "Mean Beans (itch)", "name_original": "Mean Beans (itch)", "description": "<p>Mean Beans is an arcade style first person shooter/platform jumper. <br/></p>\n<p>(30 minute demo)<br/></p><p>================</p>\n<p>You are in low gravity and you are wearing a thruster suit that gives you the ability to maneuver while jumping through the air. You cannot die.</p>\n<p>Your mission is to collect all the gems.</p>\n<p>But the gems belong to the Beans. If you take them, the Beans will come after you to get them back. A Bean gets it's gem back if it gets to you. So you must kill the Bean to keep the gem.</p>\n<p>You have unlimited ammo and no restrictions on how often you can shoot. The ammo lays around for 30 seconds before self-destructing. Rapid-Fire bullets self-destruct after 3 seconds.</p>\n<p>The dark transparent platforms are one in which you have gotten the gem, but have not killed its Bean yet.\u00a0 The light transparent platforms indicate that you have took the gem and killed it's Bean. Those are gems you own.</p>\n<p>==============</p>\n<p>The Beans have friends. They are the Shings. The Shings wander around the world. The Shings can only see in the dark.\u00a0 As long as the lights are on, they will just wander around ignoring you.</p>\n<p>The lights go off anytime you touch the ground. But, you are equipped with a flashlight you found in a junk drawer.\u00a0 The flashlight turns on a couple seconds after you touch the ground.</p>\n<p>If the lights go out, the Shings start attacking you. And they will stay on the ground as long as you stay on the ground. If they get you, then all the Beans get their gems back and the 'level' resets to where it started.\u00a0 Stay off the ground.</p>\n<p>The Shings don't die.\u00a0 And they don't like being shot.\u00a0 If you shoot one or leave ammo laying around and they hit it, they will attack you much harder and will attack you regardless if the lights are on or off.</p>\n<p>There are 100 of them.\u00a0 So stay off the ground.<br/></p>\n<p>For some strange reason, both the Beans and the Shings get spooked when you jump from the ground. When you jump from the ground, they do too. It can help you to escape them. Sometimes.</p>\n<p>Although the thruster suit gives you the ability to maneuver in the air, it weighs a lot. So when you are on the ground, you can feel that you are lugging it around. Stay off the ground.<br/></p>\n<p>You have an overhead fish-eye camera that helps you see if the Shings are close to you.<br/></p>\n<p>=============</p>\n<p>The only way to turn the lights back on is to step on one of the jump platforms scattered around the ground. When you step on one, the lights go back on and the Shings stop attacking you (the Beans never stop attacking you). And cause you jumped, so did the Beans and Shings.</p>\n<p>=========</p>\n<p>There are no 'levels'.</p>\n<p>Whenever you clear all the gems, the platforms lock their progress right there as the beginning of your next 'level'. That is now where the platforms will reset if you get bit by a Shing.</p>\n<p>You can complete the 'levels' strictly by shooting everything, but you only score points by jumping on or landing on a platform or gem. You get one point for each platform or gem you land on. If a Bean hits you, you lose a point and the Bean gets it's gem back.</p>\n<p>=============</p>\n<p>It's a low gravity jumper, so you don't fall very fast. It could use some tuning, but for now I'm gonna leave it cause it takes quite awhile to adjust a realistic balance between all the forces. It is at least playable at this point. The way you jump and float is reminiscent of the Commander Keen 2D jumpers. Which was fun cause it did have quite a bit of float. So does Mean Beans.</p>\n<p>You have quite a bit of control while in the air. On purpose. It makes a first person platform jumper much more controllable. Which winds up being funner.</p>\n<p>===========</p>\n<p>The keys are wasd and the arrow keys and are integrated into unity's input system. So you can change most of them from the game start dialog.</p>\n<p>Additional keys are..</p>\n<p>\"x\" : 'DROP DOWN' key. It would be your 'crouch' key in your favorite first person shooter. It slams you to the ground just like Iron Man. And you survive just like Iron Man.</p>\n<p>\"v\" : It's a zoom I threw in there for a reason that is not needed anymore. I left it in.</p>\n<p>CTRL : Shoot</p>\n<p>ALT : Nade</p>\n<p>SHIFT : For toggling between 'shooting' and 'throwing'. It lets you select between firing ammo or tossing it.</p>\n<p>\"c\" : Rapid-Fire machine-gun firing speed.</p>\n<p>\"e\" : Switch secondary weapon up<br/>\"r\" : Switch secondary weapon down<br/>Mouse scroll up : Switch secondary weapon up<br/>Mouse scroll down : Switch secondary weapon down<br/>(At present time,\u00a0 only the nade (weapon 1) actively works)</p>\n<p>ESC : Return to main menu</p>\n<p>The game is still in development and still has a number of issues. Because of this, I have included a bunch of developer keys that allow you to mess with some of the game dynamics. These keys will not be included in the final version. Many of these keys will mess up your current game. If that happens you will need to restart the game to get everything back in sync.</p>\n<p>There are no levels because I have yet to write a game manager for it. So the platforms just keep adjusting their speed over time in an effort to\u00a0simulate a harder and harder platform pattern as time goes on. It's a kludge.<br/></p>\n<p>The next step in development is to finalize the sounds and tune some play-ability issues before publishing it as Released.</p>\n<p>I tuned it best I could, but the WebGL version does not run as fast and smooth as the PC version.\u00a0<br/></p>\n<p>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p>\n<p>The developer keys are....</p>\n<p>\u00a0 ... else if (Input.GetKeyDown(\"g\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 playerCollider.attachedRigidbody.useGravity = true;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"h\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 playerCollider.attachedRigidbody.useGravity = false;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"1\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.syncronizefloors = 0;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"2\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.syncronizefloors = 1;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"3\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.syncronizefloors = 2;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"u\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamepattern++;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"i\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamepattern += 0.001f;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"o\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamepattern--;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"p\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamepattern -= 0.001f;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"l\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamepattern = 0;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"j\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamepattern += g.gamepattern;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"k\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamepattern -= g.gamepattern;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0 \u00a0</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"4\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Time.timeScale = 1f;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"5\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Time.timeScale = 0.1f;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"6\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Time.timeScale = 0f;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"7\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.xyON ^= true;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (g.xyON) g.platformspeed /= 16; else g.platformspeed = 0.1f;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"n\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamepattern += 0.0174533f / 10;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamelevel++;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.debuglog = g.gamelevel.ToString();<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //g.gamepattern += 175.8081f;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 else if (Input.GetKeyDown(\"m\"))<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 {<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamepattern -= 0.0174533f / 10;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.gamelevel--;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 g.debuglog = g.gamelevel.ToString();<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //g.gamepattern -= 175.8081f;<br/>\u00a0\u00a0\u00a0\u00a0\u00a0 }<br/></p>", "metacritic": null, "released": "2019-03-28", "tba": false, "updated": "2019-03-29T03:26:58", "background_image": "https://media.rawg.io/media/screenshots/36c/36c46c62a668fce3d9b72acae46ba9a9.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 154, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC", "Linux", "Web"], "developers": ["JRhea"], "genres": ["Platformer"], "publishers": [], "esrb_rating": null}