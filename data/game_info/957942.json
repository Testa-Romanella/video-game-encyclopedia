{"id": 957942, "slug": "qlearning", "name": "QLearning", "name_original": "QLearning", "description": "<p>Type of Q-Learning Model: Table-Based\u00a0</p>\n<p>Left Side: ML-Agents\r\n</p>\n<p>Right Side: Q-Learning\u00a0\r\n</p>\n<p>Black Arrow Agent:\tThe agent is being moved by ML-Agents and Q-Learning. It will succeed if it reaches the white triangle goal and fails if it touches a wall. Upon success or failure, the black arrow agent and white triangle goal will respawn at a new point within the bounds.\r\n</p>\n<p>White Triangle Goal:\tThe goal to reach. It will move to a random point in the box if the black arrow agent touches a wall, reaches the goal, or runs out of time. If in map 2 and the white triangle touches a wall, it will spawn in a random place within the bounds.\u00a0\r\n</p>\n<p>Pink Square:\tIf in map 2, the red square moves to a random point on a circle offset from the goal. The goal will move towards this square, giving it random movement.\u00a0\r\n</p>\n<p>Blue Oval: \tIf in map 2 and the white goal triangle detects a wall, it will move toward the blue oval instead of the red square to avoid a collision with the wall.\u00a0\r\n</p>\n<p>Distance State:\tThe state is determined by the distance the target is away from the agent, rounded to the nearest integer. There are 11 total states 0,1,2,3,4,5,6,7,8.9.10. For example, if the agent is 3.4 units away from its target, it will be at state 3.\r\n</p>\n<p>Direction State:\tThe state is determined by the direction of the target from the agent. There are 8 states: Up, Down, Left, Right, Up Left, Up Right, Down Left, Down Right. For example, if the goal is to the right of the agent, the state will be Right.\u00a0\r\n</p>\n<p>Actions:\tThere are 8 actions: Move Up, Move Down, Move Left, Move Right, Move Up Left, Move Up Right, Move Down Left, Move Down Right. The agent will move in the specified direction.\u00a0\r\n</p>\n<p>Map Rules:\tEach map is bordered with a box and has a white triangle as the goal. Passing or failing results in the episode ending and the position of the agent and target being randomized. On a pass, the background will turn green, while on a fail, the background will become red.\r\n</p>\n<p>Map 1:\t\tOn Map 1, the goal will not move until the agent passes or fails by touching the goal or walls respectively.\r\n</p>\n<p>Map 2:\t\tOn Map 2, the goal will actively wander around the area. It will reset to a random position within the bounds if it touches the walls. It has active collision avoidance and will attempt to maneuver away from walls. The pink square is the spot on the circle radius the target will wander to and the blue oval is where the target will move to if it detects a wall.\r\n</p>", "metacritic": null, "released": "2023-04-16", "tba": false, "updated": "2023-04-17T13:42:21", "background_image": "https://media.rawg.io/media/screenshots/a37/a379b80191f1a21a49769e11b231353d.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 1, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["B-Games"], "genres": [], "publishers": [], "esrb_rating": null}