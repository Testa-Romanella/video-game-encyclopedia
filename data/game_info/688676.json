{"id": 688676, "slug": "ultra-tag", "name": "Ultra Tag!", "name_original": "Ultra Tag!", "description": "<p>This was a school project!</p>\n<p>Ultra Tag!\r\n</p>\n<p>\u00a0\r\n</p>\n<p>The controls are simply WASD to move and Space to jump!\r\n</p>\n<p>It characters are red (meaning run away), not it characters are green (meaning chase them if you are it)!\r\n</p>\n<p>As long as you are not it, you gain points! The first one to fill their score wins! The bottom right shows your score (top) and the score of whoever is winning (bottom)!\r\n</p>\n<p>I also made the character models myself (but not the animations)!\r\n</p>\n<p>The AIs have a pretty complicated but optimized pathfinding system, where adding more characters is almost negligible in performance because they share so much information! With 100 AIs, the only real cost to performance comes from the models themselves!\r\n</p>\n<p>\u00a0\r\n</p>\n<p>The very brief explanation for the pathfinding is:<br/>1. I press a button in the editor (Generate Nodes) that generates ground and air nodes in a grid-like fashion in the scene, and connects them with certain rules.<br/>2. I press a button in the editor (Reduce Nodes) that goes through the nodes and find some ways to delete redundant nodes (could be improved further) and rewire the nodes around it.<br/>3. I press a button in the editor (Calculate Paths) that uses a modification of the Floyd-Warshall algorithm to go through all the nodes, and (treating them like a directed weighted graph) finds the shortest paths from each node to each other node. At the same time, it also calculates \"From node X, what is the node the farthest from me?\"\r\n</p>\n<p>All these calculations are done in the editor, so the user never experiences this!!! Now, when going into playmode:\r\n</p>\n<p>If an AI is considered it (chasing):<br/>1. It finds the closest non-it character<br/>2. Look at node X closest to that character<br/>3. Looks at node Y closest to itself<br/>4. Uses the pathfinding information calculated earlier to find a path from X to Y (more specifically, the immediate next node to go to)\r\n</p>\n<p>If an AI is considered not it (running):<br/>1. Looks at node X closest to one of the it characters<br/>2. Looks at node Y the furthest node from that node X (calculated earlier)<br/>2. Looks at node Z closest to itself<br/>3. Uses the pathfinding information calculated earlier to find a path from Z to Y (more specifically, the immediate next node to go to)\r\n</p>\n<p>Then there's some more stuff to handle jumping that breaks some of the time, but was still cool to make! Plus, some slight randomness to make them sometimes pick a random place to go to!\r\n</p>\n<p>\u00a0\r\n</p>\n<p>Enjoy!\r\n</p>", "metacritic": null, "released": "2021-10-29", "tba": false, "updated": "2021-11-01T10:22:51", "background_image": "https://media.rawg.io/media/screenshots/c89/c89d3efa39df68854f7e224211dfbf96.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 28, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["Cyber Chroma"], "genres": [], "publishers": [], "esrb_rating": null}