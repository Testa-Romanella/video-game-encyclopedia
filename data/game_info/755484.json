{"id": 755484, "slug": "jamgame-by-marcos-retrobits", "name": "JAMGame by Marco's Retrobits", "name_original": "JAMGame by Marco's Retrobits", "description": "<p>JAMGame - Just Another Memory Game</p>\n<p>BASIC 10-Liner videogame for the Sinclair ZX81</p>\n<p>Marco Varesio (Marco's Retrobits)https://retrobits.itch.io</p>\n<p>English language blog: https://retrobits.altervista.org</p>\n<p>Italian language blog: https://somebitsofme.altervista.org</p>\n<p>YouTube channel: https://www.youtube.com/channel/UCWTxG8paNsOUEU5mPcNklXA</p>\n<p>Download/Play online: https://retrobits.itch.io/jamgame</p>\n<p>Gameplay video: </p>\n\n<p>JAMGame is just another memory videogame, inspired by the well-known Simon electronic game, for the Sinclair ZX81 homecomputer.</p>\n<p>JAMGame is my 3rd entry to the 11th edition (2022) of the BASIC 10 Liner Contest: https://basic10liner.com).</p>\n<p>Although some memory games have already been submitted to the past editions of the contest, there is no 10-statements version I am aware of, so I coded it ;-)</p>\n\n<p>Game description</p>\n<p>JAMGame is a single-player memory game.\u00a0</p>\n<p>A round in the game consists of the computer showing a sequence of pseudorandom numbers in the range between 1 and 4, after which the player must reproduce that order by pressing the corresponding keys, followed by Enter.</p>\n<p>As the game progresses, the number of buttons to be pressed increases. The initial length of the sequence is 3.</p>\n<p>If the player types the wrong sequence, the game is over and the program must be RUN again for another play.</p>\n<p>Two alternating graphics characters help distinguishing the single digits of the sequence to reproduce.\u00a0</p>\n<p>When the sequence presented by the computer is over, the \u2591 character is displayed near the last digit.</p>\n\n<p>Program description</p>\n<p>Variables</p>\n<p>`L`: Length of the sequence to reproduce\u00a0 \u00a0 \u00a0 \u00a0 \u00a0</p>\n<p>`A$`: String containing the sequence to reproduce\u00a0</p>\n<p>`B$`: Player input; must match the `A$` string\u00a0 \u00a0 \u00a0\u00a0</p>\n<p>`I`: Loop iterator\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0</p>\n<p>Program listing</p>\n<p>The program is 10 lines long and each line is shorter than 80 characters.\u00a0</p>\n<p>The most challenging aspect of the ZX81 BASIC programming is that the interpreter only allows one statement per line.</p>\n<p>```</p>\r\n\r\n1 LET L=3\r\n2 LET A$=\"\"\r\n3 FOR I=1 TO L\r\n4 LET A$=A$+STR$(1+INT(RND*4))\r\n5 PRINT AT 0,0;\"LEVEL:\";L-2,,A$(I);\" \";CHR$(9+(I/2=INT(I/2))*(I&lt;L)-1*(I=L))\r\n6 NEXT I\r\n7 INPUT B$\r\n8 IF B$&lt;&gt;A$ THEN STOP\r\n9 LET L=L+1\r\n10 GOTO 2\r\n<p>```</p>\n<p>The following listing can be used with the ZXText2P (http://freestuff.grok.co.uk/zxtext2p/index.html) tool to make a \".P\" file suitable for loading into X81 emulators.\u00a0</p>\n\n<p>Source code explained</p>\n<p>Initializations:</p>\n<p>Line 1 sets the initial length of the sequence `L` to 3.</p>\n<p>Hacking tip: you can change the initial length `L` of the sequence here.\u00a0</p>\n<p>If you do so, you should also change in line 5 the value subtracted from `L`, which determines the current level number, to the initial value of `L` - 1.</p>\n<p>Game loop:</p>\n<p>Line 2 resets the string containing the sequence to reproduce `A$` to empty string.</p>\n<p>Lines 3 to 6 contain a loop that is executed for `L` times.</p>\n<p>In line 4, a random digit between 1 and 4 is randomly chosen and appended to the sequence `A$`.</p>\n<p>Hacking tip**: you can reduce or extend the range of the digits in the sequence by changing the last value (4) in line 4.</p>\n<p>Line 5 prints the randomly selected digit.\u00a0</p>\n<p>Next to the digit, 2 graphic characters (half height shaded boxes, with codes 9 and 10) are alternately shown in order to help identifying when a new digit is printed. When the last digit is printed, i.e. when the `I` iterator equals `L`, the full height shaded box character (code: 8) is displayed.</p>\n<p>The current level is also printed.</p>\n<p>Line 7 prompts for the player's input `B$`.</p>\n<p>Line 8 checks the player input `B$` against the string to reproduce `A$`. If they differ, the game is over and the program STOPs (the `9/8` message is displayed on screen). Otherwise, the player successfully reproduced the sequence and program execution continues to line 9.</p>\n<p>Line 9 increments the length `L` of the sequence for the next round.</p>\n<p>Line 10 jumps back to the beginning of the game loop at line 2.</p>\n\n<p>Loading instructions</p>\n<p>JAMGame requires a real or emulated ZX81 with at least 4k RAM Pack expansion.\u00a0</p>\n<p>EightyOne emulator</p>\n<p>The following instructions apply to the EightyOne (https://sourceforge.net/projects/eightyone-sinclair-emulator/) emulator.</p>\n<p>Go to \"Options\" -&gt; \"Hardware...\" and make sure that ZX81 with at least a 4k RAM Pack is selected.</p>\n<p>Open \"Tools\" -&gt; \"Tape Manager...\" and ensure that automatic loading options are selected.</p>\n<p>Select \u201cOpen Tape\u2026\u201d from the \u201cFile\u201d menu to locate and load the **jamgame.p** file.\u00a0</p>\n<p>In the next seconds, if the emulator is configured in order to automatically load tape images, you should see something happening on the screen and finally a white screen with only the `0/0` message on the bottom.\u00a0</p>\n<p>If nothing happens, you must manually start tape image loading, by tapping the J key followed by SHIFT + P twice. You should see the `LOAD \"\"` message followed by a a black cursor.\u00a0</p>\n<p>Press ENTER to start loading.</p>\n<p>To run the program, tap the R key. You should see `RUN` followed by a black cursor on the bottom of the screen. Finally, press ENTER.</p>\n<p>Hacking tip: you can change the pseudorandom sequence by issuing a `RAND` command (T key followed by Enter before RUNning the game).</p>\n<p>To list the program, tap the K key. You should see `LIST` followed by a black cursor on the bottom of the screen. Finally, press ENTER.</p>\n<p>JtyOne Online ZX81 Emulator</p>\n<p>Alternatively, if your web browser supports Javascript, you can play directly in your browser (powered by JtyOne (http://www.zx81stuff.org.uk/zx81/jtyone.html) Online ZX81 Emulator).</p>\n<p>Just follow this link: https://retrobits.itch.io/jamgame to go to JAMGame page on itch.io, which hosts the emulator and downloads.</p>", "metacritic": null, "released": "2022-03-16", "tba": false, "updated": "2022-03-18T07:09:28", "background_image": "https://media.rawg.io/media/screenshots/93b/93be82cd009c3c4a45e57aa24f0d4ee4.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 5, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Puzzle"], "publishers": [], "esrb_rating": null}