{"id": 845853, "slug": "ruff-seas-a-pirate-treasure-map-adventure", "name": "Ruff Seas - A Pirate Treasure Map Adventure", "name_original": "Ruff Seas - A Pirate Treasure Map Adventure", "description": "<p>USE THIS MAP: https://bit.ly/RuffSeasMap<br/><br/>You're a swashbuckling pirate pooch on a quest to find your buried treasure.\u00a0 Navigate the salty seas and shoot down enemy ships, and gather resources from the shore to fix your ship and\u00a0make new cannonballs.<br/><br/>This is an entry into the MajorJam, with a limitation of having the game extend beyond the game itself.\u00a0 So, I thought the idea of a pirate treasure map was pretty interesting.\u00a0 My goal was to make a land that you can explore by yourself, but is a little frustrating unless you have a map.\u00a0 I think the concept works pretty well.<br/><br/>I made all the code, art, sound, and music myself during the jam all in Pico-8.<br/><br/><strong>This was my first major foray into making a legit game with Pico-8.\u00a0 I learned a TON on this project.\u00a0 Here are some of the highlights:</strong><br/><br/><strong>Collision: </strong>Pico-8 doesn't have a collision system... or really much of any system, it's pretty much roll-your-own everything other than a basic tilemap/sprites/sound.\u00a0 So I used some modified code from a sample collision project.\u00a0 It involves testing each corner of the spite and finding the tile under each.\u00a0\u00a0<br/><br/><strong>Autotile: </strong>Yeah there's no autotile at all.\u00a0 with a map this big I was facing a LOT of work just placing the land tiles.\u00a0 So, having recently learned about the power of for loops, I wrote a function to loop through each tile and replace the edges of the land based on if there are water tiles around it.\u00a0 Works really well!\u00a0 Definitely going to use this trick again.<br/><br/><strong>Resource Population:</strong>\u00a0 I used a similar for loop to randomly place resources around the map.\u00a0 Each blank piece of land/beach has a certain chance of spawning a tree or rock.<br/><br/><strong>Creating Bullets and Spawining enemies:</strong> If there's one thing I've learned on this project, it's the power of tables in Pico-8.\u00a0 The player, the enemies, and all the cannonballs are organized with tables.\u00a0 Tables are used as classes basically, so you can spawn a new instance of a class by adding a new item to a table.\u00a0 Then you can loop through all the instances in the table to animate each instance separately.\u00a0 Super cool.<br/><br/><strong>External Editors:</strong> I used Pico-8 on Mac OSX with Sublime Text.\u00a0 I had several different .lua files that were referenced in the Pico-8 file.\u00a0 This is the best way to work, man!\u00a0 So much easier to use on a 2nd screen!</p>", "metacritic": null, "released": "2022-08-30", "tba": false, "updated": "2022-09-02T17:36:15", "background_image": "https://media.rawg.io/media/screenshots/a3f/a3fe5bb0330dc51b9083eb50c30b3d5b.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 8, "game_series_count": 0, "reviews_count": 0, "platforms": ["Web"], "developers": ["caseyscreamsback"], "genres": ["Adventure"], "publishers": [], "esrb_rating": null}