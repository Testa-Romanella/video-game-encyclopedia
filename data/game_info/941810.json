{"id": 941810, "slug": "mine-c64-by-kevin-prosser", "name": "MINE (C64) by Kevin Prosser", "name_original": "MINE (C64) by Kevin Prosser", "description": "<p>MINE</p>\n<p>Minefield is a one player game for the Commodore 64.\u00a0</p>\n<p>There will be a slight delay while the mines are randomly placed on the minefield.\u00a0</p>\n<p>Once this is done, the minefield grid will be drawn.\u00a0</p>\n<p>Each unexplored space is represented by a circle. The cursor position will blink. Use the cursor keys to move the cursor around the minefield. Press the space bar to examine a spot. If the spot contains a mine, the game will be over. If there is no mine, the circle will be replaced with a number indicating how many adjacent spots have a mine in it. A number in the upper left will indicate how many spaces remain that do not contain a mine.\u00a0</p>\n<p>When the count decrements to zero, you will have examined all the open spaces without hitting a mine and you win. If you think a spot has a mine, you can flag that spot without examining it by typing the F key. A plus sign will replace the circle when a flag is present.</p>\n<p>1 K=20:L=K-2:PRINT\"SQSTBY...\":DIMM(K,K):DIMN(K,K):C=L*L:G=1105:FORX=1TOK:FORY=1TOK</p>\n<p>K is the size of the minefield, L is the playable portion. M array holds mine info, N array holds the number of adjacent mines to each spot. C is the number of non-mine locations. G is upper left of grid on the screen</p>\n<p>2 W=(X&lt;&gt;1)*(X&lt;&gt;K)*(Y&lt;&gt;1)*(Y&lt;&gt;K)*INT(RND(0)*1.1):N(X,Y)=0:C=C-W:M(X,Y)=W:NEXT</p>\n<p>W randomly places a mine inside the playable area. And decrements C, N array is reset to all zeros. To increase the difficulty, change the 1.1 in the random function to a slightly higher value.</p>\n<p>3 NEXT:FORX=2TO19:FORY=2TO19:H=0:FORI=-1TO1:FORJ=-1TO1:H=H+M(X+I,Y+J):NEXT:NEXT</p>\n<p>Count up the number of mines adjacent to each spot</p>\n<p>4 N(X,Y)=H:POKEG+x+40*Y,81:NEXT:NEXT:PRINT\"S\";C;\"SQCRSR=MOVE, SPACE=OPEN, F=FLAG</p>\n<p>place the grid on the screen, print the remaining open spaces, print instructions</p>\n<p>5 S=40*Y+X+G:Z$=\"OQ|] FX+\":X=2:Y=2</p>\n<p>S is location on screen given x y coordinates. Z$ is a string of allowable inputs</p>\n<p>6 I=0:GETA$:FORT=1TO8:I=I-T*(A$=MID$(Z$,T,1)):NEXT:F=PEEK(S):F=(F=209)OR(F=171)</p>\n<p>Get the index number for the user input. f is flag for counting remaining open spaces. 209 is the symbol for unexamined spot, 171 is symbol for flag \u201c+\u201d (also unexamined), any other symbol is for a previously examined spot.\u00a0</p>\n<p>7 POKES,127ANDPEEK(S):J=M(X,Y):X=X-(I=3)*(X&gt;2)+(I=4)*(X&lt;=l):if(I&gt;5)THENPOKES,43</p>\n<p>127and will Un-Reverse video of the symbol at the old cursor location, j is set to 1 if a mine is preset at current cursor location. update X value of cursor. Poke 43 puts a flag on the current space but does not examine it.</p>\n<p>8 Y=Y-(I=1)*(Y&gt;2)+(I=2)*(Y&lt;=l):S=X+40*Y+G:POKES,128ORPEEK(S):IFC&lt;1THENPRINT\"WIN!!!\"</p>\n<p>Move the Y value of the cursor and reverse video character at that location</p>\n<p>9 H=N(X,Y):IF(I=5)AND(J=0)THENPOKES,48+H:C=C+F:PRINT\"S\";C;:GOTO6</p>\n<p>If space bar (open) and there is no mine (j=0) then display on the screen the number of adjacent mines. Update count of open spaces remaining</p>\n<p>10 PRINT\"| \";:IF(I&lt;&gt;5)OR(M(X,Y)=0)THENGOTO6</p>\n<p>If a mine is at present cursor and player opens it, end program otherwise goto6 for new input</p>", "metacritic": null, "released": "2023-03-16", "tba": false, "updated": "2023-03-17T11:05:26", "background_image": "https://media.rawg.io/media/screenshots/a1a/a1a08ffd134b016765a34f1fae572018.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 14, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": ["Strategy"], "publishers": [], "esrb_rating": null}