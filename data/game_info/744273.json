{"id": 744273, "slug": "fishie-keep-the-sea-plastic-free-by-marcos-retrobi", "name": "Fishie - Keep the sea plastic free by Marco's Retrobits", "name_original": "Fishie - Keep the sea plastic free by Marco's Retrobits", "description": "<p>FISHIE - KEEP THE SEA PLASTIC FREE!</p>\n<p>BASIC 10 Liner action game for the Sinclair ZX Spectrum</p>\n<p>by Marco Varesio (Marco's Retrobits): https://retrobits.itch.io</p>\n<p>English language blog: https://retrobits.altervista.org</p>\n<p>Italian language blog: https://somebitsofme.altervista.org</p>\n<p>YouTube channel: https://www.youtube.com/channel/UCWTxG8paNsOUEU5mPcNklXA</p>\n<p>Download/play online: https://retrobits.itch.io/fishie</p>\n<p>Gameplay video: </p>\n\n<p>\"Fishie - Keep the sea plastic free!\" is a small game with a big ecological message.</p>\n<p>Help Fishie keep the sea clean of plastic waste, by catching the oxygen bubbles that emerge from the water before they pop.</p>\n<p>Whenever you catch a bubble, the garbage on the same line will disappear and Fishie will score a point.</p>\n<p>Contact with plastic waste is harmful and will make you lose one life.</p>\n<p>\"Fishie - Keep the sea plastic free!\" has been coded in BASIC language for the Sinclair ZX Spectrum homecomputer</p>\n<p>and is my (second) entry to the 11th edition (2022) of the BASIC 10 Liner Contest (http://basic10liner.com/), PUR-80 category.</p>\n\n<p>GAME DESCRIPTION</p>\n<p>When the program starts, the title screen is shown.</p>\n<p>You can start the game by pressing any key.</p>\n<p>The little yellow fish on the left side of the screen is Fishie, our hero.</p>\n<p>You can make Fishie swim up, down, left or right by pressing the e, d, o or p key respectively.</p>\n<p>The plastic waste emerges from the sea, on the right side of the screen, and is pushed leftwards by the waves.</p>\n<p>Contact with garbage will make it disappear, but Fishie will lose a life, so lingering on the left side of the screen is particularly dangerous.</p>\n<p>Luckily, oxygen bubbles emerge from the water, too.\u00a0</p>\n<p>Whenever Fishie catches a bubble, the garbage on the same line will disappear and you will score a point.</p>\n<p>You have to reach the bubbles as fast as possible, because the movement of the waves will make them pop.</p>\n<p>As the game progresses, oxygen bubbles will appear less and less frequently, making Fishie's task more difficult.</p>\n<p>The lower part of the screen displays useful information, such as your current score, the highest score, the number of lives left and a recap of the game controls.</p>\n\n<p>PROGRAM DESCRIPTION</p>\n<p>Variables</p>\n<p>h: High score</p>\n<p>s: Current score\u00a0</p>\n<p>l$(20,32): Array of 20 strings; each string is 32 characters long and represents a line in the game area</p>\n<p>e$: \"Empty\" line, i.e. a string with 32 white spaces</p>\n<p>i: Loop iterator</p>\n<p>a: Used both as temporary variable and as flag indicating a collision between Fishie and an oxygen bubble</p>\n<p>b: Flag indicating a collision between Fishie and a plastic waste</p>\n<p>x: Fishie horizontal position (column number)</p>\n<p>y: Fishie vertical position (line number)</p>\n<p>f: Lives left</p>\n<p>p: Oxygen bubble appearance probability</p>\n<p>l: Plastic waste appearance line</p>\n<p>c: Plastic waste appearance column</p>\n<p>k: Code of the pressed key</p>\n<p>s$: Character on the screen in Fishie's position (used for collision detection)</p>\n\n<p>Program listing</p>\r\n\r\n1 BORDER 5:PAPER 1:INK 5:LET h=0:LET s=0:DIM l$(20,32):LET e$=\"\":RESTORE 9:FOR i=65368TO65375:READ a:POKE i,a:LET e$=e$+\"  \":NEXT i\r\n2 CLS:LET x=5:LET y=11:LET f=3:LET p=.9:FOR i=1TO20:LET l$(i)=e$:NEXT i:PRINT AT 10,13;\"FISHIE\":GO SUB 10:PAUSE 0:LET s=0:CLS:GO SUB 10\r\n3 LET l=1+INT(RND*20):LET c=23+INT(RND*10):LET c$=CHR$(35-(l=y)*(c=x)*3)\r\n4 LET l$(l)=l$(l,2 TO c)+c$+l$(l,c+1 TO):LET k=CODE(INKEY$):IF k=0 THEN GO TO 6\r\n5 PRINT AT y,x;\" \":LET y=y-(k=101)*(y&gt;1)+(k=100)*(y&lt;20):LET x=x+(k=112)*(x&lt;31)-(k=111)*(x&gt;0)\r\n6 PRINT INK 3;AT l,0;l$(l):IF RND&lt;p THEN PRINT AT 1+INT(RND*20),1+INT(RND*30);\"o\"\r\n7 LET s$=SCREEN$(y,x):LET a=(s$=\"o\"):LET b=(s$=\"#\"):LET s=s+a:LET f=f-b:IF a THEN LET p=p-.01+.01*(p&lt;.15)\r\n8 IF a+b THEN LET l$(y)=e$:PRINT AT y,0;l$(y):GO SUB 10:BORDER (a*4+b*2)*(f&gt;0):BEEP .02+.4*b,15-30*b:BORDER 5\r\n9 PRINT AT y,x;INK 6;CHR$(32+112*(f&lt;&gt;0)):GO TO 3-(f=0):DATA 32,28,190,251,255,190,28,32\r\n10 LET h=s*(s&gt;=h)+h*(s&lt;h):PRINT #1;AT 0,0;\"Score:\";s,\"Hi:\";h,\"{A}:\";f,\"Keys:e,d,o,p.\":RETURN\r\n<p>Please note that this program listing is formatted in order to be used with the bas2tap(https://worldofspectrum.net/utilities/) utility,\u00a0</p>\n<p>which converts a BASIC listing in an ASCII text file to a .TAP emulator tape image.</p>\n<p>In particular, \"{A}\" represents the first user defined graphic charcter, with code 144 (0x90), which has been defined to the fish symbol.</p>\n\n<p>Source code explained</p>\n\n<p>Program initialization</p>\n<p>Line 1 is executed only once when the program is run and performs screen, variables and user defined graphic characters initializations.</p>\n<p>The FOR loop initializes the first UDG graphic character to the image of a fish, using DATA at line 9.</p>\n<p>1 BORDER 5:PAPER 1:INK 5:LET h=0:LET s=0:DIM l$(20,32):LET e$=\"\":RESTORE 9:FOR i=65368TO65375:READ a:POKE i,a:LET e$=e$+\"\u00a0 \":NEXT i</p>\n\n<p>Game initialization</p>\n<p>Line 2 is executed every time a new game starts. It clears the screen, performs some other initializations, displays the title screen and waits for a key press.</p>\n<p>In particular, the 20 lines in l$ are initialized to white spaces using e$.</p>\n<p>2 CLS:LET x=5:LET y=11:LET f=3:LET p=.9:FOR i=1TO20:LET l$(i)=e$:NEXT i:PRINT AT 10,13;\"FISHIE\":GO SUB 10:PAUSE 0:LET s=0:CLS:GO SUB 10</p>\n<p>Hacking tip: you can make the game harder by setting p (the probability with which oxygen bubbles are generated) to a lower value.\u00a0</p>\n<p>You can also change the number of available lives, by initializing f to a different value.</p>\n\n<p>Game loop</p>\n<p>Line 3 randomly chooses the position (line l, column c) where the plastic waste could appear.\u00a0</p>\n<p>c$ stores the character that will be displayed in the chosen position: if the chosen position overlaps with Fishie's position, c$ will be set to a white space (code 32), otherwise it will be set to the character used for the waste (\"#\", code 35).\u00a0</p>\n<p>I would have preferred to use a graphic character for the waste, but this causes problems with the SCREEN$ function, used in line 7 for collision detection, so I turned to the \"#\" character.</p>\n<p>3 LET l=1+INT(RND*20):LET c=23+INT(RND*10):LET c$=CHR$(35-(l=y)*(c=x)*3)</p>\n<p>Line 4 performs some string manipulation in order to simulate a wave at line l: the line is partially shifted to the left and the c$ character is inserted at column c.</p>\n<p>Then user input is tested and if no key is pressed, the program jumps to line 6.</p>\n<p>4 LET l$(l)=l$(l,2 TO c)+c$+l$(l,c+1 TO):LET k=CODE(INKEY$):IF k=0 THEN GO TO 6</p>\n<p>Line 5 is executed only if a key is pressed. Fishie is deleted from the screen by printing a white space and our hero's new position (x, y) is calculated based on the code of the pressed key.</p>\n<p>5 PRINT AT y,x;\" \":LET y=y-(k=101)*(y&gt;1)+(k=100)*(y&lt;20):LET x=x+(k=112)*(x&lt;31)-(k=111)*(x&gt;0)</p>\n<p>Hacking tip: the controls (up: key \"e\", character code: 101; down: key \"d\", character code: 100; right: key \"o\", character code 112; left: key \"p\", character code: 111) have chosen so that they are in the same position on the most common keyboard layouts (QWERTY, AZERTY, QWERTZ).</p>\n<p>You can configure different controls by changing the [character codes](https://worldofspectrum.org/ZXBasicManual/zxmanappa.html) in line 5.</p>\n<p>Line 6, prints line l, modified in line 4. Then, with a probability of p, an oxygen bubble (the character \"o\") is printed at a random position.</p>\n<p>6 PRINT INK 3;AT l,0;l$(l):IF RND&lt;p THEN PRINT AT 1+INT(RND*20),1+INT(RND*30);\"o\"</p>\n<p>Lines 7 and 8 handle collision detection. First, s$ is set to the character currently at Fishie's position on the screen.\u00a0</p>\n<p>If Fishie hits an oxygen bubble \"o\", a is set to 1, b is set to 0, the score s is incremented and the oxygen probability p is decremented (within a limit).</p>\n<p>Otherwise, if Fishie hits a plastic waste \"#\", a is set to 0, b is set to 1 and the lives count f is decremented.</p>\n<p>7 LET s$=SCREEN$(y,x):LET a=(s$=\"o\"):LET b=(s$=\"#\"):LET s=s+a:LET f=f-b:IF a THEN LET p=p-.01+.01*(p&lt;.15)</p>\n<p>If a collision was detected, the corresponding line on the screen is cleared (set to white spaces) and the game information displayed on screen is updated. The BORDER colour and a BEEP will notify whether the player scored a point or lost a life.</p>\n<p>8 IF a+b THEN LET l$(y)=e$:PRINT AT y,0;l$(y):GO SUB 10:BORDER (a*4+b*2)*(f&gt;0):BEEP .02+.4*b,15-30*b:BORDER 5</p>\n<p>In line 9, if the game is not over (lives count f is still greater than 0), Fishie is printed at the previously calculated position (x, y) and then the programs jumps to the beginning of the game loop at line 3 for the next iteration; otherwise the program jumps to line 2.</p>\n<p>Line 9 also contains DATA for the fish image.</p>\n<p>9 PRINT AT y,x;INK 6;CHR$(32+112*(f&lt;&gt;0)):GO TO 3-(f=0):DATA 32,28,190,251,255,190,28,32</p>\n\n<p>Print game status subroutine</p>\n<p>The routine at line 10 checks if current score s is the new high score and updates h accordingly.\u00a0</p>\n<p>Then, it prints score, high score, lives count and a recap of the game controls at the bottom of the screen.</p>\n<p>10 LET h=s*(s&gt;=h)+h*(s&lt;h):PRINT #1;AT 0,0;\"Score:\";s,\"Hi:\";h,\"{A}:\";f,\"Keys:e,d,o,p.\":RETURN</p>\n\n<p>Program lines length proof</p>\n<p>By replacing each BASIC token with a single character and removing redundant blank spaces, each line in the resulting source code does not exceed the 80 characters limit:</p>\n<p>1b5:C1:X5:lh=0:ls=0:dl$(20,32):le$=\"\":S9:fi=65368F65375:Aa:oi,a:le$=e$+\"\u00a0 \":ni</p>\n<p>2v:lx=5:ly=11:lf=3:lp=.9:fi=1F20:ll$(i)=e$:ni:pI10,13;\"FISHIE\":h10:m0:ls=0:v:h10</p>\n<p>3ll=1+R(T*20):lc=23+R(T*10):lc$=U(35-(l=y)*(c=x)*3)</p>\n<p>4ll$(l)=l$(l,2 Fc)+c$+l$(l,c+1 F):lk=I(XEY$):uk=0 Gg6</p>\n<p>5pIy,x;\" \":ly=y-(k=101)*(y&gt;1)+(k=100)*(y&lt;20):lx=x+(k=112)*(x&lt;31)-(k=111)*(x&gt;0)</p>\n<p>6pX3;Il,0;l$(l):uT&lt;p GpI1+R(T*20),1+R(T*30);\"o\"</p>\n<p>7ls$=K(y,x):la=(s$=\"o\"):lb=(s$=\"#\"):ls=s+a:lf=f-b:ua Glp=p-.01+.01*(p&lt;.15)</p>\n<p>8ua+b Gll$(y)=e$:pIy,0;l$(y):h10:b(a*4+b*2)*(f&gt;0):Z.02+.4*b,15-30*b:b5</p>\n<p>9pIy,x;X6;U(32+112*(f&lt;&gt;0)):g3-(f=0):D32,28,190,251,255,190,28,32</p>\n<p>10lh=s*(s&gt;=h)+h*(s&lt;h):p#1;I0,0;\"Score:\";s,\"Hi:\";h,\"{A}:\";f,\"Keys:e,d,o,p.\":y</p>\n<p>Therefore, \"Fishie - Keep the sea plastic free!\" is a suitable entry for the PUR-80 category of the BASIC 10 Liner Contest (https://basic10liner.com).</p>", "metacritic": null, "released": "2022-02-23", "tba": false, "updated": "2022-02-25T07:13:27", "background_image": "https://media.rawg.io/media/screenshots/071/071559ea3794560364324b8bafe95ce4.jpg", "website": "", "rating": 0.0, "rating_top": 0, "added_by_status": null, "playtime": 0, "achievements_count": 0, "ratings_count": 0, "suggestions_count": 5, "game_series_count": 0, "reviews_count": 0, "platforms": ["PC"], "developers": ["BASIC 10Liner"], "genres": [], "publishers": [], "esrb_rating": null}